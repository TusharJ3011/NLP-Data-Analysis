page intentionally left blank computer networks fifth edition page intentionally left blank computer networks fifth edition andrew tanenbaum vrije universiteit amsterdam netherlands david j wetherall university washington seattle wa prentice hall boston columbus indianapolis new york san francisco upper saddle river amsterdam cape town dubai london madrid milan paris montreal toronto delhi mexico city sao paulo sydney hong kong seoul singapore tapei tokyo editorial director marcia horton editor chief michael hirsch executive editor tracy dunkelberger assistant editor melinda haggerty editorial assistant allison michael vice president marketing patrice jones marketing manager yezan alayan marketing coordinator kathryn ferranti vice president production vince brien managing editor jeff holcomb senior operations supervisor alan fischer manufacturing buyer lisa mcdowell cover direction andrew tanenbaum david j wetherall tracy dunkelberger art director linda knowles cover designer susan paradise cover illustration jason consalvo interior design andrew tanenbaum av production project manager gregory l dulles interior illustrations laserwords inc media editor daniel sandin composition andrew tanenbaum copyeditor rachel head proofreader joe ruddick printer binder courier westford cover printer lehigh phoenix color hagerstown credits acknowledgments borrowed sources reproduced permission textbook appear appropriate page within text many designations manufacturers sellers distinguish products claimed trademarks designations appear book publisher aware trademark claim designations printed initial caps caps copyright pearson education inc publishing prentice hall rights reserved manufactured united states america publication protected copyright permission obtained publisher prior prohibited reproduction storage retrieval system transmission form means electronic mechanical photocopying recording likewise obtain permission use material work please submit written request pearson education inc permissions department boylston street suite boston massachusetts library congress cataloging publication data tanenbaum andrew 1944computer networks andrew tanenbaum david j wetherall 5th ed p cm includes bibliographical references index isbn 212695 alk paper isbn 13 alk paper computer networks wetherall david ii title tk5105 t36 004 dc22 7 3 crw 13 11 suzanne barbara daniel aron marvin matilde memory bram sweetie ast katrin lucy pepper djw page intentionally left blank contents xix preface introduction uses computer networks 1 business applications 2 home applications 3 mobile users 4 social issues network hardware 1 personal area networks 2 local area networks 3 metropolitan area networks 4 wide area networks 5 internetworks network software 1 protocol hierarchies 2 design issues layers 3 connection oriented versus connectionless service 4 service primitives 5 relationship services protocols reference models 1 osi reference model 2 tcp ip reference model 3 model used book vii viii contents comparison osi tcp ip reference models 5 critique osi model protocols 6 critique tcp ip reference model example networks 1 internet 2 third generation mobile phone networks 3 wireless lans 11 4 rfid sensor networks network standardization 1 telecommunications world 2 international standards world 3 internet standards world metric units outline rest book summary physical layer theoretical basis data communication 1 fourier analysis 2 bandwidth limited signals 3 maximum data rate channel guided transmission media 1 magnetic media 2 twisted pairs 3 coaxial cable 4 power lines 5 fiber optics wireless transmission 1 electromagnetic spectrum 2 radio transmission 3 microwave transmission 4 infrared transmission 5 light transmission contents ix communication satellites 1 geostationary satellites 2 medium earth orbit satellites 3 low earth orbit satellites 4 satellites versus fiber digital modulation multiplexing 1 baseband transmission 2 passband transmission 3 frequency division multiplexing 4 time division multiplexing 5 code division multiplexing public switched telephone network 1 structure telephone system 2 politics telephones 3 local loop modems adsl fiber 4 trunks multiplexing 5 switching mobile telephone system 1 first generation coco1g mobile phones analog voice 2 second generation 2g mobile phones digital voice 3 third generation 3g mobile phones digital voice data cable television 1 community antenna television 2 internet cable 3 spectrum allocation 4 cable modems 5 adsl versus cable summary data link layer data link layer design issues 1 services provided network layer 2 framing 3 error control 4 flow control x contents error detection correction 1 error correcting codes 2 error detecting codes elementary data link protocols 1 utopian simplex protocol 2 simplex stop wait protocol error free channel 3 simplex stop wait protocol noisy channel sliding window protocols 1 one bit sliding window protocol 2 protocol using go back n 3 protocol using selective repeat example data link protocols 1 packet sonet 2 adsl asymmetric digital subscriber loop summary medium access control sublayer channel allocation problem 1 static channel allocation 2 assumptions dynamic channel allocation multiple access protocols 1 aloha 2 carrier sense multiple access protocols 3 collision free protocols 4 limited contention protocols 5 wireless lan protocols ethernet 1 classic ethernet physical layer 2 classic ethernet mac sublayer protocol 3 ethernet performance 4 switched ethernet contents xi fast ethernet 6 gigabit ethernet 7 gigabit ethernet 8 retrospective ethernet wireless lans 1 11 architecture protocol stack 2 11 physical layer 3 11 mac sublayer protocol 4 11 frame structure 5 services broadband wireless 1 comparison 16 11 3g 2 16 architecture protocol stack 3 16 physical layer 4 16 mac sublayer protocol 5 16 frame structure bluetooth 1 bluetooth architecture 2 bluetooth applications 3 bluetooth protocol stack 4 bluetooth radio layer 5 bluetooth link layers 6 bluetooth frame structure rfid 1 epc gen architecture 2 epc gen physical layer 3 epc gen tag identi cation layer 4 tag identi cation message formats data link layer switching 1 uses bridges 2 learning bridges 3 spanning tree bridges 4 repeaters hubs bridges switches routers gateways 5 virtual lans summary xii contents network layer network layer design issues 1 store forward packet switching 2 services provided transport layer 3 implementation connectionless service 4 implementation connection oriented service 5 comparison virtual circuit datagram networks routing algorithms 1 optimality principle 2 shortest path algorithm 3 flooding 4 distance vector routing 5 link state routing 6 hierarchical routing 7 broadcast routing 8 multicast routing 9 anycast routing 10 routing mobile hosts 11 routing ad hoc networks congestion control algorithms 1 approaches congestion control 2 traf c aware routing 3 admission control 4 traf c throttling 5 load shedding quality service 1 application requirements 2 traf c shaping 3 packet scheduling 4 admission control 5 integrated services 6 differentiated services internetworking 1 networks differ 2 networks connected 3 tunneling contents xiii internetwork routing 5 packet fragmentation network layer internet 1 ip version protocol 2 ip addresses 3 ip version 4 internet control protocols 5 label switching mpls 6 ospf interior gateway routing protocol 7 bgp exterior gateway routing protocol 8 internet multicasting 9 mobile ip summary transport layer transport service 1 services provided upper layers 2 transport service primitives 3 berkeley sockets 4 example socket programming internet file server elements transport protocols 1 addressing 2 connection establishment 3 connection release 4 error control flow control 5 multiplexing 6 crash recovery congestion control 1 desirable bandwidth allocation 2 regulating sending rate 3 wireless issues internet transport protocols udp 1 introduction udp 2 remote procedure call 3 real time transport protocols xiv contents internet transport protocols tcp 1 introduction tcp 2 tcp service model 3 tcp protocol 4 tcp segment header 5 tcp connection establishment 6 tcp connection release 7 tcp connection management modeling 8 tcp sliding window 9 tcp timer management 10 tcp congestion control 11 future tcp performance issues 1 performance problems computer networks 2 network performance measurement 3 host design fast networks 4 fast segment processing 5 header compression 6 protocols long fat networks delay tolerant networking 1 dtn architecture 2 bundle protocol summary application layer dns domain name system 1 dns name space 2 domain resource records 3 name servers electronic mail 1 architecture services 2 user agent 3 message formats 4 message transfer 5 final delivery contents xv world wide web 1 architectural overview 2 static web pages 3 dynamic web pages web applications 4 http hypertext transfer protocol 5 mobile web 6 web search streaming audio video 1 digital audio 2 digital video 3 streaming stored media 4 streaming live media 5 real time conferencing content delivery 1 content internet traf c 2 server farms web proxies 3 content delivery networks 4 peer peer networks summary network security cryptography 1 introduction cryptography 2 substitution ciphers 3 transposition ciphers 4 one time pads 5 two fundamental cryptographic principles symmetric key algorithms 1 des data encryption standard 2 aes advanced encryption standard 3 cipher modes 4 ciphers 5 cryptanalysis xvi contents public key algorithms 1 rsa 2 public key algorithms digital signatures 1 symmetric key signatures 2 public key signatures 3 message digests 4 birthday attack management public keys 1 certi cates 2 x 3 public key infrastructures communication security 1 ipsec 2 firewalls 3 virtual private networks 4 wireless security authentication protocols 1 authentication based shared secret key 2 establishing shared key dif e hellman key exchange 3 authentication using key distribution center 4 authentication using kerberos 5 authentication using public key cryptography email security 1 pgp pretty good privacy 2 mime web security 1 threats 2 secure naming 3 ssl secure sockets layer 4 mobile code security social issues 1 privacy 2 freedom speech 3 copyright summary contents reading list bibliography xvii suggestions reading 1 introduction general works 2 physical layer 3 data link layer 4 medium access control sublayer 5 network layer 6 transport layer 7 application layer 8 network security alphabetical bibliography index page intentionally left blank preface book fth edition edition corresponded different phase way computer networks used rst edition appeared networks academic curiosity second edition appeared networks used universities large businesses third edition appeared computer networks especially internet become daily reality millions people fourth edition wireless networks mobile computers become commonplace accessing web internet fth edition networks content distribution especially videos using cdns peer peer networks mobile phones small computers internet new fifth edition among many changes book important one addition prof david j wetherall co author david brings rich background networking cut teeth designing metropolitan area networks years ago worked internet wireless networks ever since professor university washington teaching research computer networks related topics past decade course book also many changes keep ever changing world computer networks among revised new material wireless networks 12 16 3g networks used smart phones rfid sensor networks content distribution using cdns peer peer networks real time media stored streaming live sources internet telephony voice ip delay tolerant networks detailed chapter chapter list follows xix xx preface chapter introductory function fourth edition contents revised brought date internet mobile phone networks 11 rfid sensor networks discussed examples computer networks material original ethernet vampire taps removed along material atm chapter covers physical layer expanded coverage digital modulation including ofdm widely used wireless networks 3g networks based cdma new technologies discussed including fiber home power line networking chapter point point links improved two ways material codes error detection correction updated also includes brief description modern codes important practice e g convolutional ldpc codes examples protocols use packet sonet adsl sadly material protocol veri cation removed little used chapter mac sublayer principles timeless technologies changed sections example networks redone accordingly including gigabit ethernet 11 16 bluetooth rfid also updated coverage lan switching including vlans chapter network layer covers ground fourth edition revisions update material add depth particularly quality service relevant real time media internetworking sections bgp ospf cidr expanded treatment multicast routing anycast routing included chapter transport layer material added revised removed new material describes delay tolerant networking congestion control general revised material updates expands coverage tcp congestion control material removed described connection oriented network layers something rarely seen chapter applications also updated enlarged material dns email similar fourth edition past years many developments use web streaming media content delivery accordingly sections web streaming media brought date new section covers content distribution including cdns peer peer networks chapter security still covers symmetric public key cryptography con dentiality authenticity material techniques used practice including rewalls vpns updated new material 11 security kerberos v5 added chapter contains renewed list suggested readings comprehensive bibliography citations current literature half papers books written later rest citations classic papers preface xxi list acronyms computer books full acronyms one exception time nished reading one following ring bell adsl aes ajax aodv ap arp arq bgp boc cdma cdn cgi cidr crl csma css dct des dhcp dht difs dmca dmt dmz dns docsis dom dslam dtn fcfs fdd fddi fdm fec fifo fsk ftp gprs gsm hdtv hfc hmac http iab icann icmp idea ietf imap imp ip iptv irtf iso isp itu jpeg jsp jvm lan lata lec leo llc lsr lte man mfj mime mpeg mpls msc mtso mtu nap nat nrz nsap ofdm osi ospf paws pcm pgp pim pki pop pots ppp pstn qam qpsk red rfc rfid rpc rsa rtsp sha sip smtp snr soap sonet spe ssl tcp tdd tdm tsap udp umts url vlan vsat wan wdm xml worry appear boldface type carefully de ned used fun test see many identify reading book write number margin try reading book use book help instructors use book text courses ranging length quarters semesters structured chapters core optional material sections marked table contents optional ones major section e g marked subsections optional provide material network technologies useful omitted short course without loss continuity course students encouraged read sections well extent time material date value instructors resource materials following protected instructors resource materials available publisher web site www pearsonhighered com tanenbaum username password please contact local pearson representative solutions manual powerpoint lecture slides students resource materials resources students available open access companion web site link www pearsonhighered com tanenbaum including web resources links tutorials organizations faqs figures tables programs book steganography demo protocol simulators xxii preface acknowledgements many people helped us course fth edition would especially like thank emmanuel agu worcester polytechnic institute yoris au university texas antonio nikhil bhargava aircom international inc michael buettner university washington john day boston university kevin fall intel labs ronald fulle rochester institute technology ben greenstein intel labs daniel halperin university washington bob kinicki worcester polytechnic institute tadayoshi kohno university washington sarvish kulkarni villanova university hank levy university washington ratul mahajan microsoft research craig partridge bbn michael piatek university washington joshua smith intel labs neil spring university maryland david teneyuca university texas antonio tammy vandegrift university portland bo yuan rochester institute technology providing ideas feedback melody kadenko julie svendsen provided administrative support david shivakant mishra university colorado boulder paul nagin chimborazo publishing inc thought many new challenging end chapter problems editor pearson tracy dunkelberger usual helpful self many ways large small melinda haggerty jeff holcomb good job keeping things running smoothly steve armstrong letourneau university prepared powerpoint slides stephen turner university michigan flint artfully revised web resources simulators accompany text copyeditor rachel head odd hybrid eye eagle memory elephant reading corrections us wondered ever made past third grade finally come important people suzanne times still endless patience love barbara marvin know difference good textbooks bad ones always inspiration produce good ones daniel matilde welcome additions family aron unlikely read book soon likes nice pictures page ast katrin lucy provided endless support always managed keep smile face thank djw andrew tanenbaum david j wetherall 1 introduction past three centuries dominated single new technology 18th century era great mechanical systems accompanying industrial revolution 19th century age steam engine 20th century key technology information gathering processing distribution among developments saw installation worldwide telephone networks invention radio television birth unprecedented growth computer industry launching communication satellites course internet result rapid technological progress areas rapidly converging 21st century differences collecting transporting storing processing information quickly disappearing organizations hundreds offices spread wide geographical area routinely expect able examine current status even remote outpost push button ability gather process distribute information grows demand ever sophisticated information processing grows even faster although computer industry still young compared industries e g automobiles air transportation computers made spectacular progress short time first two decades existence computer systems highly centralized usually within single large room infrequently room glass walls visitors could gawk great electronic wonder inside medium sized company university might 2 introduction one two computers large institutions dozen idea within forty years vastly powerful computers smaller postage stamps would mass produced billions pure science fiction merging computers communications profound influence way computer systems organized dominant concept computer center room large computer users bring work processing totally obsolete although data centers holding thousands internet servers becoming common old model single computer serving organization computational needs replaced one large number separate interconnected computers job systems called computer networks design organization networks subjects book throughout book use term computer network mean collection autonomous computers interconnected single technology two computers said interconnected able exchange information connection need via copper wire fiber optics microwaves infrared communication satellites also used networks come many sizes shapes forms see later usually connected together make larger networks internet well known example network networks considerable confusion literature computer network distributed system key distinction distributed system collection independent computers appears users single coherent system usually single model paradigm presents users often layer software top operating system called middleware responsible implementing model well known example distributed system world wide web runs top internet presents model everything looks like document web page computer network coherence model software absent users exposed actual machines without attempt system make machines look act coherent way machines different hardware different operating systems fully visible users user wants run program remote machine log onto machine run effect distributed system software system built top network software gives high degree cohesiveness transparency thus distinction network distributed system lies software especially operating system rather hardware nevertheless considerable overlap two subjects example distributed systems computer networks need move files around difference lies invokes movement system user read throughout book sec uses computer networks although book primarily focuses networks many topics also important distributed systems information distributed systems see tanenbaum van steen uses computer networks start examine technical issues detail worth devoting time pointing people interested computer networks used nobody interested computer networks would built start traditional uses companies move home networking recent developments regarding mobile users finish social issues business applications companies substantial number computers example company may computer worker use design products write brochures payroll initially computers may worked isolation others point management may decided connect able distribute information throughout company put slightly general form issue resource sharing goal make programs equipment especially data available anyone network without regard physical location resource user obvious widespread example group office workers share common printer none individuals really needs private printer high volume networked printer often cheaper faster easier maintain large collection individual printers however probably even important sharing physical resources printers tape backup systems sharing information companies small large vitally dependent computerized information companies customer records product information inventories financial statements tax information much online computers suddenly went bank could last five minutes modern manufacturing plant computer controlled assembly line would last even seconds even small travel agency three person law firm highly dependent computer networks allowing employees access relevant information documents instantly smaller companies computers likely single office perhaps single building larger ones computers employees may scattered dozens offices plants many countries nevertheless sales person new york might sometimes need access product inventory 4 introduction database singapore networks called vpns virtual private networks may used join individual networks different sites one extended network words mere fact user happens 000 km away data prevent using data though local goal may summarized saying attempt end tyranny geography simplest terms one imagine company information system consisting one databases company information number employees need access remotely model data stored powerful computers called servers often centrally housed maintained system administrator contrast employees simpler machines called clients desks access remote data example include spreadsheets constructing sometimes refer human user client machine client clear context whether mean computer user client server machines connected network illustrated note shown network simple oval without detail use form mean network abstract sense detail required provided client server network network two clients one server whole arrangement called client server model widely used forms basis much network usage popular realization web application server generates web pages based database response client requests may update database client server model applicable client server building belong company also far apart example person home accesses page world wide web model employed remote web server server user personal sec uses computer networks computer client conditions one server handle large number hundreds thousands clients simultaneously look client server model detail see two processes e running programs involved one client machine one server machine communication takes form client process sending message network server process client process waits reply message server process gets request performs requested work looks requested data sends back reply messages shown client machine server machine request network reply client process server process client server model involves requests replies second goal setting computer network people rather information even computers computer network provide powerful communication medium among employees virtually every company two computers email electronic mail employees generally use great deal daily communication fact common gripe around water cooler much email everyone deal much quite meaningless bosses discovered send often content free message subordinates push button telephone calls employees may carried computer network instead phone company technology called ip telephony voice ip voip internet technology used microphone speaker end may belong voip enabled phone employee computer companies find wonderful way save telephone bills richer forms communication made possible computer networks video added audio employees distant locations see hear hold meeting technique powerful tool eliminating cost time previously devoted travel desktop sharing lets remote workers see interact graphical computer screen makes easy two people work far apart read write shared blackboard write report together one worker makes change online document others see change immediately instead waiting several days letter speedup makes cooperation among far flung groups people easy previously impossible ambitious forms remote coordination telemedicine starting used e g 6 introduction remote patient monitoring may become much important sometimes said communication transportation race whichever wins make obsolete third goal many companies business electronically especially customers suppliers new model called e commerce electronic commerce grown rapidly recent years airlines bookstores retailers discovered many customers like convenience shopping home consequently many companies provide catalogs goods services online take orders online manufacturers automobiles aircraft computers among others buy subsystems variety suppliers assemble parts using computer networks manufacturers place orders electronically needed reduces need large inventories enhances efficiency home applications ken olsen president digital equipment corporation number two computer vendor world ibm asked digital going personal computer market big way said reason individual computer home history showed otherwise digital longer exists people initially bought computers word processing games recently biggest reason buy home computer probably internet access many consumer electronic devices set top boxes game consoles clock radios come embedded computers computer networks especially wireless networks home networks broadly used entertainment including listening looking creating music photos videos internet access provides home users connectivity remote computers companies home users access information communicate people buy products services e commerce main benefit comes connecting outside home bob metcalfe inventor ethernet hypothesized value network proportional square number users roughly number different connections may made gilder hypothesis known metcalfe law helps explain tremendous popularity internet comes size access remote information comes many forms surfing world wide web information fun information available includes arts business cooking government health history hobbies recreation science sports travel many others fun comes many ways mention plus ways better left unmentioned many newspapers gone online personalized example sometimes possible tell newspaper want everything corrupt sec uses computer networks politicians big fires scandals involving celebrities epidemics football thank sometimes possible selected articles downloaded computer sleep trend continues cause massive unemployment among year old paperboys newspapers like distribution always weakest link whole production chain course make model work first figure make money new world something entirely obvious since internet users expect everything free next step beyond newspapers plus magazines scientific journals online digital library many professional organizations acm www acm org ieee computer society www computer org already journals conference proceedings online electronic book readers online libraries may make printed books obsolete skeptics take note effect printing press medieval illuminated manuscript much information accessed using client server model different popular model accessing information goes name peer peer communication parameswaran et al form individuals form loose group communicate others group shown every person principle communicate one people fixed division clients servers peer peer system fixed clients servers many peer peer systems bittorrent cohen central database content instead user maintains database locally provides list nearby people members system new user go existing member see get names members inspect content names lookup process repeated indefinitely build large local database activity would get tedious people computers excel 8 introduction peer peer communication often used share music videos really hit big time around music sharing service called napster shut probably biggest copyright infringement case recorded history lam tan macedonia legal applications peer peer communication also exist include fans sharing public domain music families sharing photos movies users downloading public software packages fact one popular internet applications email inherently peer peer form communication likely grow considerably future applications involve interactions person remote database full information second broad category network use person person communication basically 21st century answer 19th century telephone e mail already used daily basis millions people world use growing rapidly already routinely contains audio video well text pictures smell may take teenager worth salt addicted instant messaging facility derived unix talk program use since around allows two people type messages real time multi person messaging services twitter service lets people send short text messages called tweets circle friends willing audiences internet used applications carry audio e g internet radio stations video e g youtube besides cheap way call distant friends applications provide rich experiences telelearning meaning attending classes without inconvenience get bed first long run use networks enhance human human communication may prove important others may become hugely important people geographically challenged giving access services people living middle big city person person communications accessing information social network applications flow information driven relationships people declare one popular social networking sites facebook lets people update personal profiles shares updates people declared friends social networking applications make introductions via friends friends send news messages friends twitter much even loosely groups people work together create content wiki example collaborative web site members community edit famous wiki wikipedia encyclopedia anyone edit thousands wikis third category electronic commerce broadest sense term home shopping already popular enables users inspect online catalogs thousands companies catalogs interactive showing products different viewpoints configurations personalized sec uses computer networks customer buys product electronically figure use online technical support may consulted another area e commerce widely used access financial institutions many people already pay bills manage bank accounts handle investments electronically trend surely continue networks become secure one area virtually nobody foresaw electronic flea markets e flea online auctions second hand goods become massive industry unlike traditional e commerce follows client server model online auctions peer peer sense consumers act buyers sellers forms e commerce acquired cute little tags based fact pronounced popular ones listed tag full name example b2c business consumer ordering books online b2b business business car manufacturer ordering tires supplier g2c government consumer government distributing tax forms electronically c2c consumer consumer auctioning second hand products online p2p peer peer music sharing forms e commerce fourth category entertainment made huge strides home recent years distribution music radio television programs movies internet beginning rival traditional mechanisms users find buy download mp3 songs dvd quality movies add personal collection tv shows reach many homes via iptv ip television systems based ip technology instead cable tv radio transmissions media streaming applications let users tune internet radio stations watch recent episodes favorite tv shows naturally content moved around house different devices displays speakers usually wireless network soon may possible search movie television program ever made country displayed screen instantly new films may become interactive user occasionally prompted story direction macbeth murder duncan bide time alternative scenarios provided cases live television may also become interactive audience participating quiz shows choosing among contestants another form entertainment game playing already multiperson real time simulation games like hide seek virtual dungeon flight 10 introduction simulators players one team trying shoot players opposing team virtual worlds provide persistent setting thousands users experience shared reality three dimensional graphics last category ubiquitous computing computing embedded everyday life vision mark weiser many homes already wired security systems include door window sensors many sensors folded smart home monitor energy consumption electricity gas water meters could also report usage network would save money would need send meter readers smoke detectors could call fire department instead making big noise little value one home cost sensing communication drops measurement reporting done networks increasingly consumer electronic devices networked example high end cameras already wireless network capability use send photos nearby display viewing professional sports photographers also send photos editors real time first wirelessly access point internet devices televisions plug wall use power line networks send information throughout house wires carry electricity may surprising objects network objects think computers may sense communicate information example shower may record water usage give visual feedback lather report home environmental monitoring application done help save water bill technology called rfid radio frequency identification push idea even future rfid tags passive e battery chips size stamps already affixed books passports pets credit cards items home lets rfid readers locate communicate items distance several meters depending kind rfid originally rfid commercialized replace barcodes succeeded yet barcodes free rfid tags cost cents course rfid tags offer much price rapidly declining may turn real world internet things itu mobile users mobile computers laptop handheld computers one fastest growing segments computer industry sales already overtaken desktop computers would anyone want one people go often want use mobile devices read send email tweet watch movies download music play games simply surf web information want things home office naturally want anywhere land sea air sec uses computer networks connectivity internet enables many mobile uses since wired connection impossible cars boats airplanes lot interest wireless networks cellular networks operated telephone companies one familiar kind wireless network blankets us coverage mobile phones wireless hotspots based 11 standard another kind wireless network mobile computers sprung everywhere people go resulting patchwork coverage cafes hotels airports schools trains planes anyone laptop computer wireless modem turn computer connected internet hotspot though computer plugged wired network wireless networks great value fleets trucks taxis delivery vehicles repairpersons keeping contact home base example many cities taxi drivers independent businessmen rather employees taxi company cities taxis display driver see customer calls central dispatcher types pickup destination points information displayed drivers displays beep sounds first driver hit button display gets call wireless networks also important military able fight war anywhere earth short notice counting using local networking infrastructure probably good idea better bring although wireless networking mobile computing often related identical shows see distinction fixed wireless mobile wireless networks even notebook computers sometimes wired example traveler plugs notebook computer wired network jack hotel room mobility without wireless network wireless mobile desktop computers offices typical applications yes notebook computer used hotel room yes networks unwired buildings yes yes store inventory handheld computer combinations wireless networks mobile computing conversely wireless computers mobile home offices hotels lack suitable cabling convenient connect desktop computers media players wirelessly install wires installing wireless network may require little buying small box electronics unpacking plugging solution may far cheaper workmen put cable ducts wire building finally also true mobile wireless applications people walking around stores handheld computers recording inventory many busy 12 introduction airports car rental return clerks work parking lot wireless mobile computers scan barcodes rfid chips returning cars mobile device built printer calls main computer gets rental information prints bill spot perhaps key driver mobile wireless applications mobile phone text messaging texting tremendously popular lets mobile phone user type short message delivered cellular network another mobile subscriber people would predicted ten years ago teenagers tediously typing short text messages mobile phones would immense money maker telephone companies texting short message service known outside u profitable since costs carrier tiny fraction one cent relay text message service charge far long awaited convergence telephones internet finally arrived accelerate growth mobile applications smart phones popular iphone combine aspects mobile phones mobile computers 3g 4g cellular networks connect provide fast data services using internet well handling phone calls many advanced phones connect wireless hotspots automatically switch networks choose best option user consumer electronics devices also use cellular hotspot networks stay connected remote computers electronic book readers download newly purchased book next edition magazine today newspaper wherever roam electronic picture frames update displays cue fresh images since mobile phones know locations often equipped gps global positioning system receivers services intentionally location dependent mobile maps directions obvious candidate gps enabled phone car probably better idea searches nearby bookstore chinese restaurant local weather forecast services may record location annotating photos videos place made annotation known geo tagging area mobile phones starting used commerce mobile commerce senn short text messages mobile used authorize payments food vending machines movie tickets small items instead cash credit cards charge appears mobile phone bill equipped nfc near field communication technology mobile act rfid smartcard interact nearby reader payment driving forces behind phenomenon mobile device makers network operators trying hard figure get piece e commerce pie store point view scheme may save credit card company fee several percent sec uses computer networks course plan may backfire since customers store might use rfid barcode readers mobile devices check competitors prices buying use get detailed report else item purchased nearby price one huge thing commerce going mobile phone users accustomed paying everything contrast internet users expect everything free internet web site charged fee allow customers pay credit card would immense howling noise users however mobile phone operator customers pay items store waving phone cash register tacked fee convenience would probably accepted normal time tell doubt uses mobile wireless computers grow rapidly future size computers shrinks probably ways one foresee let us take quick look possibilities sensor networks made nodes gather wirelessly relay information sense state physical world nodes may part familiar items cars phones may small separate devices example car might gather data location speed vibration fuel efficiency board diagnostic system upload information database hull et al data help find potholes plan trips around congested roads tell gas guzzler compared drivers stretch road sensor networks revolutionizing science providing wealth data behavior could previously observed one example tracking migration individual zebras placing small sensor animal juang et al researchers packed wireless computer cube mm edge warneke et al mobile computers small even small birds rodents insects tracked even mundane uses parking meters significant make use data previously available wireless parking meters accept credit debit card payments instant verification wireless link also report use wireless network would let drivers download recent parking map car find available spot easily course meter expires might also check presence car bouncing signal report expiration parking enforcement estimated city governments u alone could collect additional billion way harte et al wearable computers another promising application smart watches radios part mental space since appearance dick tracy comic strip buy devices may implanted pacemakers insulin pumps controlled wireless network lets doctors test reconfigure easily could also lead nasty problems devices insecure average pc hacked easily halperin et al 14 introduction social issues computer networks like printing press years ago allow ordinary citizens distribute view content ways previously possible along good comes bad new found freedom brings many unsolved social political ethical issues let us briefly mention thorough study would require full book least social networks message boards content sharing sites host applications allow people share views like minded individuals long subjects restricted technical topics hobbies like gardening many problems arise trouble comes topics people actually care like politics religion sex views publicly posted may deeply offensive people worse yet may politically correct furthermore opinions need limited text high resolution color photographs video clips easily shared computer networks people take live let live view others feel posting certain material e g verbal attacks particular countries religions pornography etc simply unacceptable content must censored different countries different conflicting laws area thus debate rages past people sued network operators claiming responsible contents carry newspapers magazines inevitable response network like telephone company post office expected police users say come slight surprise learn network operators block content reasons users peer peer applications network service cut network operators find profitable carry large amounts traffic sent applications operators would probably like treat different companies differently big company pay well get good service small time player get poor service opponents practice argue peer peer content treated way bits network argument communications differentiated content source providing content known network neutrality wu probably safe say debate go many parties involved tussle content instance pirated music movies fueled massive growth peer peer networks please copyright holders threatened sometimes taken legal action automated systems search peer peer networks fire warnings network operators users suspected infringing copyright united states warnings known dmca takedown notices digital millennium copyright act sec uses computer networks search arms race hard reliably catch copyright infringement even printer might mistaken culprit piatek et al computer networks make easy communicate also make easy people run network snoop traffic sets conflicts issues employee rights versus employer rights many people read write email work many employers claimed right read possibly censor employee messages including messages sent home computer outside working hours employees agree especially latter part another conflict centered around government versus citizen rights fbi installed systems many internet service providers snoop incoming outgoing email nuggets interest one early system originally called carnivore bad publicity caused renamed innocent sounding dcs1000 blaze bellovin sobel zacks goal systems spy millions people hope perhaps finding information illegal activities unfortunately spies fourth amendment u constitution prohibits government searches without search warrant government often ignores course government monopoly threatening people privacy private sector bit profiling users example small files called cookies web browsers store users computers allow companies track users activities cyberspace may also allow credit card numbers social security numbers confidential information leak internet berghel companies provide web based services may maintain large amounts personal information users allows study user activities directly example google read email show advertisements based interests use email service gmail new twist mobile devices location privacy beresford stajano part process providing service mobile device network operators learn different times day allows track movements may know nightclub frequent medical center visit computer networks also offer potential increase privacy sending anonymous messages situations capability may desirable beyond preventing companies learning habits provides example way students soldiers employees citizens blow whistle illegal behavior part professors officers superiors politicians without fear reprisals hand united states democracies law specifically permits accused person right confront challenge accuser court anonymous accusations used evidence internet makes possible find information quickly great deal ill considered misleading downright wrong medical advice 16 introduction plucked internet pain chest may come nobel prize winner high school dropout information frequently unwanted electronic junk mail spam become part life spammers collected millions email addresses would marketers cheaply send computer generated messages resulting flood spam rivals flow messages real people fortunately filtering software able read discard spam generated computers lesser greater degrees success still content intended criminal behavior web pages email messages containing active content basically programs macros execute receiver machine contain viruses take computer might used steal bank account passwords computer send spam part botnet pool compromised machines phishing messages masquerade originating trustworthy party example bank try trick revealing sensitive information example credit card numbers identity theft becoming serious problem thieves collect enough information victim obtain credit cards documents victim name difficult prevent computers impersonating people internet problem led development captchas computer asks person solve short recognition task example typing letters shown distorted image show human von ahn process variation famous turing test person asks questions network judge whether entity responding human lot problems could solved computer industry took computer security seriously messages encrypted authenticated would harder commit mischief technology well established study detail chap problem hardware software vendors know putting security features costs money customers demanding features addition substantial number problems caused buggy software occurs vendors keep adding features programs inevitably means code thus bugs tax new features might help might tough sell quarters refund defective software might nice except would bankrupt entire software industry first year computer networks raise new legal problems interact old laws electronic gambling provides example computers simulating things decades simulate slot machines roulette wheels blackjack dealers gambling equipment well illegal lot places trouble gambling legal lot places england example casino owners grasped potential internet gambling happens gambler casino server different countries conflicting laws good question sec network hardware network hardware time turn attention applications social aspects networking dessert technical issues involved network design spinach generally accepted taxonomy computer networks fit two dimensions stand important transmission technology scale examine turn broadly speaking two types transmission technology widespread use broadcast links point point links point point links connect individual pairs machines go source destination network made point point links short messages called packets certain contexts may first visit one intermediate machines often multiple routes different lengths possible finding good ones important point point networks point point transmission exactly one sender exactly one receiver sometimes called unicasting contrast broadcast network communication channel shared machines network packets sent machine received others address field within packet specifies intended recipient upon receiving packet machine checks address field packet intended receiving machine machine processes packet packet intended machine ignored wireless network common example broadcast link communication shared coverage region depends wireless channel transmitting machine analogy consider someone standing meeting room shouting watson come want although packet may actually received heard many people watson respond others ignore broadcast systems usually also allow possibility addressing packet destinations using special code address field packet code transmitted received processed every machine network mode operation called broadcasting broadcast systems also support transmission subset machines known multicasting alternative criterion classifying networks scale distance important classification metric different technologies used different scales classify multiple processor systems rough physical size top personal area networks networks meant one person beyond come longer range networks divided local metropolitan wide area networks increasing scale finally connection two networks called internetwork worldwide internet certainly best known example internetwork 18 introduction soon even larger internetworks interplanetary internet connects networks across space burleigh et al interprocessor distance processors located 1m square meter room building km campus km city km country km continent 000 km example personal area network local area network metropolitan area network wide area network planet internet classification interconnected processors scale book concerned networks scales following sections give brief introduction network hardware scale personal area networks pans personal area networks let devices communicate range person common example wireless network connects computer peripherals almost every computer attached monitor keyboard mouse printer without using wireless connection must done cables many new users hard time finding right cables plugging right little holes even though usually color coded computer vendors offer option sending technician user home help users companies got together design short range wireless network called bluetooth connect components without wires idea devices bluetooth need cables put turn work together many people ease operation big plus simplest form bluetooth networks use master slave paradigm system unit pc normally master talking mouse keyboard etc slaves master tells slaves addresses use broadcast long transmit frequencies use bluetooth used settings often used connect headset mobile phone without cords allow digital music player sec network hardware bluetooth pan configuration connect car merely brought within range completely different kind pan formed embedded medical device pacemaker insulin pump hearing aid talks user operated remote control discuss bluetooth detail chap pans also built technologies communicate short ranges rfid smartcards library books study rfid chap local area networks next step lan local area network lan privately owned network operates within nearby single building like home office factory lans widely used connect personal computers consumer electronics let share resources e g printers exchange information lans used companies called enterprise networks wireless lans popular days especially homes older office buildings cafeterias places much trouble install cables systems every computer radio modem antenna uses communicate computers cases computer talks device ceiling shown device called ap access point wireless router base station relays packets wireless computers also internet ap like popular kid school everyone wants talk however computers close enough communicate directly one another peer peer configuration standard wireless lans called ieee 11 popularly known wifi become widespread runs speeds anywhere 20 introduction access point wired network ports ethernet switch rest network wireless wired lans 11 b switched ethernet hundreds mbps book adhere tradition measure line speeds megabits sec mbps 000 bits sec gigabits sec gbps 000 000 bits sec discuss 11 chap wired lans use range different transmission technologies use copper wires use optical fiber lans restricted size means worst case transmission time bounded known advance knowing bounds helps task designing network protocols typically wired lans run speeds mbps gbps low delay microseconds nanoseconds make errors newer lans operate gbps compared wireless networks wired lans exceed dimensions performance easier send signals wire fiber air topology many wired lans built point point links ieee popularly called ethernet far common type wired lan b shows sample topology switched ethernet computer speaks ethernet protocol connects box called switch point point link hence name switch multiple ports connect one computer job switch relay packets computers attached using address packet determine computer send build larger lans switches plugged using ports happens plug together loop network still work luckily designers thought case job protocol sort paths packets travel safely reach intended computer see works chap also possible divide one large physical lan two smaller logical lans might wonder would useful sometimes layout network equipment match organization structure example sec network hardware engineering finance departments company might computers physical lan wing building might easier manage system engineering finance logically network virtual lan vlan design port tagged color say green engineering red finance switch forwards packets computers attached green ports separated computers attached red ports broadcast packets sent red port example received green port though two different lans cover vlans end chap wired lan topologies fact switched ethernet modern version original ethernet design broadcast packets single linear cable one machine could successfully transmit time distributed arbitration mechanism used resolve conflicts used simple algorithm computers could transmit whenever cable idle two packets collided computer waited random time tried later call version classic ethernet clarity suspected learn chap wireless wired broadcast networks divided static dynamic designs depending channel allocated typical static allocation would divide time discrete intervals use round robin algorithm allowing machine broadcast time slot comes static allocation wastes channel capacity machine nothing say allocated slot systems attempt allocate channel dynamically e demand dynamic allocation methods common channel either centralized decentralized centralized channel allocation method single entity example base station cellular networks determines goes next might accepting multiple packets prioritizing according internal algorithm decentralized channel allocation method central entity machine must decide whether transmit might think approach would lead chaos later study many algorithms designed bring order potential chaos worth spending little time discussing lans home future likely every appliance home capable communicating every appliance accessible internet development likely one visionary concepts nobody asked like tv remote controls mobile phones arrived nobody imagine lived without many devices already capable networked include computers entertainment devices tvs dvds phones consumer electronics cameras appliances like clock radios infrastructure like utility meters thermostats trend continue instance average home probably dozen clocks e g appliances could 22 introduction adjust daylight savings time automatically clocks internet remote monitoring home likely winner many grown children would willing spend money help aging parents live safely homes could think home network another lan likely different properties networks first networked devices easy install wireless routers returned consumer electronic item people buy one want wireless network home find work box return rather listen elevator music hold technical helpline second network devices foolproof operation air conditioners used one knob four settings low medium high page manuals networked expect chapter security alone pages problem computer users accustomed putting products work car television refrigerator buying public far less tolerant expect products work without need hire geek third low price essential success people pay premium internet thermostat people regard monitoring home temperature work important extra though might sell fourth must possible start one two devices expand reach network gradually means format wars telling consumers buy peripherals ieee firewire interfaces years later retracting saying usb interface month switching 11g oops make 11n mean 16 different wireless networks going make consumers skittish network interface remain stable decades like television broadcasting standards fifth security reliability important losing files email virus one thing burglar disarm security system mobile computer plunder house something quite different interesting question whether home networks wired wireless convenience cost favors wireless networking wires fit worse retrofit security favors wired networking radio waves wireless networks use quite good going walls everyone overjoyed thought neighbors piggybacking internet connection reading email chap study encryption used provide security easier said done inexperienced users third option may appealing reuse networks already home obvious candidate electric wires installed throughout house power line networks let devices plug outlets broadcast information throughout house plug tv anyway way get internet connectivity time difficulty sec network hardware carry power data signals time part answer use different frequency bands short home lans offer many opportunities challenges latter relate need networks easy manage dependable secure especially hands nontechnical users well low cost metropolitan area networks man metropolitan area network covers city best known examples mans cable television networks available many cities systems grew earlier community antenna systems used areas poor air television reception early systems large antenna placed top nearby hill signal piped subscribers houses first locally designed ad hoc systems companies began jumping business getting contracts local governments wire entire cities next step television programming even entire channels designed cable often channels highly specialized news sports cooking gardening inception late 1990s intended television reception internet began attracting mass audience cable tv network operators began realize changes system could provide two way internet service unused parts spectrum point cable tv system began morph simply way distribute television metropolitan area network first approximation man might look something like system shown figure see television signals internet fed centralized cable headend subsequent distribution people homes come back subject detail chap cable television man though recent developments highspeed wireless internet access resulted another man standardized ieee 16 popularly known wimax look chap wide area networks wan wide area network spans large geographical area often country continent begin discussion wired wans using example company branch offices different cities wan network connects offices perth melbourne brisbane offices contains computers intended running user e application programs follow traditional usage call machines hosts rest network connects hosts called 24 introduction junction box antenna head end internet metropolitan area network based cable tv communication subnet subnet short job subnet carry messages host host telephone system carries words really sounds speaker listener wans subnet consists two distinct components transmission lines switching elements transmission lines move bits machines made copper wire optical fiber even radio links companies transmission lines lying instead lease lines telecommunications company switching elements switches specialized computers connect two transmission lines data arrive incoming line switching element must choose outgoing line forward switching computers called various names past name router commonly used unfortunately people pronounce rooter others rhyme doubter determining correct pronunciation left exercise reader note perceived correct answer may depend live short comment term subnet order originally meaning collection routers communication lines moved packets source host destination host readers aware acquired second recent meaning conjunction network addressing discuss meaning chap stick original meaning collection lines routers wan described looks similar large wired lan important differences go beyond long wires usually wan hosts subnet owned operated different people sec network hardware subnet transmission line brisbane router perth melbourne wan connects three branch offices australia example employees might responsible computers company department charge rest network see clearer boundaries coming examples network provider telephone company operates subnet separation pure communication aspects network subnet application aspects hosts greatly simplifies overall network design second difference routers usually connect different kinds networking technology networks inside offices may switched ethernet example long distance transmission lines may sonet links cover chap device needs join astute reader notice goes beyond definition network means many wans fact internetworks composite networks made one network say internetworks next section final difference connected subnet could individual computers case connecting lans could entire lans larger networks built smaller ones far subnet concerned job position look two varieties wans first rather lease dedicated transmission lines company might connect offices internet allows connections made offices virtual links 26 introduction use underlying capacity internet arrangement shown called vpn virtual private network compared dedicated arrangement vpn usual advantage virtualization provides flexible reuse resource internet connectivity consider easy add fourth office see vpn also usual disadvantage virtualization lack control underlying resources dedicated line capacity clear vpn mileage may vary internet service internet link via internet brisbane perth melbourne wan using virtual private network second variation subnet may run different company subnet operator known network service provider offices customers structure shown subnet operator connect customers long pay provide service since would disappointing network service customers could send packets subnet operator also connect networks part internet subnet operator called isp internet service provider subnet isp network customers connect isp receive internet service use isp network preview key issues study later chapters wans network contains many transmission lines connecting pair routers two routers share transmission line wish communicate must indirectly via routers sec network hardware isp network transmission line brisbane customer network perth melbourne wan using isp network may many paths network connect two routers network makes decision path use called routing algorithm many algorithms exist router makes decision send packet next called forwarding algorithm many exist study types detail chap kinds wans make heavy use wireless technologies satellite systems computer ground antenna send data receive data satellite orbit computers hear output satellite cases also hear upward transmissions fellow computers satellite well satellite networks inherently broadcast useful broadcast property important cellular telephone network another example wan uses wireless technology system already gone three generations fourth one horizon first generation analog voice second generation digital voice third generation digital voice data cellular base station covers distance much larger wireless lan range measured kilometers rather tens meters base stations connected backbone network usually wired data rates cellular networks often order mbps much smaller wireless lan range order mbps lot say networks chap 28 introduction internetworks many networks exist world often different hardware software people connected one network often want communicate people attached different one fulfillment desire requires different frequently incompatible networks connected collection interconnected networks called internetwork internet terms used generic sense contrast worldwide internet one specific internet always capitalize internet uses isp networks connect enterprise networks home networks many networks look internet great detail later book subnets networks internetworks often confused term subnet makes sense context wide area network refers collection routers communication lines owned network operator analogy telephone system consists telephone switching offices connected one another high speed lines houses businesses low speed lines lines equipment owned managed telephone company form subnet telephone system telephones hosts analogy part subnet network formed combination subnet hosts however word network often used loose sense well subnet might described network case isp network internetwork might also described network case wan follow similar practice distinguishing network arrangements stick original definition collection computers interconnected single technology let us say constitutes internetwork know internet formed distinct networks interconnected view connecting lan wan connecting two lans usual way form internetwork little agreement industry terminology area two rules thumb useful first different organizations paid construct different parts network maintains part internetwork rather single network second underlying technology different different parts e g broadcast versus point point wired versus wireless probably internetwork go deeper need talk two different networks connected general name machine makes connection two networks provides necessary translation terms hardware software gateway gateways distinguished layer operate protocol hierarchy much say layers protocol hierarchies starting next section imagine higher layers tied applications web lower layers tied transmission links ethernet sec network hardware since benefit forming internet connect computers across networks want use low level gateway unable make connections different kinds networks want use high level gateway either connection work particular applications level middle right often called network layer router gateway switches packets network layer spot internet finding network routers network software first computer networks designed hardware main concern software afterthought strategy longer works network software highly structured following sections examine software structuring technique detail approach described forms keystone entire book occur repeatedly later protocol hierarchies reduce design complexity networks organized stack layers levels one built upon one number layers name layer contents layer function layer differ network network purpose layer offer certain services higher layers shielding layers details offered services actually implemented sense layer kind virtual machine offering certain services layer concept actually familiar one used throughout computer science variously known information hiding abstract data types data encapsulation object oriented programming fundamental idea particular piece software hardware provides service users keeps details internal state algorithms hidden layer n one machine carries conversation layer n another machine rules conventions used conversation collectively known layer n protocol basically protocol agreement communicating parties communication proceed analogy woman introduced man may choose stick hand turn may decide either shake kiss depending example whether american lawyer business meeting european princess formal ball violating protocol make communication difficult completely impossible five layer network illustrated entities comprising corresponding layers different machines called peers peers may 30 introduction software processes hardware devices even human beings words peers communicate using protocol talk host host layer protocol layer layer layer interface layer layer protocol layer layer interface layer layer protocol layer layer interface layer layer protocol layer layer interface layer layer protocol layer physical medium layers protocols interfaces reality data directly transferred layer n one machine layer n another machine instead layer passes data control information layer immediately lowest layer reached layer physical medium actual communication occurs virtual communication shown dotted lines physical communication solid lines pair adjacent layers interface interface defines primitive operations services lower layer makes available upper one network designers decide many layers include network one one important considerations defining clean interfaces layers turn requires layer perform specific collection well understood functions addition minimizing amount information must passed layers clearcut interfaces also make simpler replace one layer completely different protocol implementation e g replacing telephone lines satellite channels required new protocol implementation offer exactly set services upstairs neighbor old one common different hosts use different implementations protocol often written different companies fact protocol change layer without layers even noticing sec network software set layers protocols called network architecture specification architecture must contain enough information allow implementer write program build hardware layer correctly obey appropriate protocol neither details implementation specification interfaces part architecture hidden away inside machines visible outside even necessary interfaces machines network provided machine correctly use protocols list protocols used certain system one protocol per layer called protocol stack network architectures protocol stacks protocols principal subjects book analogy may help explain idea multilayer communication imagine two philosophers peer processes layer one speaks urdu english one speaks chinese french since common language engage translator peer processes layer turn contacts secretary peer processes layer philosopher wishes convey affection oryctolagus cuniculus peer passes message english across interface translator saying like rabbits illustrated translators agreed neutral language known dutch message converted ik vind konijnen leuk choice language layer protocol layer peer processes translator gives message secretary transmission example email layer protocol message arrives secretary passed local translator translates french passes across interface second philosopher note protocol completely independent ones long interfaces changed translators switch dutch say finnish provided agree neither changes interface either layer layer similarly secretaries switch email telephone without disturbing even informing layers process may add information intended peer information passed layer consider technical example provide communication top layer five layer network message produced application process running layer given layer transmission layer puts header front message identify message passes result layer header includes control information addresses allow layer destination machine deliver message examples control information used layers sequence numbers case lower layer preserve message order sizes times many networks limit placed size messages transmitted layer protocol nearly always limit imposed layer protocol consequently layer must break incoming messages smaller 32 introduction location like rabbits location b message philosopher j aime bien les lapins l dutch ik vind konijnen leuk fax l dutch ik vind konijnen leuk information remote translator information remote secretary translator secretary l dutch ik vind konijnen leuk fax l dutch ik vind konijnen leuk philosopher translator secretary architecture units packets prepending layer header packet example split two parts transmitted separately layer decides outgoing lines use passes packets layer layer adds piece header also trailer gives resulting unit layer physical transmission receiving machine message moves upward layer layer headers stripped progresses none headers layers n passed layer n important thing understand relation virtual actual communication difference protocols interfaces peer processes layer example conceptually think communication horizontal using layer protocol one likely procedures called something like sendtootherside getfromotherside even though procedures actually communicate lower layers across interface side sec network software layer layer protocol h4 layer protocol h4 layer protocol h3 h4 m1 h3 m2 h3 h4 m1 h3 h2 h3 h4 m1 t2 h2 h3 m2 t2 layer protocol h2 h3 h4 h2 h3 m2 t2 source machine destination machine example information flow supporting virtual communication layer peer process abstraction crucial network design using unmanageable task designing complete network broken several smaller manageable design problems namely design individual layers although sec called network software worth pointing lower layers protocol hierarchy frequently implemented hardware firmware nevertheless complex protocol algorithms involved even embedded whole part hardware design issues layers key design issues occur computer networks come layer layer briefly mention important ones reliability design issue making network operates correctly even though made collection components unreliable think bits packet traveling network chance bits received damaged inverted due fluke electrical noise random wireless signals hardware flaws software bugs possible find fix errors one mechanism finding errors received information uses codes error detection information incorrectly received retransmitted 34 introduction received correctly powerful codes allow error correction correct message recovered possibly incorrect bits originally received mechanisms work adding redundant information used low layers protect packets sent individual links high layers check right contents received another reliability issue finding working path network often multiple paths source destination large network may links routers broken suppose network germany packets sent london rome via germany get could instead send packets london rome via paris network automatically make decision topic called routing second design issue concerns evolution network time networks grow larger new designs emerge need connected existing network recently seen key structuring mechanism used support change dividing overall problem hiding implementation details protocol layering many strategies well since many computers network every layer needs mechanism identifying senders receivers involved particular message mechanism called addressing naming low high layers respectively aspect growth different network technologies often different limitations example communication channels preserve order messages sent leading solutions number messages another example differences maximum size message networks transmit leads mechanisms disassembling transmitting reassembling messages overall topic called internetworking networks get large new problems arise cities traffic jams shortage telephone numbers easy get lost many people problems neighborhood citywide may big issue designs continue work well network gets large said scalable third design issue resource allocation networks provide service hosts underlying resources capacity transmission lines well need mechanisms divide resources one host interfere another much many designs share network bandwidth dynamically according shortterm needs hosts rather giving host fixed fraction bandwidth may may use design called statistical multiplexing meaning sharing based statistics demand applied low layers single link high layers network even applications use network allocation problem occurs every level keep fast sender swamping slow receiver data feedback receiver sec network software sender often used subject called flow control sometimes problem network oversubscribed many computers want send much traffic network deliver overloading network called congestion one strategy computer reduce demand experiences congestion used layers interesting observe network resources offer simply bandwidth uses carrying live video timeliness delivery matters great deal networks must provide service applications want real time delivery time provide service applications want high throughput quality service name given mechanisms reconcile competing demands last major design issue secure network defending different kinds threats one threats mentioned previously eavesdropping communications mechanisms provide confidentiality defend threat used multiple layers mechanisms authentication prevent someone impersonating someone else might used tell fake banking web sites real one let cellular network check call really coming phone pay bill mechanisms integrity prevent surreptitious changes messages altering debit account debit account designs based cryptography shall study chap connection oriented versus connectionless service layers offer two different types service layers connection oriented connectionless section look two types examine differences connection oriented service modeled telephone system talk someone pick phone dial number talk hang similarly use connection oriented network service service user first establishes connection uses connection releases connection essential aspect connection acts like tube sender pushes objects bits one end receiver takes end cases order preserved bits arrive order sent cases connection established sender receiver subnet conduct negotiation parameters used maximum message size quality service required issues typically one side makes proposal side accept reject make counterproposal circuit another name connection associated resources fixed bandwidth dates telephone network circuit path copper wire carried phone conversation contrast connection oriented service connectionless service modeled postal system message letter carries full destination address 36 introduction one routed intermediate nodes inside system independent subsequent messages different names messages different contexts packet message network layer intermediate nodes receive message full sending next node called store forward switching alternative onward transmission message node starts completely received node called cut switching normally two messages sent destination first one sent first one arrive however possible first one sent delayed second one arrives first kind service characterized reliability services reliable sense never lose data usually reliable service implemented receiver acknowledge receipt message sender sure arrived acknowledgement process introduces overhead delays often worth sometimes undesirable typical situation reliable connection oriented service appropriate file transfer owner file wants sure bits arrive correctly order sent file transfer customers would prefer service occasionally scrambles loses bits even much faster reliable connection oriented service two minor variations message sequences byte streams former variant message boundaries preserved two byte messages sent arrive two distinct 1024byte messages never one byte message latter connection simply stream bytes message boundaries bytes arrive receiver way tell sent one byte message two byte messages byte messages pages book sent network phototypesetter separate messages might important preserve message boundaries hand download dvd movie byte stream server user computer needed message boundaries within movie relevant applications transit delays introduced acknowledgements unacceptable one application digitized voice traffic voice ip less disruptive telephone users hear bit noise line time time experience delay waiting acknowledgements similarly transmitting video conference pixels wrong problem image jerk along flow stops starts correct errors irritating applications require connections example spammers send electronic junk mail many recipients spammer probably want go trouble setting later tearing connection recipient send one item percent reliable delivery essential especially costs needed way send single message high sec network software probability arrival guarantee unreliable meaning acknowledged connectionless service often called datagram service analogy telegram service also return acknowledgement sender despite unreliable dominant form networks reasons become clear later situations convenience establish connection send one message desired reliability essential acknowledged datagram service provided applications like sending registered letter requesting return receipt receipt comes back sender absolutely sure letter delivered intended party lost along way text messaging mobile phones example still another service request reply service service sender transmits single datagram containing request reply contains answer request reply commonly used implement communication client server model client issues request server responds example mobile phone client might send query map server retrieve map data current location summarizes types services discussed connectionoriented connectionless service example reliable message stream sequence pages reliable byte stream movie download unreliable connection voice ip unreliable datagram electronic junk mail acknowledged datagram text messaging request reply database query six different types service concept using unreliable communication may confusing first would anyone actually prefer unreliable communication reliable communication first reliable communication sense acknowledged may available given layer example ethernet provide reliable communication packets occasionally damaged transit higher protocol levels recover problem particular many reliable services built top unreliable datagram service second delays inherent providing reliable service may unacceptable especially real time applications multimedia reasons reliable unreliable communication coexist 38 introduction service primitives service formally specified set primitives operations available user processes access service primitives tell service perform action report action taken peer entity protocol stack located operating system often primitives normally system calls calls cause trap kernel mode turns control machine operating system send necessary packets set primitives available depends nature service provided primitives connection oriented service different connectionless service minimal example service primitives might provide reliable byte stream consider primitives listed familiar fans berkeley socket interface primitives simplified version interface primitive meaning listen block waiting incoming connection connect establish connection waiting peer accept accept incoming connection peer receive block waiting incoming message send send message peer disconnect terminate connection six service primitives provide simple connection oriented service primitives might used request reply interaction client server environment illustrate sketch simple protocol implements service using acknowledged datagrams first server executes listen indicate prepared accept incoming connections common way implement listen make blocking system call executing primitive server process blocked request connection appears next client process executes connect establish connection server connect call needs specify connect might parameter giving server address operating system typically sends packet peer asking connect shown client process suspended response packet arrives server operating system sees packet requesting connection checks see listener unblocks listener server process establish connection accept call sends response back client process accept sec network software client machine connect request server machine accept response client process system process request data system calls operating system kernel protocol drivers stack reply disconnect disconnect kernel protocol drivers stack simple client server interaction using acknowledged datagrams connection arrival response releases client point client server running connection established obvious analogy protocol real life customer client calling company customer service manager start day service manager sits next telephone case rings later client places call manager picks phone connection established next step server execute receive prepare accept first request normally server immediately upon released listen acknowledgement get back client receive call blocks server client executes send transmit request followed execution receive get reply arrival request packet server machine unblocks server handle request done work server uses send return answer client arrival packet unblocks client inspect answer client additional requests make client done executes disconnect terminate connection usually initial disconnect blocking call suspending client sending packet server saying connection longer needed server gets packet also issues disconnect acknowledging client releasing connection server packet gets back client machine client process released connection broken nutshell connection oriented communication works course life simple many things go wrong timing wrong e g connect done listen packets get lost much look issues great detail later moment briefly summarizes client server communication might work acknowledged datagrams ignore lost packets given six packets required complete protocol one might wonder connectionless protocol used instead answer perfect world could case two packets would needed one 40 introduction request one reply however face large messages either direction e g megabyte file transmission errors lost packets situation changes reply consisted hundreds packets could lost transmission would client know pieces missing would client know whether last packet actually received really last packet sent suppose client wanted second file could tell packet second file lost packet first file suddenly found way client short real world simple request reply protocol unreliable network often inadequate chap study variety protocols detail overcome problems moment suffice say reliable ordered byte stream processes sometimes convenient relationship services protocols services protocols distinct concepts distinction important emphasize service set primitives operations layer provides layer service defines operations layer prepared perform behalf users says nothing operations implemented service relates interface two layers lower layer service provider upper layer service user protocol contrast set rules governing format meaning packets messages exchanged peer entities within layer entities use protocols implement service definitions free change protocols provided change service visible users way service protocol completely decoupled key concept network designer understand well repeat crucial point services relate interfaces layers illustrated contrast protocols relate packets sent peer entities different machines important confuse two concepts analogy programming languages worth making service like abstract data type object object oriented language defines operations performed object specify operations implemented contrast protocol relates implementation service visible user service many older protocols distinguish service protocol effect typical layer might service primitive send packet user providing pointer fully assembled packet arrangement meant changes protocol immediately visible users network designers regard design serious blunder sec reference models layer k layer k service provided layer k layer k layer k protocol layer k layer k relationship service protocol reference models discussed layered networks abstract time look examples discuss two important network architectures osi reference model tcp ip reference model although protocols associated osi model used model actually quite general still valid features discussed layer still important tcp ip model opposite properties model much use protocols widely used reason look detail also sometimes learn failures successes osi reference model osi model minus physical medium shown model based proposal developed international standards organization iso first step toward international standardization protocols used various layers day zimmermann revised day model called iso osi open systems interconnection reference model deals connecting open systems systems open communication systems call osi model short osi model seven layers principles applied arrive seven layers briefly summarized follows layer created different abstraction needed layer perform well defined function function layer chosen eye toward defining internationally standardized protocols 42 introduction layer name unit exchanged application application protocol application apdu presentation ppdu session spdu transport tpdu interface presentation session transport presentation protocol session protocol transport protocol communication subnet boundary internal subnet protocol network network network network packet data link data link data link data link frame physical physical physical physical bit host router router host b network layer host router protocol data link layer host router protocol physical layer host router protocol osi reference model layer boundaries chosen minimize information flow across interfaces number layers large enough distinct functions need thrown together layer necessity small enough architecture become unwieldy discuss layer model turn starting bottom layer note osi model network architecture specify exact services protocols used layer tells layer however iso also produced standards layers although part reference model one published separate international standard model part widely used although associated protocols long forgotten sec reference models physical layer physical layer concerned transmitting raw bits communication channel design issues making sure one side sends bit received side bit bit typical questions electrical signals used represent many nanoseconds bit lasts whether transmission may proceed simultaneously directions initial connection established torn sides finished many pins network connector pin used design issues largely deal mechanical electrical timing interfaces well physical transmission medium lies physical layer data link layer main task data link layer transform raw transmission facility line appears free undetected transmission errors masking real errors network layer see accomplishes task sender break input data data frames typically hundred thousand bytes transmit frames sequentially service reliable receiver confirms correct receipt frame sending back acknowledgement frame another issue arises data link layer higher layers well keep fast transmitter drowning slow receiver data traffic regulation mechanism may needed let transmitter know receiver accept data broadcast networks additional issue data link layer control access shared channel special sublayer data link layer medium access control sublayer deals problem network layer network layer controls operation subnet key design issue determining packets routed source destination routes based static tables wired network rarely changed often updated automatically avoid failed components also determined start conversation example terminal session login remote machine finally highly dynamic determined anew packet reflect current network load many packets present subnet time get one another way forming bottlenecks handling congestion also responsibility network layer conjunction higher layers adapt load 44 introduction place network generally quality service provided delay transit time jitter etc also network layer issue packet travel one network another get destination many problems arise addressing used second network may different used first one second one may accept packet large protocols may differ network layer overcome problems allow heterogeneous networks interconnected broadcast networks routing problem simple network layer often thin even nonexistent transport layer basic function transport layer accept data split smaller units need pass network layer ensure pieces arrive correctly end furthermore must done efficiently way isolates upper layers inevitable changes hardware technology course time transport layer also determines type service provide session layer ultimately users network popular type transport connection error free point point channel delivers messages bytes order sent however possible kinds transport service exist transporting isolated messages guarantee order delivery broadcasting messages multiple destinations type service determined connection established aside error free channel completely impossible achieve people really mean term error rate low enough ignore practice transport layer true end end layer carries data way source destination words program source machine carries conversation similar program destination machine using message headers control messages lower layers protocols machine immediate neighbors ultimate source destination machines may separated many routers difference layers chained layers end end illustrated session layer session layer allows users different machines establish sessions sessions offer various services including dialog control keeping track whose turn transmit token management preventing two parties attempting critical operation simultaneously synchronization sec reference models checkpointing long transmissions allow pick left event crash subsequent recovery presentation layer unlike lower layers mostly concerned moving bits around presentation layer concerned syntax semantics information transmitted order make possible computers different internal data representations communicate data structures exchanged defined abstract way along standard encoding used wire presentation layer manages abstract data structures allows higher level data structures e g banking records defined exchanged application layer application layer contains variety protocols commonly needed users one widely used application protocol http hypertext transfer protocol basis world wide web browser wants web page sends name page wants server hosting page using http server sends page back application protocols used file transfer electronic mail network news tcp ip reference model let us turn osi reference model reference model used grandparent wide area computer networks arpanet successor worldwide internet although give brief history arpanet later useful mention key aspects arpanet research network sponsored dod u department defense eventually connected hundreds universities government installations using leased telephone lines satellite radio networks added later existing protocols trouble interworking new reference architecture needed thus nearly beginning ability connect multiple networks seamless way one major design goals architecture later became known tcp ip reference model two primary protocols first described cerf kahn later refined defined standard internet community braden design philosophy behind model discussed clark given dod worry precious hosts routers internetwork gateways might get blown pieces moment notice attack soviet union another major goal network able survive loss subnet hardware without existing conversations broken 46 introduction words dod wanted connections remain intact long source destination machines functioning even machines transmission lines suddenly put operation furthermore since applications divergent requirements envisioned ranging transferring files real time speech transmission flexible architecture needed link layer requirements led choice packet switching network based connectionless layer runs across different networks lowest layer model link layer describes links serial lines classic ethernet must meet needs connectionless internet layer really layer normal sense term rather interface hosts transmission links early material tcp ip model little say internet layer internet layer linchpin holds whole architecture together shown corresponding roughly osi network layer job permit hosts inject packets network travel independently destination potentially different network may even arrive completely different order sent case job higher layers rearrange order delivery desired note internet used generic sense even though layer present internet osi tcp ip application application presentation session transport transport network internet data link link physical present model tcp ip reference model analogy snail mail system person drop sequence international letters mailbox one country little luck sec reference models delivered correct address destination country letters probably travel one international mail gateways along way transparent users furthermore country e network stamps preferred envelope sizes delivery rules hidden users internet layer defines official packet format protocol called ip internet protocol plus companion protocol called icmp internet control message protocol helps function job internet layer deliver ip packets supposed go packet routing clearly major issue congestion though ip proven effective avoiding congestion transport layer layer internet layer tcp ip model usually called transport layer designed allow peer entities source destination hosts carry conversation osi transport layer two end end transport protocols defined first one tcp transmission control protocol reliable connection oriented protocol allows byte stream originating one machine delivered without error machine internet segments incoming byte stream discrete messages passes one internet layer destination receiving tcp process reassembles received messages output stream tcp also handles flow control make sure fast sender swamp slow receiver messages handle second protocol layer udp user datagram protocol unreliable connectionless protocol applications want tcp sequencing flow control wish provide also widely used one shot client server type request reply queries applications prompt delivery important accurate delivery transmitting speech video relation ip tcp udp shown since model developed ip implemented many networks application layer tcp ip model session presentation layers need perceived instead applications simply include session presentation functions require experience osi model proven view correct layers little use applications top transport layer application layer contains higher level protocols early ones included virtual terminal telnet file transfer ftp electronic mail smtp many protocols added years important ones study shown 48 introduction application http transport smtp tcp rtp dns udp protocols layers internet link dsl ip icmp sonet 11 ethernet tcp ip model protocols study include domain name system dns mapping host names onto network addresses http protocol fetching pages world wide web rtp protocol delivering real time media voice movies model used book mentioned earlier strength osi reference model model minus presentation session layers proven exceptionally useful discussing computer networks contrast strength tcp ip reference model protocols widely used many years since computer scientists like cake eat use hybrid model framework book application transport network link physical reference model used book model five layers running physical layer link network transport layers application layer physical layer specifies transmit bits across different kinds media electrical analog signals link layer concerned send finite length messages directly connected computers specified levels reliability ethernet 11 examples link layer protocols sec reference models network layer deals combine multiple links networks networks networks internetworks send packets distant computers includes task finding path along send packets ip main example protocol study layer transport layer strengthens delivery guarantees network layer usually increased reliability provide delivery abstractions reliable byte stream match needs different applications tcp important example transport layer protocol finally application layer contains programs make use network many networked applications user interfaces web browser concern however portion program uses network http protocol case web browser also important support programs application layer dns used many applications chapter sequence based model way retain value osi model understanding network architectures concentrate primarily protocols important practice tcp ip related protocols newer ones 11 sonet bluetooth comparison osi tcp ip reference models osi tcp ip reference models much common based concept stack independent protocols also functionality layers roughly similar example models layers including transport layer provide end end network independent transport service processes wishing communicate layers form transport provider models layers transport application oriented users transport service despite fundamental similarities two models also many differences section focus key differences two reference models important note comparing reference models corresponding protocol stacks protocols discussed later entire book comparing contrasting tcp ip osi see piscitello chapin three concepts central osi model services interfaces protocols probably biggest contribution osi model makes distinction three concepts explicit layer performs services 50 introduction layer service definition tells layer entities access layer works defines layer semantics layer interface tells processes access specifies parameters results expect says nothing layer works inside finally peer protocols used layer layer business use protocols wants long gets job done e provides offered services also change without affecting software higher layers ideas fit nicely modern ideas object oriented programming object like layer set methods operations processes outside object invoke semantics methods define set services object offers methods parameters results form object interface code internal object protocol visible concern outside object tcp ip model originally clearly distinguish services interfaces protocols although people tried retrofit fact make osi like example real services offered internet layer send ip packet receive ip packet consequence protocols osi model better hidden tcp ip model replaced relatively easily technology changes able make changes transparently one main purposes layered protocols first place osi reference model devised corresponding protocols invented ordering meant model biased toward one particular set protocols fact made quite general downside ordering designers much experience subject good idea functionality put layer example data link layer originally dealt point point networks broadcast networks came around new sublayer hacked model furthermore people started build real networks using osi model existing protocols discovered networks match required service specifications wonder wonders convergence sublayers grafted onto model provide place papering differences finally committee originally expected country would one network run government using osi protocols thought given internetworking make long story short things turn way tcp ip reverse true protocols came first model really description existing protocols problem protocols fitting model fit perfectly trouble model fit protocol stacks consequently especially useful describing non tcp ip networks sec reference models turning philosophical matters specific ones obvious difference two models number layers osi model seven layers tcp ip model four inter network transport application layers layers different another difference area connectionless versus connection oriented communication osi model supports connectionless connectionoriented communication network layer connection oriented communication transport layer counts transport service visible users tcp ip model supports one mode network layer connectionless transport layer giving users choice choice especially important simple request response protocols critique osi model protocols neither osi model protocols tcp ip model protocols perfect quite bit criticism directed section next one look criticisms begin osi examine tcp ip afterward time second edition book published appeared many experts field osi model protocols going take world push everything else way happen look back reasons may useful summarized bad timing bad technology bad implementations bad politics bad timing first let us look reason one bad timing time standard established absolutely critical success david clark theory standards calls apocalypse two elephants illustrated figure shows amount activity surrounding new subject subject first discovered burst research activity form discussions papers meetings activity subsides corporations discover subject billion dollar wave investment hits essential standards written trough two elephants written early research results well 52 introduction billion dollar investment research activity standards time apocalypse two elephants established subject may still poorly understood result bad standard written late many companies may already made major investments different ways things standards effectively ignored interval two elephants short everyone hurry get started people developing standards may get crushed appears standard osi protocols got crushed competing tcp ip protocols already widespread use research universities time osi protocols appeared billion dollar wave investment yet hit academic market large enough many vendors begun cautiously offering tcp ip products osi came around want support second protocol stack forced initial offerings every company waiting every company go first company went first osi never happened bad technology second reason osi never caught model protocols flawed choice seven layers political technical two layers session presentation nearly empty whereas two ones data link network overfull osi model along associated service definitions protocols extraordinarily complex piled printed standards occupy significant fraction meter paper also difficult implement inefficient operation context riddle posed paul mockapetris cited rose comes mind q get cross mobster international standard someone makes offer understand sec reference models addition incomprehensible another problem osi functions addressing flow control error control reappear layer saltzer et al example pointed effective error control must done highest layer repeating lower layers often unnecessary inefficient bad implementations given enormous complexity model protocols come surprise initial implementations huge unwieldy slow everyone tried got burned take long people associate osi poor quality although products improved course time image stuck contrast one first implementations tcp ip part berkeley unix quite good mention free people began using quickly led large user community led improvements led even larger community spiral upward instead downward bad politics account initial implementation many people especially academia thought tcp ip part unix unix 1980s academia unlike parenthood incorrectly called motherhood apple pie osi hand widely thought creature european telecommunication ministries european community later u government belief partly true idea bunch government bureaucrats trying shove technically inferior standard throats poor researchers programmers trenches actually developing computer networks aid osi cause people viewed development light ibm announcing 1960s pl language future dod correcting later announcing actually ada critique tcp ip reference model tcp ip model protocols problems first model clearly distinguish concepts services interfaces protocols good software engineering practice requires differentiating specification implementation something osi carefully tcp ip consequently tcp ip model much guide designing new networks using new technologies second tcp ip model general poorly suited describing protocol stack tcp ip trying use tcp ip model describe bluetooth example completely impossible 54 introduction third link layer really layer normal sense term used context layered protocols interface network data link layers distinction interface layer crucial one sloppy fourth tcp ip model distinguish physical data link layers completely different physical layer transmission characteristics copper wire fiber optics wireless communication data link layer job delimit start end frames get one side desired degree reliability proper model include separate layers tcp ip model finally although ip tcp protocols carefully thought well implemented many protocols ad hoc generally produced couple graduate students hacking away got tired protocol implementations distributed free resulted becoming widely used deeply entrenched thus hard replace bit embarrassment virtual terminal protocol telnet example designed ten character per second mechanical teletype terminal knows nothing graphical user interfaces mice nevertheless still use years later example networks subject computer networking covers many different kinds networks large small well known less well known different goals scales technologies following sections look examples get idea variety one finds area computer networking start internet probably best known network look history evolution technology consider mobile phone network technically quite different internet contrasting nicely next introduce ieee 11 dominant standard wireless lans finally look rfid sensor networks technologies extend reach network include physical world everyday objects internet internet really network vast collection different networks use certain common protocols provide certain common services unusual system planned anyone controlled anyone better understand let us start beginning see developed wonderful history internet john naughton book highly recommended one rare books fun read also pages ibid op cit serious historian material section based book sec example networks course countless technical books written internet protocols well information see example maufer arpanet story begins late 1950s height cold war u dod wanted command control network could survive nuclear war time military communications used public telephone network considered vulnerable reason belief gleaned black dots represent telephone switching offices connected thousands telephones switching offices turn connected higher level switching offices toll offices form national hierarchy small amount redundancy vulnerability system destruction key toll offices could fragment many isolated islands switching office toll office b structure telephone system b baran proposed distributed switching system around dod awarded contract rand corporation find solution one employees paul baran came highly distributed fault tolerant design b since paths two switching offices much longer analog signals could travel without distortion baran proposed using digital packet switching technology baran wrote several reports dod describing ideas detail baran officials pentagon liked concept asked u national telephone monopoly build prototype dismissed baran ideas hand biggest richest corporation world allow 56 introduction young whippersnapper tell build telephone system said baran network could built idea killed several years went still dod better command andcontrol system understand happened next go back way october soviet union beat u space launch first artificial satellite sputnik president eisenhower tried find asleep switch appalled find army navy air force squabbling pentagon research budget immediate response create single defense research organization arpa advanced research projects agency arpa scientists laboratories fact nothing office small pentagon standards budget work issuing grants contracts universities companies whose ideas looked promising first years arpa tried figure mission attention larry roberts program manager arpa trying figure provide remote access computers turned networking contacted various experts decide one wesley clark suggested building packet switched subnet connecting host router initial skepticism roberts bought idea presented somewhat vague paper acm sigops symposium operating system principles held gatlinburg tennessee late roberts much roberts surprise another paper conference described similar system designed actually fully implemented direction donald davies national physical laboratory england npl system national system connected several computers npl campus demonstrated packet switching could made work furthermore cited baran discarded earlier work roberts came away gatlinburg determined build later became known arpanet subnet would consist minicomputers called imps interface message processors connected kbps transmission lines high reliability imp would connected least two imps subnet datagram subnet lines imps destroyed messages could automatically rerouted along alternative paths node network consist imp host room connected short wire host could send messages bits imp would break packets bits forward independently toward destination packet received entirety forwarded subnet first electronic storeand forward packet switching network arpa put tender building subnet twelve companies bid evaluating proposals arpa selected bbn consulting firm based cambridge massachusetts december awarded contract sec example networks build subnet write subnet software bbn chose use specially modified honeywell ddp minicomputers 12k bit words core memory imps imps disks since moving parts considered unreliable imps interconnected kbps lines leased telephone companies although kbps choice teenagers afford dsl cable best money could buy software split two parts subnet host subnet software consisted imp end host imp connection imp imp protocol source imp destination imp protocol designed improve reliability original arpanet design shown host host protocol host host imp protocol source imp imp imp protocol ol n imp protoc destinatio imp imp col prot subnet imp original arpanet design outside subnet software also needed namely host end host imp connection host host protocol application software soon became clear bbn opinion accepted message host imp wire placed host imp wire destination job done roberts problem though hosts needed software deal convened meeting network researchers mostly graduate students snowbird utah summer graduate students expected network expert explain grand design network software assign job writing part astounded network expert grand design figure nevertheless somehow experimental network went online december four nodes ucla ucsb sri university utah four chosen large number arpa contracts different completely incompatible host computers make fun first host host message sent two months earlier ucla 58 introduction node team led len kleinrock pioneer theory packet switching sri node network grew quickly imps delivered installed soon spanned united states shows rapidly arpanet grew first years sri sri utah utah ucsb ucsb mit sri sdc utah illinois mit ucsb lincoln case carn sdc stan ucla ucla rand ucla bbn mcclellan utah gwc lincoln case stan usc mit sdc carn linc mitre rand stanford fnwc rand tinker etac tinker bbn harvard ucsd nbs ucla sdc illinois mit cca bbn harvard linc aberdeen nbs etac ames imp ucsb ucla utah x parc radc illinois ames ucsb lbl mcclellan ames tip ncar harvard burroughs c sri sri bbn rand b usc arpa mitre radc saac belvoir cmu noaa gwc case e growth arpanet december b july c march april e september addition helping fledgling arpanet grow arpa also funded research use satellite networks mobile packet radio networks one famous demonstration truck driving around california used packet radio network send messages sri forwarded arpanet east coast shipped university college london satellite network allowed researcher truck use computer london driving around california experiment also demonstrated existing arpanet protocols suitable running different networks observation led research protocols culminating invention tcp ip model protocols cerf kahn tcp ip specifically designed handle communication internetworks something becoming increasingly important networks hooked arpanet sec example networks encourage adoption new protocols arpa awarded several contracts implement tcp ip different computer platforms including ibm dec hp systems well berkeley unix researchers university california berkeley rewrote tcp ip new programming interface called sockets upcoming 2bsd release berkeley unix also wrote many application utility management programs show convenient use network sockets timing perfect many universities acquired second third vax computer lan connect networking software 2bsd came along tcp ip sockets many network utilities complete package adopted immediately furthermore tcp ip easy lans connect arpanet many 1980s additional networks especially lans connected arpanet scale increased finding hosts became increasingly expensive dns domain name system created organize machines domains map host names onto ip addresses since dns become generalized distributed database system storing variety information related naming study detail chap nsfnet late 1970s nsf u national science foundation saw enormous impact arpanet university research allowing scientists across country share data collaborate research projects however get arpanet university research contract dod many contract nsf initial response fund computer science network csnet connected computer science departments industrial research labs arpanet via dial leased lines late 1980s nsf went decided design successor arpanet would open university research groups something concrete start nsf decided build backbone network connect six supercomputer centers san diego boulder champaign pittsburgh ithaca princeton supercomputer given little brother consisting lsi microcomputer called fuzzball fuzzballs connected kbps leased lines formed subnet hardware technology arpanet used software technology different however fuzzballs spoke tcp ip right start making first tcp ip wan nsf also funded eventually regional networks connected backbone allow users thousands universities research labs libraries museums access supercomputers communicate one another complete network including backbone regional networks called nsfnet connected arpanet link 60 introduction imp fuzzball carnegie mellon machine room first nsfnet backbone illustrated superimposed map u nsf supercomputer center nsf midlevel network nsfnet backbone nsfnet instantaneous success overloaded word go nsf immediately began planning successor awarded contract michigan based merit consortium run fiber optic channels kbps leased mci since merged worldcom provide version backbone ibm pc rts used routers soon overwhelmed second backbone upgraded mbps growth continued nsf realized government could continue financing networking forever furthermore commercial organizations wanted join forbidden nsf charter using networks nsf paid consequently nsf encouraged merit mci ibm form nonprofit corporation ans advanced networks services first step along road commercialization ans took nsfnet upgraded mbps links mbps form ansnet network operated years sold america online various companies offering commercial ip service clear government get networking business ease transition make sure every regional network could communicate every regional network nsf awarded contracts four different network operators establish nap network access point operators pacbell san francisco ameritech chicago mfs washington c sprint new york city nap purposes pennsauken new jersey counts new york city every network operator wanted provide backbone service nsf regional networks connect naps sec example networks arrangement meant packet originating regional network choice backbone carriers get nap destination nap consequently backbone carriers forced compete regional networks business basis service price idea course result concept single default backbone replaced commercially driven competitive infrastructure many people like criticize federal government innovative area networking dod nsf created infrastructure formed basis internet handed industry operate 1990s many countries regions also built national research networks often patterned arpanet nsfnet included europanet ebone europe started mbps lines upgraded mbps lines eventually network infrastructure europe handed industry well internet changed great deal since early days exploded size emergence world wide web www early 1990s recent data internet systems consortium puts number visible internet hosts million guess low ball estimate far exceeds million hosts around first conference www held cern way use internet also changed radically initially applications email academics newsgroups remote login file transfer dominated later switched email everyman web peer peer content distribution shuttered napster real time media distribution social networks e g facebook microblogging e g twitter taking switches brought richer kinds media internet hence much traffic fact dominant traffic internet seems change regularity example new better ways work music movies become popular quickly architecture internet architecture internet also changed great deal grown explosively section attempt give brief overview looks like today picture complicated continuous upheavals businesses telephone companies telcos cable companies isps often make hard tell one driver upheavals telecommunications convergence one network used previously different uses example triple play one company sells telephony tv internet service network connection assumption save money consequently description given necessity somewhat simpler reality true today may true tomorrow 62 introduction big picture shown let us examine figure piece piece starting computer home edges figure join internet computer connected internet service provider simply isp user purchases internet access connectivity lets computer exchange packets accessible hosts internet user might send packets surf web thousand uses matter many kinds internet access usually distinguished much bandwidth provide much cost important attribute connectivity data center tier isp backbone router fiber ftth peering ixp 3g mobile phone dialup cable dsl isps dslam dsl modem pop data path cable modem cmts overview internet architecture common way connect isp use phone line house case phone company isp dsl short digital subscriber line reuses telephone line connects house digital data transmission computer connected device called dsl modem converts digital packets analog signals pass unhindered telephone line end device called dslam digital subscriber line access multiplexer converts signals packets several popular ways connect isp shown dsl higher bandwidth way use local telephone line send bits traditional telephone call instead voice conversation called dial done different kind modem ends word modem short modulator demodulator refers device converts digital bits analog signals another method send signals cable tv system like dsl way reuse existing infrastructure case otherwise unused cable tv sec example networks channels device home end called cable modem device cable headend called cmts cable modem termination system dsl cable provide internet access rates small fraction megabit sec multiple megabit sec depending system rates much greater dial rates limited kbps narrow bandwidth used voice calls internet access much greater dial speeds called broadband name refers broader bandwidth used faster networks rather particular speed access methods mentioned far limited bandwidth last mile last leg transmission running optical fiber residences faster internet access provided rates order mbps design called ftth fiber home businesses commercial areas may make sense lease high speed transmission line offices nearest isp example north america t3 line runs roughly mbps wireless used internet access example explore shortly 3g mobile phone networks provide data delivery rates mbps higher mobile phones fixed subscribers coverage area move packets home isp call location customer packets enter isp network service isp pop point presence next explain packets moved pops different isps point system fully digital packet switched isp networks may regional national international scope already seen architecture made long distance transmission lines interconnect routers pops different cities isps serve equipment called backbone isp packet destined host served directly isp packet routed backbone delivered host otherwise must handed another isp isps connect networks exchange traffic ixps internet exchange points connected isps said peer many ixps cities around world drawn vertically isp networks overlap geographically basically ixp room full routers least one per isp lan room connects routers packets forwarded isp backbone isp backbone ixps large independently owned facilities one largest amsterdam internet exchange hundreds isps connect exchange hundreds gigabits sec traffic peering happens ixps depends business relationships isps many possible relationships example small isp might pay larger isp internet connectivity reach distant hosts much customer purchases service internet provider case small isp said pay transit alternatively two large isps might decide exchange 64 introduction traffic isp deliver traffic isp without pay transit one many paradoxes internet isps publicly compete one another customers often privately cooperate peering metz path packet takes internet depends peering choices isps isp delivering packet peers destination isp might deliver packet directly peer otherwise might route packet nearest place connects paid transit provider provider deliver packet two example paths across isps drawn often path packet takes shortest path internet top food chain small handful companies like sprint operate large international backbone networks thousands routers connected high bandwidth fiber optic links isps pay transit usually called tier isps said form backbone internet since everyone else must connect able reach entire internet companies provide lots content google yahoo locate computers data centers well connected rest internet data centers designed computers humans may filled rack upon rack machines called server farm colocation hosting data centers let customers put equipment servers isp pops short fast connections made servers isp backbones internet hosting industry become increasingly virtualized common rent virtual machine run server farm instead installing physical computer data centers large tens hundreds thousands machines electricity major cost data centers sometimes built areas electricity cheap ends quick tour internet great deal say individual components design algorithms protocols subsequent chapters one point worth mentioning means internet changing used machine internet ran tcp ip protocol stack ip address could send ip packets machines internet however isps often reuse ip addresses depending computers use moment home networks often share one ip address multiple computers practice undermines second condition security measures firewalls also partly block computers receiving packets undermining third condition despite difficulties makes sense regard machines internet connected isps also worth mentioning passing companies interconnected existing internal networks often using technology internet intranets typically accessible company premises company notebooks otherwise work way internet sec example networks third generation mobile phone networks people love talk phone even like surf internet made mobile phone network successful network world four billion subscribers worldwide put number perspective roughly world population number internet hosts fixed telephone lines combined itu architecture mobile phone network changed greatly past years along tremendous growth first generation mobile phone systems transmitted voice calls continuously varying analog signals rather sequences digital bits amps advanced mobile phone system deployed united states widely used firstgeneration system second generation mobile phone systems switched transmitting voice calls digital form increase capacity improve security offer text messaging gsm global system mobile communications deployed starting become widely used mobile phone system world 2g system third generation 3g systems initially deployed offer digital voice broadband digital data services also come lot jargon many different standards choose 3g loosely defined itu international standards body discuss next section providing rates least mbps stationary walking users kbps moving vehicle umts universal mobile telecommunications system also called wcdma wideband code division multiple access main 3g system rapidly deployed worldwide provide mbps downlink almost mbps uplink future releases use multiple antennas radios provide even greater speeds users scarce resource 3g systems 2g 1g systems radio spectrum governments license right use parts spectrum mobile phone network operators often using spectrum auction network operators submit bids piece licensed spectrum makes easier design operate systems since one else allowed transmit spectrum often costs serious amount money uk example five 3g licenses auctioned total billion scarcity spectrum led cellular network design shown used mobile phone networks manage radio interference users coverage area divided cells within cell users assigned channels interfere cause much interference adjacent cells allows good reuse spectrum frequency reuse neighboring cells increases capacity network 1g systems carried voice call specific frequency band frequencies carefully chosen conflict neighboring cells way given frequency might reused 66 introduction several cells modern 3g systems allow cell use frequencies way results tolerable level interference neighboring cells variations cellular design including use directional sectored antennas cell towers reduce interference basic idea cells base station cellular design mobile phone networks architecture mobile phone network different internet several parts shown simplified version umts architecture first air interface term fancy name radio communication protocol used air mobile device e g cell phone cellular base station advances air interface past decades greatly increased wireless data rates umts air interface based code division multiple access cdma technique study chap cellular base station together controller forms radio access network part wireless side mobile phone network controller node rnc radio network controller controls spectrum used base station implements air interface called node b temporary label stuck rest mobile phone network carries traffic radio access network called core network umts core network evolved core network used 2g gsm system came however something surprising happening umts core network since beginning networking war going people support packet networks e connectionless subnets people support circuit networks e connection oriented subnets main proponents packets come internet community connectionless design every packet routed independently every packet consequence routers go session harm done long system sec air interface uu example networks node b rnc circuits iu cs access core interface iu msc mgw pstn ggsn internet hss rnc packets iu ps gmsc mgw sgsn packets radio access network core network architecture umts 3g mobile phone network dynamically reconfigure subsequent packets find route destination even different previous packets used circuit camp comes world telephone companies telephone system caller must dial called party number wait connection talking sending data connection setup establishes route telephone system maintained call terminated words packets follow route line switch path goes call aborted making less fault tolerant connectionless design advantage circuits support quality service easily setting connection advance subnet reserve resources link bandwidth switch buffer space cpu attempt made set call insufficient resources available call rejected caller gets kind busy signal way connection set connection get good service connectionless network many packets arrive router moment router choke probably lose packets sender eventually notice resend quality service jerky unsuitable audio video unless network lightly loaded needless say providing adequate audio quality something telephone companies care much hence preference connections surprise packet circuit switched equipment core network shows mobile phone network transition mobile phone companies able implement one sometimes 68 introduction alternatives older mobile phone networks used circuit switched core style traditional phone network carry voice calls legacy seen umts network msc mobile switching center gmsc gateway mobile switching center mgw media gateway elements set connections circuit switched core network pstn public switched telephone network data services become much important part mobile phone network used starting text messaging early packet data services gprs general packet radio service gsm system older data services ran tens kbps users wanted newer mobile phone networks carry packet data rates multiple mbps comparison voice call carried rate kbps typically 4x less compression carry data umts core network nodes connect directly packet switched network sgsn serving gprs support node ggsn gateway gprs support node deliver data packets mobiles interface external packet networks internet transition set continue mobile phone networks planned deployed internet protocols even used mobiles set connections voice calls packet data network manner voiceover ip ip packets used way radio access core network course way ip networks designed also changing support better quality service problems chopped audio jerky video would impress paying customers return subject chap another difference mobile phone networks traditional internet mobility user moves range one cellular base station range another one flow data must routed old new cell base station technique known handover handoff illustrated b mobile phone handover b either mobile device base station may request handover quality signal drops cell networks usually based cdma sec example networks technology possible connect new base station disconnecting old base station improves connection quality mobile break service mobile actually connected two base stations short way handover called soft handover distinguish hard handover mobile disconnects old base station connecting new one related issue find mobile first place incoming call mobile phone network hss home subscriber server core network knows location subscriber well profile information used authentication authorization way mobile found contacting hss final area discuss security historically phone companies taken security much seriously internet companies long time need bill service avoid payment fraud unfortunately saying much nevertheless evolution 1g 3g technologies mobile phone companies able roll basic security mechanisms mobiles starting 2g gsm system mobile phone divided handset removable chip containing subscriber identity account information chip informally called sim card short subscriber identity module sim cards switched different handsets activate provide basis security gsm customers travel countries vacation business often bring handsets buy new sim card dollars upon arrival order make local calls roaming charges reduce fraud information sim cards also used mobile phone network authenticate subscribers check allowed use network umts mobile also uses information sim card check talking legitimate network another aspect security privacy wireless signals broadcast nearby receivers make difficult eavesdrop conversations cryptographic keys sim card used encrypt transmissions approach provides much better privacy 1g systems easily tapped panacea due weaknesses encryption schemes mobile phone networks destined play central role future networks mobile broadband applications voice calls major implications air interfaces core network architecture security future networks 4g technologies faster better drawing board name lte long term evolution even 3g design deployment continues wireless technologies also offer broadband internet access fixed mobile clients notably 16 networks common name wimax entirely possible lte wimax collision course hard predict happen 70 introduction wireless lans 11 almost soon laptop computers appeared many people dream walking office magically laptop computer connected internet consequently various groups began working ways accomplish goal practical approach equip office laptop computers short range radio transmitters receivers allow talk work field rapidly led wireless lans marketed variety companies trouble two compatible proliferation standards meant computer equipped brand x radio would work room equipped brand base station mid 1990s industry decided wireless lan standard might good idea ieee committee standardized wired lans given task drawing wireless lan standard first decision easiest call lan standards numbers like 10 wireless lan standard dubbed 11 common slang name wifi important standard deserves respect call proper name 11 rest harder first problem find suitable frequency band available preferably worldwide approach taken opposite used mobile phone networks instead expensive licensed spectrum 11 systems operate unlicensed bands ism industrial scientific medical bands defined itu r e g 928 mhz 5 ghz 725 825 ghz devices allowed use spectrum provided limit transmit power let different devices coexist course means 11 radios may find competing cordless phones garage door openers microwave ovens 11 networks made clients laptops mobile phones infrastructure called aps access points installed buildings access points sometimes called base stations access points connect wired network communication clients goes access point also possible clients radio range talk directly two computers office without access point arrangement called ad hoc network used much less often access point mode modes shown 11 transmission complicated wireless conditions vary even small changes environment frequencies used 11 radio signals reflected solid objects multiple echoes transmission may reach receiver along different paths echoes cancel reinforce causing received signal fluctuate greatly phenomenon called multipath fading shown key idea overcoming variable wireless conditions path diversity sending information along multiple independent paths way sec example networks access wired network point b wireless network access point b ad hoc network information likely received even one paths happens poor due fade independent paths typically built digital modulation scheme physical layer options include using different frequencies across allowed band following different spatial paths different pairs antennas repeating bits different periods time multiple paths non faded signal wireless transmitter reflector wireless receiver faded signal multipath fading different versions 11 used techniques initial standard defined wireless lan ran either mbps mbps hopping frequencies spreading signal across allowed spectrum almost immediately people complained slow work began faster standards spread spectrum design extended became 11b standard running rates mbps 11a 11g standards switched different modulation scheme called ofdm orthogonal frequency division multiplexing divides wide band spectrum many narrow slices different bits sent parallel improved scheme study chap boosted 11a g bit 72 introduction rates mbps significant increase people still wanted throughput support demanding uses latest version 11n uses wider frequency bands four antennas per computer achieve rates mbps since wireless inherently broadcast medium 11 radios also deal problem multiple transmissions sent time collide may interfere reception handle problem 11 uses csma carrier sense multiple access scheme draws ideas classic wired ethernet ironically drew early wireless network developed hawaii called aloha computers wait short random interval transmitting defer transmissions hear someone else already transmitting scheme makes less likely two computers send time work well case wired networks though see examine suppose computer transmitting computer b radio range transmitter short reach computer c c wants transmit b listen starting fact hear anything mean transmission succeed inability c hear starting causes collisions occur collision sender waits another longer random delay retransmits packet despite issues scheme works well enough practice range radio range c radio b c range single radio may cover entire system another problem mobility mobile client moved away access point using range different access point way handing needed solution 11 network consist multiple cells access point distribution system connects cells distribution system often switched ethernet use technology clients move may find another access point better signal one currently using change association outside entire system looks like single wired lan sec example networks said mobility 11 limited value far compared mobility mobile phone network typically 11 used nomadic clients go one fixed location another rather used go mobility really needed nomadic usage even 11 mobility used extends single 11 network might cover large building future schemes need provide mobility across different networks across different technologies e g 21 finally problem security since wireless transmissions broadcast easy nearby computers receive packets information intended prevent 11 standard included encryption scheme known wep wired equivalent privacy idea make wireless security like wired security good idea unfortunately scheme flawed soon broken borisov et al since replaced newer schemes different cryptographic details 11i standard also called wifi protected access initially called wpa replaced wpa2 11 caused revolution wireless networking set continue beyond buildings starting installed trains planes boats automobiles people surf internet wherever go mobile phones manner consumer electronics game consoles digital cameras communicate come back detail chap rfid sensor networks networks studied far made computing devices easy recognize computers mobile phones radio frequency identification rfid everyday objects also part computer network rfid tag looks like postage stamp sized sticker affixed embedded object tracked object might cow passport book shipping pallet tag consists small microchip unique identifier antenna receives radio transmissions rfid readers installed tracking points find tags come range interrogate information shown applications include checking identities managing supply chain timing races replacing barcodes many kinds rfid different properties perhaps fascinating aspect rfid technology rfid tags neither electric plug battery instead energy needed operate supplied form radio waves rfid readers technology called passive rfid distinguish less common active rfid power source tag one common form rfid uhf rfid ultra high frequency rfid used shipping pallets drivers licenses readers send signals 74 introduction rfid tag rfid reader rfid used network everyday objects 928 mhz band united states tags communicate distances several meters changing way reflect reader signals reader able pick reflections way operating called backscatter another popular kind rfid hf rfid high frequency rfid operates 56 mhz likely passport credit cards books noncontact payment systems hf rfid short range typically meter less physical mechanism based induction rather backscatter also forms rfid using frequencies lf rfid low frequency rfid developed hf rfid used animal tracking kind rfid likely cat rfid readers must somehow solve problem dealing multiple tags within reading range means tag simply respond hears reader signals multiple tags may collide solution similar approach taken 11 tags wait short random interval responding identification allows reader narrow individual tags interrogate security another problem ability rfid readers easily track object hence person uses invasion privacy unfortunately difficult secure rfid tags lack computation communication power run strong cryptographic algorithms instead weak measures like passwords easily cracked used identity card remotely read official border stop card tracked people without knowledge much rfid tags started identification chips rapidly turning fullfledged computers example many tags memory updated later queried information happened tagged object stored rieback et al demonstrated means usual problems computer malware apply cat passport might used spread rfid virus step capability rfid sensor network sensor networks deployed monitor aspects physical world far mostly used scientific experimentation monitoring bird habitats volcanic activity zebra migration business applications including healthcare sec example networks monitoring equipment vibration tracking frozen refrigerated otherwise perishable goods far behind sensor nodes small computers often size key fob temperature vibration sensors many nodes placed environment monitored typically batteries though may scavenge energy vibrations sun rfid enough energy key challenge nodes must communicate carefully able deliver sensor information external collection point common strategy nodes self organize relay messages shown design called multihop network wireless hop sensor node data collection point multihop topology sensor network rfid sensor networks likely become much capable pervasive future researchers already combined best technologies prototyping programmable rfid tags light movement sensors sample et al network standardization many network vendors suppliers exist ideas things done without coordination would complete chaos users would get nothing done way agree network standards good standards allow different computers communicate also increase market products adhering standards larger market leads mass production economies scale manufacturing better implementations benefits decrease price increase acceptance section take quick look important little known world international standardization let us first discuss belongs 76 introduction standard reasonable person might assume standard tells protocol work good job implementing person would wrong standards define needed interoperability less lets larger market emerge also lets companies compete basis good products example 11 standard defines many transmission rates say sender use rate key factor good performance whoever makes product often getting interoperability way difficult since many implementation choices standards usually define many options 11 many problems strategy become common practice trade group called wifi alliance started work interoperability within 11 standard similarly protocol standard defines protocol wire service interface inside box except help explain protocol real service interfaces often proprietary example way tcp interfaces ip within computer matter talking remote host matters remote host speaks tcp ip fact tcp ip commonly implemented together without distinct interface said good service interfaces like good apis valuable getting protocols used best ones berkeley sockets become popular standards fall two categories de facto de jure de facto latin fact standards happened without formal plan http protocol web runs started life de facto standard part early www browsers developed tim berners lee cern use took growth web bluetooth another example originally developed ericsson everyone using de jure latin law standards contrast adopted rules formal standardization body international standardization authorities generally divided two classes established treaty among national governments comprising voluntary nontreaty organizations area computer network standards several organizations type notably itu iso ietf ieee discuss practice relationships standards companies standardization bodies complicated de facto standards often evolve de jure standards especially successful happened case http quickly picked ietf standards bodies often ratify others standards looks like patting one another back increase market technology days many ad hoc business alliances formed around particular technologies also play significant role developing refining network standards example 3gpp third generation partnership project collaboration telecommunications associations drives umts 3g mobile phone standards sec network standardization telecommunications world legal status world telephone companies varies considerably country country one extreme united states separate mostly small privately owned telephone companies added breakup world largest corporation providing telephone service percent america telephones telecommunications act overhauled regulation foster competition extreme countries national government complete monopoly communication including mail telegraph telephone often radio television much world falls category cases telecommunication authority nationalized company others simply branch government usually known ptt post telegraph telephone administration worldwide trend toward liberalization competition away government monopoly european countries partially privatized ptts elsewhere process still slowly gaining steam different suppliers services clearly need provide compatibility worldwide scale ensure people computers one country call counterparts another one actually need existed long time representatives many european governments met form predecessor today itu international telecommunication union job standardize international telecommunications days meant telegraphy even clear half countries used morse code half used code going problem telephone put international service itu took job standardizing telephony pronounced te lef ony well itu became agency united nations itu governmental members including almost every member united nations since united states ptt somebody else represent itu task fell state department probably grounds itu foreign countries state department specialty itu also sector associate members include telephone companies e g vodafone sprint telecom equipment manufacturers e g cisco nokia nortel computer vendors e g microsoft agilent toshiba chip manufacturers e g intel motorola ti interested companies e g boeing cbs verisign itu three main sectors focus primarily itu telecommunications standardization sector concerned telephone data communication systems sector called ccitt acronym french name comite consultatif international te le graphique et te le phonique itu r radiocommunications sector concerned 78 introduction coordinating use competing interest groups radio frequencies worldwide sector itu development sector promotes development information communication technologies narrow digital divide countries effective access information technologies countries limited access itu task make technical recommendations telephone telegraph data communication interfaces often become internationally recognized standards though technically recommendations suggestions governments adopt ignore wish governments like year old boys take kindly given orders practice country wishes adopt telephone standard different used rest world free price cutting everyone else might work north korea elsewhere would real problem real work itu done study groups currently study groups often large people cover topics ranging telephone billing multimedia services security sg example standardizes dsl technologies popularly used connect internet order make possible get anything done study groups divided working parties turn divided expert teams turn divided ad hoc groups bureaucracy always bureaucracy despite itu actually get things done since inception produced recommendations many widely used practice example recommendation h also iso standard known mpeg avc widely used video compression x public key certificates used secure web browsing digitally signed email field telecommunications completes transition started 1980s entirely national entirely global standards become increasingly important organizations want become involved setting information itu see irmer international standards world international standards produced published iso international standards organization voluntary nontreaty organization founded members national standards organizations member countries members include ansi u bsi great britain afnor france din germany others iso issues standards truly vast number subjects ranging nuts bolts literally telephone pole coatings mention cocoa beans iso fishing nets iso women underwear iso quite purist iso true name international organization standardization sec network standardization subjects one might think subject standardization issues telecommunication standards iso itu often cooperate iso member itu avoid irony two official mutually incompatible international standards 000 standards issued including osi standards iso technical committees tcs numbered order creation dealing specific subject tc1 deals nuts bolts standardizing screw thread pitches jtc1 deals information technology including networks computers software first far joint technical committee created merging tc97 activities iec yet another standardization body tc subcommittees scs divided working groups wgs real work done largely wgs 000 volunteers worldwide many volunteers assigned work iso matters employers whose products standardized others government officials keen country way things become international standard academic experts also active many wgs procedure used iso adopting standards designed achieve broad consensus possible process begins one national standards organizations feels need international standard area working group formed come cd committee draft cd circulated member bodies get months criticize substantial majority approves revised document called dis draft international standard produced circulated comments voting based results round final text international standard prepared approved published areas great controversy cd dis may go several versions acquiring enough votes whole process take years nist national institute standards technology part u department commerce used called national bureau standards issues standards mandatory purchases made u government except department defense defines standards another major player standards world ieee institute electrical electronics engineers largest professional organization world addition publishing scores journals running hundreds conferences year ieee standardization group develops standards area electrical engineering computing ieee committee standardized many kinds lans study output later book actual work done collection working groups listed success rate various working groups low x number guarantee success still impact success stories especially 11 industry world enormous 80 introduction number topic overview architecture lans logical link control ethernet token bus briefly used manufacturing plants token ring ibm entry lan world dual queue dual bus early metropolitan area network technical advisory group broadband technologies technical advisory group fiber optic technologies isochronous lans real time applications 10 virtual lans security 11 wireless lans wifi 12 demand priority hewlett packard anylan 13 unlucky number nobody wanted 14 cable modems defunct industry consortium got first 15 personal area networks bluetooth zigbee 16 broadband wireless wimax 17 resilient packet ring 18 technical advisory group radio regulatory issues 19 technical advisory group coexistence standards 20 mobile broadband wireless similar 16e 21 media independent handoff roaming technologies 22 wireless regional area network working groups important ones marked ones marked hibernating one marked gave disbanded internet standards world worldwide internet standardization mechanisms different itu iso difference crudely summed saying people come itu iso standardization meetings wear suits people come internet standardization meetings wear jeans except meet san diego wear shorts shirts itu iso meetings populated corporate officials government civil servants standardization job regard standardization good thing devote lives internet people hand prefer anarchy matter principle however hundreds millions sec network standardization people thing little communication occur thus standards however regrettable sometimes needed context david clark made famous remark internet standardization consisting rough consensus running code arpanet set dod created informal committee oversee committee renamed iab internet activities board given slighter broader mission namely keep researchers involved arpanet internet pointed less direction activity unlike herding cats meaning acronym iab later changed internet architecture board approximately ten members iab headed task force issue importance iab met several times year discuss results give feedback dod nsf providing funding time standard needed e g new routing algorithm iab members would thrash announce change graduate students heart software effort could implement communication done series technical reports called rfcs request comments rfcs stored online fetched anyone interested www ietf org rfc numbered chronological order creation exist refer many rfcs book internet grown large highly informal style longer worked many vendors offered tcp ip products want change ten researchers thought better idea summer iab reorganized researchers moved irtf internet research task force made subsidiary iab along ietf internet engineering task force iab repopulated people representing broader range organizations research community initially self perpetuating group members serving year term new members appointed old ones later internet society created populated people interested internet internet society thus sense comparable acm ieee governed elected trustees appoint iab members idea split irtf concentrate long term research ietf dealt short term engineering issues ietf divided working groups specific problem solve chairmen working groups initially met steering committee direct engineering effort working group topics include new applications user information osi integration routing addressing security network management standards eventually many working groups formed grouped areas area chairmen met steering committee addition formal standardization process adopted patterned isos become proposed standard basic idea must explained rfc sufficient interest community warrant consideration 82 introduction advance draft standard stage working implementation must rigorously tested least two independent sites least months iab convinced idea sound software works declare rfc internet standard internet standards become dod standards mil std making mandatory dod suppliers web standards world wide web consortium w3c develops protocols guidelines facilitate long term growth web industry consortium led tim berners lee set web really begun take w3c members around world produced w3c recommendations standards called covering topics html web privacy metric units avoid confusion worth stating explicitly book computer science general metric units used instead traditional english units furlong stone fortnight system principal metric prefixes listed prefixes typically abbreviated first letters units greater capitalized kb mb etc one exception historical reasons kbps kilobits sec thus mbps communication line transmits bits sec psec ps clock ticks every 10 seconds since milli micro begin letter choice made normally used milli greek letter mu used micro exp explicit prefix exp 001 milli explicit prefix 000 000001 micro 000 000 000 giga 000 000 tera kilo mega 000000001 nano 12 000000000001 pico 15 000000000000001 femto 000 000 000 peta 18 0000000000000000001 atto 000 000 000 exa 24 000 000 000 000 zetta 000 000 000 000 yotta 0000000000000000000001 zepto 0000000000000000000000001 yocto principal metric prefixes also worth pointing measuring memory disk file database sizes common industry practice units slightly different meanings kilo means rather memories always power two thus kb memory contains bytes bytes note also capital b usage mean bytes units eight sec metric units bits instead lowercase b means bits similarly mb memory contains 048 bytes gb memory contains 073 824 bytes tb database contains 099 627 bytes however kbps communication line transmits bits per second mbps lan runs 000 bits sec speeds powers two unfortunately many people tend mix two systems especially disk sizes avoid ambiguity book use symbols kb mb gb tb bytes respectively symbols kbps mbps gbps tbps bits sec respectively outline rest book book discusses principles practice computer networking chapters start discussion relevant principles followed number examples illustrate principles examples usually taken internet wireless networks mobile phone network since important different examples given relevant book structured according hybrid model starting chap begin working way protocol hierarchy beginning bottom provide background field data communication covers wired wireless transmission systems material concerned deliver information physical channels although cover architectural rather hardware aspects several examples physical layer public switched telephone network mobile telephone network cable television network also discussed chapters discuss data link layer two parts chap looks problem send packets across link including error detection correction look dsl used broadband internet access phone lines real world example data link protocol chap examine medium access sublayer part data link layer deals share channel multiple computers examples look include wireless 11 rfid wired lans classic ethernet link layer switches connect lans switched ethernet also discussed chapter deals network layer especially routing many routing algorithms static dynamic covered even good routing algorithms though traffic offered network handle packets delayed discarded discuss issue prevent congestion guarantee certain quality service connecting heterogeneous networks form internetworks also leads numerous problems discussed network layer internet given extensive coverage 84 introduction chapter deals transport layer much emphasis connection oriented protocols reliability since many applications need internet transport protocols udp tcp covered detail performance issues chapter deals application layer protocols applications first topic dns internet telephone book next comes email including discussion protocols move web detailed discussions static dynamic content happens client server sides follow look networked multimedia including streaming audio video finally discuss content delivery networks including peer peer technology chapter network security topic aspects relate layers easiest treat layers thoroughly explained chapter starts introduction cryptography later shows cryptography used secure communication email web chapter ends discussion areas security collides privacy freedom speech censorship social issues chapter contains annotated list suggested readings arranged chapter intended help readers would like pursue study networking chapter also alphabetical bibliography references cited book authors web site pearson http www pearsonhighered com tanenbaum page links many tutorials faqs companies industry consortia professional organizations standards organizations technologies papers summary computer networks many uses companies individuals home move companies use networks computers share corporate information typically using client server model employee desktops acting clients accessing powerful servers machine room individuals networks offer access variety information entertainment resources well way buy sell products services individuals often access internet via phone cable providers home though increasingly wireless access used laptops phones technology advances enabling new kinds mobile applications networks computers embedded appliances consumer devices advances raise social issues privacy concerns roughly speaking networks divided lans mans wans internetworks lans typical cover building operate high speeds mans sec summary usually cover city example cable television system used many people access internet wans may cover country continent technologies used build networks point point e g cable others broadcast e g wireless networks interconnected routers form internetworks internet largest best known example wireless networks example 11 lans 3g mobile telephony also becoming extremely popular network software built around protocols rules processes communicate networks support protocol hierarchies layer providing services layer insulating details protocols used lower layers protocol stacks typically based either osi model tcp ip model link network transport application layers differ layers design issues include reliability resource allocation growth security much book deals protocols design networks provide various services users services range connectionless best efforts packet delivery connection oriented guaranteed delivery networks connectionless service provided one layer connection oriented service provided layer well known networks include internet 3g mobile telephone network 11 lans internet evolved arpanet networks added form internetwork present day internet actually collection many thousands networks use tcp ip protocol stack 3g mobile telephone network provides wireless mobile access internet speeds multiple mbps course carries voice calls well wireless lans based ieee 11 standard deployed many homes cafes provide connectivity rates excess mbps new kinds networks emerging embedded sensor networks networks based rfid technology enabling multiple computers talk requires large amount standardization hardware software organizations itu iso ieee iab manage different parts standardization process problems imagine trained st bernard bernie carry box three mm tapes instead flask brandy disk fills consider emergency tapes contain gigabytes dog travel side wherever may km hour range distances bernie higher data rate transmission line whose data rate excluding overhead mbps answer change bernie speed doubled ii tape capacity doubled iii data rate transmission line doubled 86 introduction alternative lan simply big timesharing system terminals users give two advantages client server system using lan performance client server system strongly influenced two major network characteristics bandwidth network many bits sec transport latency many seconds takes first bit get client server give example network exhibits high bandwidth also high latency give example one low bandwidth low latency besides bandwidth latency parameter needed give good characterization quality service offered network used digitized voice traffic ii video traffic iii financial transaction traffic factor delay store forward packet switching system long takes store forward packet switch switching time sec likely major factor response client server system client new york server california assume propagation speed copper fiber speed light vacuum client server system uses satellite network satellite height 000 km best case delay response request future everyone home terminal connected computer network instant public referendums important pending legislation become possible ultimately existing legislatures could eliminated let people expressed directly positive aspects direct democracy fairly obvious discuss negative aspects five routers connected point point subnet pair routers designers may put high speed line medium speed line low speed line line takes ms computer time generate inspect topology long take inspect disadvantage broadcast subnet capacity wasted multiple hosts attempt access channel time simplistic example suppose time divided discrete slots n hosts attempting use channel probability p slot fraction slots wasted due collisions two reasons using layered protocols one possible disadvantage using layered protocols president specialty paint corp gets idea work local beer brewer produce invisible beer anti litter measure president tells legal department look turn ask engineering help result chief engineer calls counterpart brewery discuss technical aspects project engineers report back respective legal departments confer telephone arrange legal aspects finally two corporate presidents discuss financial side deal principle multilayer protocol sense osi model communication mechanism violate chap problems two networks provide reliable connection oriented service one offers reliable byte stream offers reliable message stream identical distinction made give example differ negotiation mean discussing network protocols give example service shown services implicit figure networks data link layer handles transmission errors requesting damaged frames retransmitted probability frame damaged p mean number transmissions required send frame assume acknowledgements never lost system n layer protocol hierarchy applications generate messages length bytes layers h byte header added fraction network bandwidth filled headers main difference tcp udp subnet b designed withstand nuclear war many bombs would take partition nodes two disconnected sets assume bomb wipes node links connected internet roughly doubling size every months although one really knows sure one estimate put number hosts million use data compute expected number internet hosts year believe explain file transferred two computers two acknowledgement strategies possible first one file chopped packets individually acknowledged receiver file transfer whole acknowledged second one packets acknowledged individually entire file acknowledged arrives discuss two approaches mobile phone network operators need know subscribers mobile phones hence users located explain bad users give reasons good users long bit original standard meters use transmission speed mbps assume propagation speed coax speed light vacuum image pixels bytes pixel assume image uncompressed long take transmit kbps modem channel mbps cable modem mbps ethernet mbps ethernet gigabit ethernet ethernet wireless networks similarities differences one property ethernet one frame time transmitted ethernet 11 share property ethernet discuss answer list two advantages two disadvantages international standards network protocols 88 introduction system permanent part removable part cd rom drive cd rom important system standardized different companies make permanent removable parts everything still works together give three examples outside computer industry international standards exist give three areas outside computer industry exist suppose algorithms used implement operations layer k changed impact operations layers k k suppose change service set operations provided layer k impact services layers k k provide list reasons response time client may larger best case delay disadvantages using small fixed length cells atm make list activities every day computer networks used would life altered networks suddenly switched find networks used school place work describe network types topologies switching methods used ping program allows send test packet given location see long takes get back try using ping see long takes get location several known locations data plot one way transit time internet function distance best use universities since location servers known accurately example berkeley edu berkeley california mit edu cambridge massachusetts vu nl amsterdam netherlands www usyd edu au sydney australia www uct ac za cape town south africa go ietf web site www ietf org see pick project like write half page report problem proposed solution internet made large number networks arrangement determines topology internet considerable amount information internet topology available line use search engine find internet topology write short report summarizing findings search internet find important peering points used routing packets internet present write program implements message flow top layer bottom layer layer protocol model program include separate protocol function layer protocol headers sequence characters protocol function two parameters message passed higher layer protocol char buffer size message function attaches header front message prints new message standard output invokes protocol function lower layer protocol program input application message sequence characters less 2 physical layer chapter look lowest layer protocol model physical layer defines electrical timing interfaces bits sent signals channels physical layer foundation network built properties different kinds physical channels determine performance e g throughput latency error rate good place start journey networkland begin theoretical analysis data transmission discover mother parent nature puts limits sent channel cover three kinds transmission media guided copper wire fiber optics wireless terrestrial radio satellite technologies different properties affect design performance networks use material provide background information key transmission technologies used modern networks next comes digital modulation analog signals converted digital bits back look multiplexing schemes exploring multiple conversations put transmission medium time without interfering one another finally look three examples communication systems used practice wide area computer networks fixed telephone system mobile phone system cable television system important practice devote fair amount space one 90 physical layer theoretical basis data communication information transmitted wires varying physical property voltage current representing value voltage current single valued function time f model behavior signal analyze mathematically analysis subject following sections fourier analysis early 19th century french mathematician jean baptiste fourier proved reasonably behaved periodic function g period constructed sum possibly infinite number sines cosines g c sin nft bn cos nft n n f fundamental frequency bn sine cosine amplitudes nth harmonics terms c constant decomposition called fourier series fourier series function reconstructed period known amplitudes given original function time found performing sums eq data signal finite duration handled imagining repeats entire pattern forever e interval 2t etc amplitudes computed given g multiplying sides eq sin kft integrating since k n sin kft sin nft dt k n one term summation survives bn summation vanishes completely similarly multiplying eq cos kft integrating derive bn integrating sides equation stands find c results performing operations follows g sin nft dt t0 bn g cos nft dt t0 c g dt t0 bandwidth limited signals relevance data communication real channels affect different frequency signals differently let us consider specific example transmission ascii character b encoded bit byte bit pattern transmitted left hand part shows sec theoretical basis data communication voltage output transmitting computer fourier analysis signal yields coefficients cos n cos n cos n cos n n bn sin n sin n sin n sin n n c root mean square amplitudes 2n b 2n first terms shown right hand side values interest squares proportional energy transmitted corresponding frequency transmission facility transmit signals without losing power process fourier components equally diminished resulting signal would reduced amplitude distorted e would nice squared shape unfortunately transmission facilities diminish different fourier components different amounts thus introducing distortion usually wire amplitudes transmitted mostly undiminished frequency fc measured cycles sec hertz hz frequencies cutoff frequency attenuated width frequency range transmitted without strongly attenuated called bandwidth practice cutoff really sharp often quoted bandwidth frequency received power fallen half bandwidth physical property transmission medium depends example construction thickness length wire fiber filters often used limit bandwidth signal 11 wireless channels allowed use roughly mhz example 11 radios filter signal bandwidth size another example traditional analog television channels occupy mhz wire air filtering lets signals share given region spectrum improves overall efficiency system means frequency range signals start zero matter bandwidth still width band frequencies passed information carried depends width starting ending frequencies signals run maximum frequency called baseband signals signals shifted occupy higher range frequencies case wireless transmissions called passband signals let us consider signal would look bandwidth low lowest frequencies transmitted e function approximated first terms eq b shows signal results channel allows first harmonic 92 time rms amplitude physical layer 50 25 4 8 10 12 14 harmonic number harmonic b harmonics c harmonics 4 harmonics 4 8 harmonic number time e binary signal root mean square fourier amplitudes b e successive approximations original signal sec theoretical basis data communication fundamental f pass similarly c e show spectra reconstructed functions higher bandwidth channels digital transmission goal receive signal enough fidelity reconstruct sequence bits sent already easily e wasteful use harmonics receive accurate replica given bit rate b bits sec time required send bits example bit time b sec frequency first harmonic signal b hz ordinary telephone line often called voice grade line artificially introduced cutoff frequency hz presence restriction means number highest harmonic passed roughly b 000 b cutoff sharp data rates numbers work shown numbers clear trying send bps voice grade telephone line transform something looking like c making accurate reception original binary bit stream tricky obvious data rates much higher kbps hope binary signals even transmission facility completely noiseless words limiting bandwidth limits data rate even perfect channels however coding schemes make use several voltage levels exist achieve higher data rates discuss later chapter bps msec first harmonic hz harmonics sent 67 33 67 33 67 83 42 21 relation data rate harmonics example much confusion bandwidth means different things electrical engineers computer scientists electrical engineers analog bandwidth described quantity measured hz computer scientists digital bandwidth maximum data rate channel quantity measured bits sec data rate end result using analog bandwidth physical channel digital transmission two related discuss next book clear context whether mean analog bandwidth hz digital bandwidth bits sec 94 physical layer maximum data rate channel early engineer henry nyquist realized even perfect channel finite transmission capacity derived equation expressing maximum data rate finite bandwidth noiseless channel claude shannon carried nyquist work extended case channel subject random thermodynamic noise shannon paper important paper information theory briefly summarize classical results nyquist proved arbitrary signal run low pass filter bandwidth b filtered signal completely reconstructed making 2b exact samples per second sampling line faster 2b times per second pointless higher frequency components sampling could recover already filtered signal consists v discrete levels nyquist theorem states maximum data rate 2b log2 v bits sec example noiseless khz channel transmit binary e two level signals rate exceeding bps far considered noiseless channels random noise present situation deteriorates rapidly always random thermal noise present due motion molecules system amount thermal noise present measured ratio signal power noise power called snr signal noise ratio denote signal power noise power n signal noise ratio n usually ratio expressed log scale quantity log10 n vary tremendous range units log scale called decibels db deci meaning bel chosen honor alexander graham bell invented telephone n ratio db ratio db ratio db manufacturers stereo amplifiers often characterize bandwidth frequency range products linear giving 3db frequency end points amplification factor approximately halved log10 shannon major result maximum data rate capacity noisy channel whose bandwidth b hz whose signal noise ratio n given maximum number bits sec b log2 n tells us best capacities real channels example adsl asymmetric digital subscriber line provides internet access normal telephone lines uses bandwidth around mhz snr depends strongly distance home telephone exchange snr around db short lines km good characteristics sec theoretical basis data communication channel never transmit much mbps matter many signal levels used matter often infrequently samples taken practice adsl specified mbps though users often see lower rates data rate actually good years communications techniques greatly reduced gap shannon capacity capacity real systems shannon result derived information theory arguments applies channel subject thermal noise counterexamples treated category perpetual motion machines adsl exceed mbps must either improve snr example inserting digital repeaters lines closer customers use bandwidth done evolution asdl2 guided transmission media purpose physical layer transport bits one machine another various physical media used actual transmission one niche terms bandwidth delay cost ease installation maintenance media roughly grouped guided media copper wire fiber optics unguided media terrestrial wireless satellite lasers air look guided media section unguided media next sections magnetic media one common ways transport data one computer another write onto magnetic tape removable media e g recordable dvds physically transport tape disks destination machine read back although method sophisticated using geosynchronous communication satellite often cost effective especially applications high bandwidth cost per bit transported key factor simple calculation make point clear industry standard ultrium tape hold gigabytes box cm hold tapes total capacity terabytes terabits petabits box tapes delivered anywhere united states hours federal express companies effective bandwidth transmission terabits 400 sec bit gbps destination hour away road bandwidth increased gbps computer network even approach course networks getting faster tape densities increasing look cost get similar picture cost ultrium tape around bought bulk tape reused least times 96 physical layer tape cost maybe per box per usage add another shipping probably much less cost roughly ship tb amounts shipping gigabyte little half cent network beat moral story never underestimate bandwidth station wagon full tapes hurtling highway twisted pairs although bandwidth characteristics magnetic tape excellent delay characteristics poor transmission time measured minutes hours milliseconds many applications online connection needed one oldest still common transmission media twisted pair twisted pair consists two insulated copper wires typically mm thick wires twisted together helical form like dna molecule twisting done two parallel wires constitute fine antenna wires twisted waves different twists cancel wire radiates less effectively signal usually carried difference voltage two wires pair provides better immunity external noise noise tends affect wires leaving differential unchanged common application twisted pair telephone system nearly telephones connected telephone company telco office twisted pair telephone calls adsl internet access run lines twisted pairs run several kilometers without amplification longer distances signal becomes attenuated repeaters needed many twisted pairs run parallel substantial distance wires coming apartment building telephone company office bundled together encased protective sheath pairs bundles would interfere one another twisting parts world telephone lines run poles ground common see bundles several centimeters diameter twisted pairs used transmitting either analog digital information bandwidth depends thickness wire distance traveled several megabits sec achieved kilometers many cases due adequate performance low cost twisted pairs widely used likely remain years come twisted pair cabling comes several varieties garden variety deployed many office buildings called category cabling cat category twisted pair consists two insulated wires gently twisted together four pairs typically grouped plastic sheath protect wires keep together arrangement shown different lan standards may use twisted pairs differently example mbps ethernet uses two four pairs one pair direction sec guided transmission media twisted pair category utp cable four twisted pairs reach higher speeds gbps ethernet uses four pairs directions simultaneously requires receiver factor signal transmitted locally general terminology order links used directions time like two lane road called full duplex links contrast links used either direction one way time like single track railroad line called half duplex links third category consists links allow traffic one direction like one way street called simplex links returning twisted pair cat replaced earlier category cables similar cable uses connector twists per meter twists result less crosstalk better quality signal longer distances making cables suitable high speed computer communication especially mbps gbps ethernet lans new wiring likely category even category categories stringent specifications handle signals greater bandwidths cables category rated signals mhz support gbps links soon deployed category wiring types referred utp unshielded twisted pair consist simply wires insulators contrast category cables shielding individual twisted pairs well around entire cable inside plastic protective sheath shielding reduces susceptibility external interference crosstalk nearby cables meet demanding performance specifications cables reminiscent high quality bulky expensive shielded twisted pair cables ibm introduced early 1980s prove popular outside ibm installations evidently time try coaxial cable another common transmission medium coaxial cable known many friends coax pronounced co ax better shielding greater bandwidth unshielded twisted pairs span longer distances 98 physical layer higher speeds two kinds coaxial cable widely used one kind ohm cable commonly used intended digital transmission start kind ohm cable commonly used analog transmission cable television distinction based historical rather technical factors e g early dipole antennas impedance ohms easy use existing impedance matching transformers starting mid1990s cable tv operators began provide internet access cable made ohm cable important data communication coaxial cable consists stiff copper wire core surrounded insulating material insulator encased cylindrical conductor often closely woven braided mesh outer conductor covered protective plastic sheath cutaway view coaxial cable shown copper core insulating material braided outer conductor protective plastic covering coaxial cable construction shielding coaxial cable give good combination high bandwidth excellent noise immunity bandwidth possible depends cable quality length modern cables bandwidth ghz coaxial cables used widely used within telephone system long distance lines largely replaced fiber optics longhaul routes coax still widely used cable television metropolitan area networks however power lines telephone cable television networks sources wiring reused data communication yet common kind wiring electrical power lines power lines deliver electrical power houses electrical wiring within houses distributes power electrical outlets use power lines data communication old idea power lines used electricity companies low rate communication remote metering many years well home control devices e g x10 standard recent years renewed interest high rate communication lines inside home lan outside home sec guided transmission media broadband internet access concentrate common scenario using electrical wires inside home convenience using power lines networking clear simply plug tv receiver wall must anyway need power send receive movies electrical wiring configuration shown plug radio data signal superimposed low frequency power signal active hot wire signals use wiring time electric cable data signal power signal network uses household electrical wiring difficulty using household electrical wiring network designed distribute power signals task quite different distributing data signals household wiring horrible job electrical signals sent 60 hz wiring attenuates much higher frequency mhz signals needed high rate data communication electrical properties wiring vary one house next change appliances turned causes data signals bounce around wiring transient currents appliances switch create electrical noise wide range frequencies without careful twisting twisted pairs electrical wiring acts fine antenna picking external signals radiating signals behavior means meet regulatory requirements data signal must exclude licensed frequencies amateur radio bands despite difficulties practical send least mbps typical household electrical wiring using communication schemes resist impaired frequencies bursts errors many products use various proprietary standards power line networking international standards actively development fiber optics many people computer industry take enormous pride fast computer technology improving follows moore law predicts doubling number transistors per chip roughly every two years schaller 100 physical layer original ibm pc ran clock speed 77 mhz twentyeight years later pcs could run four core cpu ghz increase gain factor around per decade impressive period wide area communication links went mbps t3 line telephone system gbps modern long distance line gain similarly impressive factor close per decade time error rate went per bit almost zero furthermore single cpus beginning approach physical limits number cpus increased per chip contrast achievable bandwidth fiber technology excess 000 gbps tbps nowhere near reaching limits current practical limit around gbps due inability convert electrical optical signals faster build higher capacity links many channels simply carried parallel single fiber section study fiber optics learn transmission technology works ongoing race computing communication communication may yet win fiber optic networks implication would essentially infinite bandwidth new conventional wisdom computers hopelessly slow networks try avoid computation costs matter much bandwidth wastes change take sink generation computer scientists engineers taught think terms low shannon limits imposed copper course scenario tell whole story include cost cost install fiber last mile reach consumers bypass low bandwidth wires limited availability spectrum tremendous also costs energy move bits compute may always islands inequities either computation communication essentially free example edge internet throw computation storage problem compressing caching content make better use internet access links within internet may reverse companies google moving huge amounts data across network cheaper store compute fiber optics used long haul transmission network backbones highspeed lans although far copper always managed catch eventually high speed internet access ftth fiber home optical transmission system three key components light source transmission medium detector conventionally pulse light indicates bit absence light indicates bit transmission medium ultra thin fiber glass detector generates electrical pulse light falls attaching light source one end optical fiber detector unidirectional data transmission system accepts electrical signal converts transmits light pulses reconverts output electrical signal receiving end sec guided transmission media transmission system would leak light useless practice interesting principle physics light ray passes one medium another example fused silica air ray refracted bent silica air boundary shown see light ray incident boundary angle emerging angle amount refraction depends properties two media particular indices refraction angles incidence certain critical value light refracted back silica none escapes air thus light ray incident critical angle trapped inside fiber shown b propagate many kilometers virtually loss air silica boundary air silica total internal reflection light source b three examples light ray inside silica fiber impinging air silica boundary different angles b light trapped total internal reflection sketch b shows one trapped ray since light ray incident boundary critical angle reflected internally many different rays bouncing around different angles ray said different mode fiber property called multimode fiber however fiber diameter reduced wavelengths light fiber acts like wave guide light propagate straight line without bouncing yielding single mode fiber single mode fibers expensive widely used longer distances currently available single mode fibers transmit data gbps km without amplification even higher data rates achieved laboratory shorter distances transmission light fiber optical fibers made glass turn made sand inexpensive raw material available unlimited amounts glassmaking known ancient egyptians glass mm thick 102 physical layer light could shine glass transparent enough useful windows developed renaissance glass used modern optical fibers transparent oceans full instead water seabed would visible surface ground airplane clear day attenuation light glass depends wavelength light well physical properties glass defined ratio input output signal power kind glass used fibers attenuation shown units decibels per linear kilometer fiber example factor two loss signal power gives attenuation log10 db figure shows near infrared part spectrum used practice visible light slightly shorter wavelengths microns micron meters true metric purist would refer wavelengths nm nm stick traditional usage 85 band 30 band 55 band attenuation db km 6 2 8 4 2 4 wavelength microns attenuation light fiber infrared region three wavelength bands commonly used present optical communication centered 85 30 55 microns respectively three bands 000 000 ghz wide 85 micron band used first higher attenuation used shorter distances wavelength lasers electronics could made material gallium arsenide last two bands good attenuation properties less loss per kilometer 55 micron band widely used erbium doped amplifiers work directly optical domain sec guided transmission media light pulses sent fiber spread length propagate spreading called chromatic dispersion amount wavelength dependent one way keep spread pulses overlapping increase distance done reducing signaling rate fortunately discovered making pulses special shape related reciprocal hyperbolic cosine causes nearly dispersion effects cancel possible send pulses thousands kilometers without appreciable shape distortion pulses called solitons considerable amount research going take solitons lab field fiber cables fiber optic cables similar coax except without braid shows single fiber viewed side center glass core light propagates multimode fibers core typically microns diameter thickness human hair single mode fibers core microns sheath jacket core cladding core glass cladding glass jacket plastic b side view single fiber b end view sheath three fibers core surrounded glass cladding lower index refraction core keep light core next comes thin plastic jacket protect cladding fibers typically grouped bundles protected outer sheath b shows sheath three fibers terrestrial fiber sheaths normally laid ground within meter surface occasionally subject attacks backhoes gophers near shore transoceanic fiber sheaths buried trenches kind seaplow deep water lie bottom snagged fishing trawlers attacked giant squid fibers connected three different ways first terminate connectors plugged fiber sockets connectors lose light make easy reconfigure systems second spliced mechanically mechanical splices lay two carefully cut ends next special sleeve clamp 104 physical layer place alignment improved passing light junction making small adjustments maximize signal mechanical splices take trained personnel minutes result light loss third two pieces fiber fused melted form solid connection fusion splice almost good single drawn fiber even small amount attenuation occurs three kinds splices reflections occur point splice reflected energy interfere signal two kinds light sources typically used signaling leds light emitting diodes semiconductor lasers different properties shown tuned wavelength inserting fabry perot mach zehnder interferometers source fiber fabry perot interferometers simple resonant cavities consisting two parallel mirrors light incident perpendicular mirrors length cavity selects wavelengths fit inside integral number times mach zehnder interferometers separate light two beams two beams travel slightly different distances recombined end phase certain wavelengths item data rate led low semiconductor laser high fiber type multi mode multi mode single mode distance short long lifetime long life short life temperature sensitivity minor substantial cost low cost expensive comparison semiconductor diodes leds light sources receiving end optical fiber consists photodiode gives electrical pulse struck light response time photodiodes convert signal optical electrical domain limits data rates gbps thermal noise also issue pulse light must carry enough energy detected making pulses powerful enough error rate made arbitrarily small comparison fiber optics copper wire instructive compare fiber copper fiber many advantages start handle much higher bandwidths copper alone would require use high end networks due low attenuation repeaters needed every km long lines versus every km copper sec guided transmission media resulting big cost saving fiber also advantage affected power surges electromagnetic interference power failures affected corrosive chemicals air important harsh factory environments oddly enough telephone companies like fiber different reason thin lightweight many existing cable ducts completely full room add new capacity removing copper replacing fiber empties ducts copper excellent resale value copper refiners see high grade ore also fiber much lighter copper one thousand twisted pairs km long weigh kg two fibers capacity weigh kg reduces need expensive mechanical support systems must maintained new routes fiber wins hands due much lower installation cost finally fibers leak light difficult tap properties give fiber good security potential wiretappers downside fiber less familiar technology requiring skills engineers fibers damaged easily bent much since optical transmission inherently unidirectional two way communication requires either two fibers two frequency bands one fiber finally fiber interfaces cost electrical interfaces nevertheless future fixed data communication short distances clearly fiber discussion aspects fiber optics networks see hecht wireless transmission age given rise information junkies people need online time mobile users twisted pair coax fiber optics use need get hits data laptop notebook shirt pocket palmtop wristwatch computers without tethered terrestrial communication infrastructure users wireless communication answer following sections look wireless communication general many important applications besides providing connectivity users want surf web beach wireless advantages even fixed devices circumstances example running fiber building difficult due terrain mountains jungles swamps etc wireless may better noteworthy modern wireless digital communication began hawaiian islands large chunks pacific ocean separated users computer center telephone system inadequate electromagnetic spectrum electrons move create electromagnetic waves propagate space even vacuum waves predicted british physicist james clerk maxwell first observed german 106 physical layer physicist heinrich hertz number oscillations per second wave called frequency f measured hz honor heinrich hertz distance two consecutive maxima minima called wavelength universally designated greek letter lambda antenna appropriate size attached electrical circuit electromagnetic waves broadcast efficiently received receiver distance away wireless communication based principle vacuum electromagnetic waves travel speed matter frequency speed usually called speed light c approximately sec foot cm per nanosecond case could made redefining foot distance light travels vacuum nsec rather basing shoe size long dead king copper fiber speed slows value becomes slightly frequency dependent speed light ultimate speed limit object signal ever move faster fundamental relation f c vacuum f c since c constant know f find vice versa rule thumb meters f mhz f example mhz waves meters long mhz waves meters long 1meter waves frequency mhz electromagnetic spectrum shown radio microwave infrared visible light portions spectrum used transmitting information modulating amplitude frequency phase waves ultraviolet light x rays gamma rays would even better due higher frequencies hard produce modulate propagate well buildings dangerous living things bands listed bottom official itu international telecommunication union names based wavelengths lf band goes km km approximately khz khz terms lf mf hf refer low medium high frequency respectively clearly names assigned nobody expected go mhz higher bands later named ultra super extremely tremendously high frequency bands beyond names incredibly astonishingly prodigiously high frequency ihf ahf phf would sound nice know shannon eq amount information signal electromagnetic wave carry depends received power proportional bandwidth obvious networking people like fiber optics much many ghz bandwidth available tap data transmission microwave band even fiber right logarithmic scale example consider 30 micron band width 17 microns use sec f hz wireless transmission radio microwave infrared uv x ray gamma ray visible light f hz satellite twisted pair coax maritime radio 1015 fiber optics terrestrial microwave fm radio tv band lf mf hf vhf uhf shf ehf thf electromagnetic spectrum uses communication eq find start end frequencies start end wavelengths find frequency range 000 ghz reasonable signalto noise ratio db tbps transmissions use relatively narrow frequency band e f f concentrate signals narrow band use spectrum efficiently obtain reasonable data rates transmitting enough power however cases wider band used three variations frequency hopping spread spectrum transmitter hops frequency frequency hundreds times per second popular military communication makes transmissions hard detect next impossible jam also offers good resistance multipath fading narrowband interference receiver stuck impaired frequency long enough shut communication robustness makes useful crowded parts spectrum ism bands describe shortly technique used commercially example bluetooth older versions 11 curious footnote technique coinvented austrian born sex goddess hedy lamarr first woman appear nude motion picture czech film extase first husband armaments manufacturer told easy block radio signals used control torpedoes discovered selling weapons hitler horrified disguised maid escape fled hollywood continue career movie actress spare time invented frequency hopping help allied war effort scheme used frequencies number keys 108 physical layer frequencies piano invention friend musical composer george antheil received u patent 292 however unable convince u navy invention practical use never received royalties years patent expired become popular second form spread spectrum direct sequence spread spectrum uses code sequence spread data signal wider frequency band widely used commercially spectrally efficient way let multiple signals share frequency band signals given different codes method called cdma code division multiple access return later chapter method shown contrast frequency hopping forms basis 3g mobile phone networks also used gps global positioning system even without different codes direct sequence spread spectrum like frequency hopping spread spectrum tolerate narrowband interference multipath fading fraction desired signal lost used role older 11b wireless lans fascinating detailed history spread spectrum communication see scholtz cdma user different code direct sequence spread spectrum frequency hopping spread spectrum ultrawideband underlay cdma user different code frequency spread spectrum ultra wideband uwb communication third method communication wider band uwb ultrawideband communication uwb sends series rapid pulses varying positions communicate information rapid transitions lead signal spread thinly wide frequency band uwb defined signals bandwidth least mhz least center frequency frequency band uwb also shown much bandwidth uwb potential communicate high rates spread across wide band frequencies tolerate substantial amount relatively strong interference narrowband signals importantly since uwb little energy given frequency used short range transmission cause harmful interference narrowband radio signals said underlay signals peaceful coexistence led application wireless pans run gbps although commercial success mixed also used imaging solid objects ground walls bodies part precise location systems sec wireless transmission discuss various parts electromagnetic spectrum used starting radio assume transmissions use narrow frequency band unless otherwise stated radio transmission radio frequency rf waves easy generate travel long distances penetrate buildings easily widely used communication indoors outdoors radio waves also omnidirectional meaning travel directions source transmitter receiver carefully aligned physically sometimes omnidirectional radio good sometimes bad 1970s general motors decided equip new cadillacs computer controlled antilock brakes driver stepped brake pedal computer pulsed brakes instead locking hard one fine day ohio highway patrolman began using new mobile radio call headquarters suddenly cadillac next began behaving like bucking bronco officer pulled car driver claimed done nothing car gone crazy eventually pattern began emerge cadillacs would sometimes go berserk major highways ohio highway patrol watching long long time general motors could understand cadillacs worked fine states also minor roads ohio much searching discover cadillac wiring made fine antenna frequency used ohio highway patrol new radio system properties radio waves frequency dependent low frequencies radio waves pass obstacles well power falls sharply distance source least fast r air signal energy spread thinly larger surface attenuation called path loss high frequencies radio waves tend travel straight lines bounce obstacles path loss still reduces power though received signal depend strongly reflections well high frequency radio waves also absorbed rain obstacles larger extent low frequency ones frequencies radio waves subject interference motors electrical equipment interesting compare attenuation radio waves signals guided media fiber coax twisted pair signal drops fraction per unit distance example db per 100m twisted pair radio signal drops fraction distance doubles example db per doubling free space behavior means radio waves travel long distances interference users problem reason governments tightly regulate use radio transmitters notable exceptions discussed later chapter 110 physical layer vlf lf mf bands radio waves follow ground illustrated waves detected perhaps km lower frequencies less higher ones radio broadcasting uses mf band ground waves boston radio stations heard easily new york radio waves bands pass buildings easily portable radios work indoors main problem using bands data communication low bandwidth see eq ground wave ion osph ere earth surface earth surface b vlf lf mf bands radio waves follow curvature earth b hf band bounce ionosphere hf vhf bands ground waves tend absorbed earth however waves reach ionosphere layer charged particles circling earth height km refracted sent back earth shown b certain atmospheric conditions signals bounce several times amateur radio operators hams use bands talk long distance military also communicate hf vhf bands microwave transmission mhz waves travel nearly straight lines therefore narrowly focused concentrating energy small beam means parabolic antenna like familiar satellite tv dish gives much higher signalto noise ratio transmitting receiving antennas must accurately aligned addition directionality allows multiple transmitters lined row communicate multiple receivers row without interference provided minimum spacing rules observed fiber optics decades microwaves formed heart long distance telephone transmission system fact mci one first competitors deregulated built entire system microwave communications passing towers tens kilometers apart even company name reflected mci stood microwave communications inc mci since gone fiber long series corporate mergers bankruptcies telecommunications shuffle become part verizon sec wireless transmission microwaves travel straight line towers far apart earth get way think seattle amsterdam link thus repeaters needed periodically higher towers farther apart distance repeaters goes roughly square root tower height meter high towers repeaters km apart unlike radio waves lower frequencies microwaves pass buildings well addition even though beam may well focused transmitter still divergence space waves may refracted low lying atmospheric layers may take slightly longer arrive direct waves delayed waves may arrive phase direct wave thus cancel signal effect called multipath fading often serious problem weather frequency dependent operators keep channels idle spares switch multipath fading temporarily wipes frequency band demand spectrum drives operators yet higher frequencies bands ghz routine use ghz new problem sets absorption water waves centimeters long absorbed rain effect would fine one planning build huge outdoor microwave oven roasting passing birds communication severe problem multipath fading solution shut links rained route around summary microwave communication widely used long distance telephone communication mobile phones television distribution purposes severe shortage spectrum developed several key advantages fiber main one right way needed lay cables buying small plot ground every km putting microwave tower one bypass telephone system entirely mci managed get started new long distance telephone company quickly sprint another early competitor deregulated went completely different route formed southern pacific railroad already owned large amount right way buried fiber next tracks microwave also relatively inexpensive putting two simple towers big poles four guy wires putting antennas one may cheaper burying km fiber congested urban area mountain may also cheaper leasing telephone company fiber especially telephone company yet even fully paid copper ripped put fiber politics electromagnetic spectrum prevent total chaos national international agreements gets use frequencies since everyone wants higher data rate everyone wants spectrum national governments allocate spectrum 112 physical layer fm radio television mobile phones well telephone companies police maritime navigation military government many competing users worldwide agency itu r wrc tries coordinate allocation devices work multiple countries manufactured however countries bound itu r recommendations fcc federal communication commission allocation united states occasionally rejected itu r recommendations usually required politically powerful group give piece spectrum even piece spectrum allocated use mobile phones additional issue carrier allowed use frequencies three algorithms widely used past oldest algorithm often called beauty contest requires carrier explain proposal serves public interest best government officials decide nice stories enjoy government official award property worth billions dollars favorite company often leads bribery corruption nepotism worse furthermore even scrupulously honest government official thought foreign company could better job national companies would lot explaining observation led algorithm holding lottery among interested companies problem idea companies interest using spectrum enter lottery say fast food restaurant shoe store chain wins resell spectrum carrier huge profit risk bestowing huge windfalls alert otherwise random companies severely criticized many led algorithm auction bandwidth highest bidder british government auctioned frequencies needed third generation mobile systems expected get billion actually received billion carriers got feeding frenzy scared death missing mobile boat event switched nearby governments greedy bits inspired hold auctions worked also left carriers much debt close bankruptcy even best cases take many years recoup licensing fee completely different approach allocating frequencies allocate instead let everyone transmit regulate power used stations short range interfere accordingly governments set aside frequency bands called ism industrial scientific medical bands unlicensed usage garage door openers cordless phones radio controlled toys wireless mice numerous wireless household devices use ism bands minimize interference uncoordinated devices fcc mandates devices ism bands limit transmit power e g watt use techniques spread signals range frequencies devices may also need take care avoid interference radar installations sec wireless transmission location bands varies somewhat country country united states example bands networking devices use practice without requiring fcc license shown mhz band used early versions 11 crowded ghz band available countries widely used 11b g bluetooth though subject interference microwave ovens radar installations ghz part spectrum includes u nii unlicensed national information infrastructure bands ghz bands relatively undeveloped since bandwidth used 11a quickly gaining popularity ism band ism band mhz mhz 928 mhz mhz 4835 ghz ghz ism band mhz mhz 25 35 47 ghz ghz ghz mhz 725 825 ghz ghz u nii bands ism u nii bands used united states wireless devices unlicensed bands roaring success past decade ability use spectrum freely unleashed huge amount innovation wireless lans pans evidenced widespread deployment technologies 11 bluetooth continue innovation spectrum needed one exciting development u fcc decision allow unlicensed use white spaces around mhz white spaces frequency bands allocated used locally transition analog digital television broadcasts u freed white spaces around mhz difficulty use white spaces unlicensed devices must able detect nearby licensed transmitters including wireless microphones first rights use frequency band another flurry activity happening around ghz band fcc opened ghz ghz unlicensed operation range enormous portion spectrum ism bands combined support kind high speed networks would needed stream high definition tv air across living room ghz radio 114 physical layer waves absorbed oxygen means signals propagate far making well suited short range networks high frequencies ghz extremely high frequency millimeter band infrared radiation posed initial challenge equipment makers products market infrared transmission unguided infrared waves widely used short range communication remote controls used televisions vcrs stereos use infrared communication relatively directional cheap easy build major drawback pass solid objects try standing remote control television see still works general go long wave radio toward visible light waves behave like light less less like radio hand fact infrared waves pass solid walls well also plus means infrared system one room building interfere similar system adjacent rooms buildings control neighbor television remote control furthermore security infrared systems eavesdropping better radio systems precisely reason therefore government license needed operate infrared system contrast radio systems must licensed outside ism bands infrared communication limited use desktop example connect notebook computers printers irda infrared data association standard major player communication game light transmission unguided optical signaling free space optics use centuries paul revere used binary optical signaling old north church prior famous ride modern application connect lans two buildings via lasers mounted rooftops optical signaling using lasers inherently unidirectional end needs laser photodetector scheme offers high bandwidth low cost relatively secure difficult tap narrow laser beam also relatively easy install unlike microwave transmission require fcc license laser strength narrow beam also weakness aiming laser beam mm wide target size pin head meters away requires marksmanship latter day annie oakley usually lenses put system defocus beam slightly add difficulty wind temperature changes distort beam laser beams also penetrate rain thick fog although normally work well sunny days however many factors issue use connect two spacecraft sec wireless transmission one authors ast attended conference modern hotel europe conference organizers thoughtfully provided room full terminals allow attendees read email boring presentations since local ptt unwilling install large number telephone lines days organizers put laser roof aimed university computer science building kilometers away tested night conference worked perfectly bright sunny day link failed completely stayed day pattern repeated next two days conference organizers discovered problem heat sun daytime caused convection currents rise roof building shown turbulent air diverted beam made dance around detector much like shimmering road hot day lesson work well difficult conditions well good conditions unguided optical links need engineered sufficient margin error laser beam misses detector photodetector region turbulent seeing laser heat rising building convection currents interfere laser communication systems bidirectional system two lasers pictured unguided optical communication may seem like exotic networking technology today might soon become much prevalent surrounded 116 physical layer cameras sense light displays emit light using leds technology data communication layered top displays encoding information pattern leds turn threshold human perception communicating visible light way inherently safe creates low speed network immediate vicinity display could enable sorts fanciful ubiquitous computing scenarios flashing lights emergency vehicles might alert nearby traffic lights vehicles help clear path informational signs might broadcast maps even festive lights might broadcast songs synchronized display communication satellites 1950s early 1960s people tried set communication systems bouncing signals metallized weather balloons unfortunately received signals weak practical use u navy noticed kind permanent weather balloon sky moon built operational system ship shore communication bouncing signals progress celestial communication field wait first communication satellite launched key difference artificial satellite real one artificial one amplify signals sending back turning strange curiosity powerful communication system communication satellites interesting properties make attractive many applications simplest form communication satellite thought big microwave repeater sky contains several transponders listens portion spectrum amplifies incoming signal rebroadcasts another frequency avoid interference incoming signal mode operation known bent pipe digital processing added separately manipulate redirect data streams overall band digital information even received satellite rebroadcast regenerating signals way improves performance compared bent pipe satellite amplify noise upward signal downward beams broad covering substantial fraction earth surface narrow covering area hundreds kilometers diameter according kepler law orbital period satellite varies radius orbit power higher satellite longer period near surface earth period minutes consequently low orbit satellites pass view fairly quickly many needed provide continuous coverage ground antennas must track altitude 800 km period hours altitude 000 km period one month anyone observed moon regularly testify sec communication satellites satellite period important issue determining place another issue presence van allen belts layers highly charged particles trapped earth magnetic field satellite flying within would destroyed fairly quickly particles factors lead three regions satellites placed safely regions properties illustrated briefly describe satellites inhabit regions altitude km type latency ms sats needed 000 geo meo 85 000 000 000 upper van allen belt 000 000 000 lower van allen belt leo communication satellites properties including altitude earth round trip delay time number satellites needed global coverage geostationary satellites science fiction writer arthur c clarke calculated satellite altitude 800 km circular equatorial orbit would appear remain motionless sky would need tracked clarke went describe complete communication system used manned geostationary satellites including orbits solar panels radio frequencies launch procedures unfortunately concluded satellites impractical due impossibility putting power hungry fragile vacuum tube amplifiers orbit never pursued idea although wrote science fiction stories invention transistor changed first artificial communication satellite telstar launched july since communication satellites become multibillion dollar business aspect outer space become highly profitable high flying satellites often called geo geostationary earth orbit satellites 118 physical layer current technology unwise geostationary satellites spaced much closer degrees degree equatorial plane avoid interference spacing degrees satellites sky however transponder use multiple frequencies polarizations increase available bandwidth prevent total chaos sky orbit slot allocation done itu process highly political countries barely stone age demanding orbit slots purpose leasing highest bidder countries however maintain national property rights extend moon country legal right orbit slots territory add fight commercial telecommunication application television broadcasters governments military also want piece orbiting pie modern satellites quite large weighing kg consuming several kilowatts electric power produced solar panels effects solar lunar planetary gravity tend move away assigned orbit slots orientations effect countered board rocket motors fine tuning activity called station keeping however fuel motors exhausted typically years satellite drifts tumbles helplessly turned eventually orbit decays satellite reenters atmosphere burns rarely crashes earth orbit slots bone contention frequencies issue downlink transmissions interfere existing microwave users consequently itu allocated certain frequency bands satellite users main ones listed c band first designated commercial satellite traffic two frequency ranges assigned lower one downlink traffic satellite upper one uplink traffic satellite allow traffic go ways time two channels required channels already overcrowded also used common carriers terrestrial microwave links l bands added international agreement however narrow also crowded band downlink uplink bandwidth problems l ghz ghz mhz low bandwidth crowded ghz ghz mhz low bandwidth crowded c ghz ghz mhz terrestrial interference ku ghz ghz mhz rain ka ghz ghz mhz rain equipment cost principal satellite bands sec communication satellites next highest band available commercial telecommunication carriers ku k band band yet congested higher frequencies satellites spaced close degree however another problem exists rain water absorbs short microwaves well fortunately heavy storms usually localized using several widely separated ground stations instead one circumvents problem price extra antennas extra cables extra electronics enable rapid switching stations bandwidth also allocated ka k band commercial satellite traffic equipment needed use expensive addition commercial bands many government military bands also exist modern satellite around transponders often mhz bandwidth usually transponder operates bent pipe recent satellites board processing capacity allowing sophisticated operation earliest satellites division transponders channels static bandwidth simply split fixed frequency bands nowadays transponder beam divided time slots various users taking turns study two techniques frequency division multiplexing time division multiplexing detail later chapter first geostationary satellites single spatial beam illuminated earth surface called footprint enormous decline price size power requirements microelectronics much sophisticated broadcasting strategy become possible satellite equipped multiple antennas multiple transponders downward beam focused small geographical area multiple upward downward transmissions take place simultaneously typically called spot beams elliptically shaped small hundred km diameter communication satellite united states typically one wide beam contiguous states plus spot beams alaska hawaii recent development communication satellite world development low cost microstations sometimes called vsats small aperture terminals abramson tiny terminals meter smaller antennas versus standard geo antenna put watt power uplink generally good mbps downlink often several megabits sec direct broadcast satellite television uses technology one way transmission many vsat systems microstations enough power communicate directly one another via satellite course instead special ground station hub large high gain antenna needed relay traffic vsats shown mode operation either sender receiver large antenna powerful amplifier trade longer delay return cheaper end user stations vsats great potential rural areas widely appreciated half world population lives hour walk nearest 120 physical layer communication satellite vsat hub vsats using hub telephone stringing telephone wires thousands small villages far beyond budgets third world governments installing meter vsat dishes powered solar cells often feasible vsats provide technology wire world communication satellites several properties radically different terrestrial point point links begin even though signals satellite travel speed light nearly 000 km sec long round trip distance introduces substantial delay geo satellites depending distance user ground station elevation satellite horizon end end transit time msec typical value msec msec vsat system hub comparison purposes terrestrial microwave links propagation delay roughly sec km coaxial cable fiber optic links delay approximately sec km latter slower former electromagnetic signals travel faster air solid materials another important property satellites inherently broadcast media cost send message thousands stations within transponder footprint send one applications property useful example one could imagine satellite broadcasting popular web pages caches large number computers spread wide area even broadcasting simulated point point lines sec communication satellites satellite broadcasting may much cheaper hand privacy point view satellites complete disaster everybody hear everything encryption essential security required satellites also property cost transmitting message independent distance traversed call across ocean costs service call across street satellites also excellent error rates deployed almost instantly major consideration disaster response military communication medium earth orbit satellites much lower altitudes two van allen belts find meo medium earth orbit satellites viewed earth drift slowly longitude taking something like hours circle earth accordingly must tracked move sky lower geos smaller footprint ground require less powerful transmitters reach currently used navigation systems rather telecommunications examine constellation roughly gps global positioning system satellites orbiting 200 km examples meo satellites low earth orbit satellites moving altitude come leo low earth orbit satellites due rapid motion large numbers needed complete system hand satellites close earth ground stations need much power round trip delay milliseconds launch cost substantially cheaper section examine two examples satellite constellations voice service iridium globalstar first years satellite era low orbit satellites rarely used zip view quickly motorola broke new ground filing application fcc asking permission launch low orbit satellites iridium project element iridium plan later revised use satellites project renamed dysprosium element probably sounded much like disease idea soon one satellite went view another would replace proposal set feeding frenzy among communication companies sudden everyone wanted launch chain low orbit satellites seven years cobbling together partners financing communication service began november unfortunately commercial demand large heavy satellite telephones negligible mobile phone network grown spectacular way since consequence iridium 122 physical layer profitable forced bankruptcy august one spectacular corporate fiascos history satellites assets worth billion later purchased investor million kind extraterrestrial garage sale satellite business ventures promptly followed suit iridium service restarted march growing ever since provides voice data paging fax navigation service everywhere land air sea via hand held devices communicate directly iridium satellites customers include maritime aviation oil exploration industries well people traveling parts world lacking telecom infrastructure e g deserts mountains south pole third world countries iridium satellites positioned altitude km circular polar orbits arranged north south necklaces one satellite every degrees latitude shown satellite maximum cells spot beams capacity channels used paging navigation others used data voice satellite four neighbors iridium satellites form six necklaces around earth six satellite necklaces entire earth covered suggested interesting property iridium communication distant customers takes place space shown see caller north pole contacting satellite directly overhead satellite four neighbors communicate two necklace shown two adjacent necklaces shown satellites relay call across grid finally sent callee south pole alternative design iridium globalstar based leo satellites uses different switching scheme iridium whereas iridium relays calls satellite satellite requires sophisticated switching equipment satellites globalstar uses traditional bent pipe design call originating north pole b sent back earth picked sec communication satellites satellite switches space bent pipe satellite switching ground b relaying space b relaying ground large ground station santa workshop call routed via terrestrial network ground station nearest callee delivered bent pipe connection shown advantage scheme puts much complexity ground easier manage also use large ground station antennas put powerful signal receive weak one means lower powered telephones used telephone puts milliwatts power signal gets back ground station fairly weak even amplified satellite satellites continue launched rate around per year including ever larger satellites weigh kilograms also small satellites budget conscious organization make space research accessible academics cal poly stanford got together define standard miniature satellites associated launcher would greatly lower launch costs nugent et al cubesats satellites units cm cm cm cubes weighing kilogram launched little 000 launcher flies secondary payload commercial space missions basically tube takes three units cubesats uses springs release orbit roughly cubesats launched far many works communicate ground stations uhf vhf bands satellites versus fiber comparison satellite communication terrestrial communication instructive recently years ago case could made future communication lay communication satellites telephone system 124 physical layer changed little previous years showed signs changing next years glacial movement caused small part regulatory environment telephone companies expected provide good voice service reasonable prices return got guaranteed profit investment people data transmit bps modems available pretty much introduction competition united states somewhat later europe changed radically telephone companies began replacing long haul networks fiber introduced high bandwidth services like adsl asymmetric digital subscriber line also stopped long time practice charging artificially high prices long distance users subsidize local service sudden terrestrial fiber connections looked like winner nevertheless communication satellites major niche markets fiber sometimes address first rapid deployment critical satellites win easily quick response useful military communication systems times war disaster response times peace following massive december sumatra earthquake subsequent tsunami example communications satellites able restore communications first responders within hours rapid response possible developed satellite service provider market large players intelsat satellites rent capacity pretty much anywhere needed customers served existing satellite networks vsat set easily quickly provide megabit sec link elsewhere world second niche communication places terrestrial infrastructure poorly developed many people nowadays want communicate everywhere go mobile phone networks cover locations good population density adequate job places e g sea desert conversely iridium provides voice service everywhere earth even south pole terrestrial infrastructure also expensive install depending terrain necessary rights way indonesia example satellite domestic telephone traffic launching one satellite cheaper stringing thousands undersea cables among 677 islands archipelago third niche broadcasting essential message sent satellite received thousands ground stations satellites used distribute much network tv programming local stations reason large market satellite broadcasts digital tv radio directly end users satellite receivers homes cars sorts content broadcast example organization transmitting stream stock bond commodity prices thousands dealers might find satellite system much cheaper simulating broadcasting ground short looks like mainstream communication future terrestrial fiber optics combined cellular radio specialized uses sec communication satellites satellites better however one caveat applies economics although fiber offers bandwidth conceivable terrestrial satellite communication could compete aggressively price advances technology radically cut cost deploying satellite e g future space vehicle toss dozens satellites one launch low orbit satellites catch big way certain fiber win markets digital modulation multiplexing studied properties wired wireless channels turn attention problem sending digital information wires wireless channels carry analog signals continuously varying voltage light intensity sound intensity send digital information must devise analog signals represent bits process converting bits signals represent called digital modulation start schemes directly convert bits signal schemes result baseband transmission signal occupies frequencies zero maximum depends signaling rate common wires consider schemes regulate amplitude phase frequency carrier signal convey bits schemes result passband transmission signal occupies band frequencies around frequency carrier signal common wireless optical channels signals must reside given frequency band channels often shared multiple signals much convenient use single wire carry several signals install wire every signal kind sharing called multiplexing accomplished several different ways present methods time frequency code division multiplexing modulation multiplexing techniques describe section widely used wires fiber terrestrial wireless satellite channels following sections look examples networks see action baseband transmission straightforward form digital modulation use positive voltage represent negative voltage represent optical fiber presence light might represent absence light might represent scheme called nrz non return zero odd name historical reasons simply means signal follows data example shown b sent nrz signal propagates wire end receiver converts bits sampling signal regular intervals time 126 physical layer bit stream b non return zero nrz c nrz invert nrzi manchester clock xored bits e bipolar encoding also alternate mark inversion ami line codes bits b nrz c nrzi manchester e bipolar ami signal look exactly like signal sent attenuated distorted channel noise receiver decode bits receiver maps signal samples closest symbols nrz positive voltage taken indicate sent negative voltage taken indicate sent nrz good starting point studies simple seldom used practice complex schemes convert bits signals better meet engineering considerations schemes called line codes describe line codes help bandwidth efficiency clock recovery dc balance bandwidth efficiency nrz signal may cycle positive negative levels every bits case alternating 1s 0s means need bandwidth least b hz bit rate b bits sec relation comes nyquist rate eq fundamental limit run nrz faster without using bandwidth bandwidth often limited resource even wired channels higher frequency signals increasingly attenuated making less useful higher frequency signals also require faster electronics one strategy using limited bandwidth efficiently use two signaling levels using four voltages instance send bits single symbol design work long signal receiver sufficiently strong distinguish four levels rate signal changes half bit rate needed bandwidth reduced sec digital modulation multiplexing call rate signal changes symbol rate distinguish bit rate bit rate symbol rate multiplied number bits per symbol older name symbol rate particularly context devices called telephone modems convey digital data telephone lines baud rate literature terms bit rate baud rate often used incorrectly note number signal levels need power two often levels used protecting errors simplifying design receiver clock recovery schemes encode bits symbols receiver must know one symbol ends next symbol begins correctly decode bits nrz symbols simply voltage levels long run 0s 1s leaves signal unchanged hard tell bits apart zeros look much like zeros unless accurate clock accurate clocks would help problem expensive solution commodity equipment remember timing bits links run many megabits sec clock would drift less fraction microsecond longest permitted run might reasonable slow links short messages general solution one strategy send separate clock signal receiver another clock line big deal computer buses short cables many lines parallel wasteful network links since another line send signal could use send data clever trick mix clock signal data signal xoring together extra line needed results shown clock makes clock transition every bit time runs twice bit rate xored level makes low high transition simply clock transition logical xored level inverted makes high tolow transition transition logical scheme called manchester encoding used classic ethernet downside manchester encoding requires twice much bandwidth nrz clock learned bandwidth often matters different strategy based idea code data ensure enough transitions signal consider nrz clock recovery problems long runs 0s 1s frequent transitions easy receiver stay synchronized incoming stream symbols step right direction simplify situation coding transition transition vice versa coding called nrzi non return zero inverted twist nrz example shown 128 physical layer c popular usb universal serial bus standard connecting computer peripherals uses nrzi long runs 1s cause problem course long runs 0s still cause problem must fix telephone company might simply require sender transmit many 0s older digital telephone lines u called t1 lines fact require consecutive 0s sent work correctly really fix problem break runs 0s mapping small groups bits transmitted groups successive 0s mapped slightly longer patterns many consecutive 0s well known code called 4b 5b every bits mapped a5 bit pattern fixed translation table five bit patterns chosen never run three consecutive 0s mapping shown scheme adds overhead better overhead manchester encoding since input combinations output combinations output combinations used putting aside combinations many successive 0s still codes left bonus use nondata codes represent physical layer control signals example uses represents idle line represents start frame data 4b codeword 5b data 4b codeword 5b 4b 5b mapping alternative approach make data look random known scrambling case likely frequent transitions scrambler works xoring data pseudorandom sequence transmitted mixing make data random pseudorandom sequence assuming independent pseudorandom sequence receiver xors incoming bits pseudorandom sequence recover real data practical pseudorandom sequence must easy create commonly given seed simple random number generator scrambling attractive adds bandwidth time overhead fact often helps condition signal energy sec digital modulation multiplexing dominant frequency components caused repetitive data patterns might radiate electromagnetic interference scrambling helps random signals tend white energy spread across frequency components however scrambling guarantee long runs possible get unlucky occasionally data pseudorandom sequence xor 0s outcome generally occur long pseudorandom sequence difficult predict however short predictable sequence might possible malicious users send bit patterns cause long runs 0s scrambling cause links fail early versions standards sending ip packets sonet links telephone system defect malis simpson possible users send certain killer packets guaranteed cause problems balanced signals signals much positive voltage negative voltage even short periods time called balanced signals average zero means dc electrical component lack dc component advantage channels coaxial cable lines transformers strongly attenuate dc component due physical properties also one method connecting receiver channel called capacitive coupling passes ac portion signal either case send signal whose average zero waste energy dc component filtered balancing helps provide transitions clock recovery since mix positive negative voltages also provides simple way calibrate receivers average signal measured used decision threshold decode symbols unbalanced signals average may drift away true decision level due density 1s example would cause symbols decoded errors straightforward way construct balanced code use two voltage levels represent logical say v v v representing logical zero send transmitter alternates v v levels always average scheme called bipolar encoding telephone networks called ami alternate mark inversion building old terminology called mark called space example given e bipolar encoding adds voltage level achieve balance alternatively use mapping like 4b 5b achieve balance well transitions clock recovery example kind balanced code 8b 10b line code maps bits input bits output efficient like 4b 5b line code bits split group bits mapped bits group bits mapped bits bit bit symbols 130 physical layer concatenated group input patterns mapped balanced output patterns number 0s 1s example mapped balanced enough combinations output patterns balanced cases input pattern mapped two output patterns one extra alternate extra example mapped complement input bits mapped output bits encoder remembers disparity previous symbol disparity total number 0s 1s signal balance encoder selects either output pattern alternate reduce disparity 8b 10b disparity bits thus signal never far balanced also never five consecutive 1s 0s help clock recovery passband transmission often want use range frequencies start zero send information across channel wireless channels practical send low frequency signals size antenna needs fraction signal wavelength becomes large case regulatory constraints need avoid interference usually dictate choice frequencies even wires placing signal given frequency band useful let different kinds signals coexist channel kind transmission called passband transmission arbitrary band frequencies used pass signal fortunately fundamental results earlier chapter terms bandwidth width frequency band absolute frequency values matter capacity means take baseband signal occupies b hz shift occupy passband b hz without changing amount information carry even though signal look different process signal receiver shift back baseband convenient detect symbols digital modulation accomplished passband transmission regulating modulating carrier signal sits passband modulate amplitude frequency phase carrier signal methods corresponding name ask amplitude shift keying two different amplitudes used represent example nonzero zero level shown b two levels used represent symbols similarly fsk frequency shift keying two different tones used example c uses two frequencies simplest form psk phase shift keying carrier wave systematically shifted degrees symbol period two phases called bpsk binary phase shift keying binary refers two symbols symbols represent bits example shown c sec digital modulation multiplexing better scheme uses channel bandwidth efficiently use four shifts e g degrees transmit bits information per symbol version called qpsk quadrature phase shift keying b c phase changes binary signal b amplitude shift keying c frequency shift keying phase shift keying combine schemes use levels transmit bits per symbol one frequency phase modulated time related frequency rate change phase time usually amplitude phase modulated combination three examples shown example points give legal amplitude phase combinations symbol see equidistant dots degrees phase dot indicated angle line origin makes positive x axis amplitude dot distance origin figure representation qpsk kind diagram called constellation diagram b see modulation scheme denser constellation sixteen combinations amplitudes phase used modulation scheme used transmit 132 physical layer b c qpsk b qam c qam bits per symbol called qam qam stands quadrature amplitude modulation c still denser modulation scheme different combinations bits transmitted per symbol called qam even higher order qams used might suspect constellations easier build electronics produce symbols combination values axis combination amplitude phase values patterns look like squares rather concentric circles constellations seen far show bits assigned symbols making assignment important consideration small burst noise receiver lead many bit errors might happen assigned consecutive bit values adjacent symbols qam example one symbol stood neighboring symbol stood receiver mistakenly picks adjacent symbol cause bits wrong better solution map bits symbols adjacent symbols differ bit position mapping called gray code shows qam constellation gray coded receiver decodes symbol error make single bit error expected case decoded symbol close transmitted symbol frequency division multiplexing modulation schemes seen let us send one signal convey bits along wired wireless link however economies scale play important role use networks costs essentially amount money install maintain high bandwidth transmission line low bandwidth line two different offices e costs come dig trench kind cable fiber goes consequently multiplexing schemes developed share lines among many signals sec digital modulation multiplexing q b e c sent point decodes bit errors b c e 1111 gray coded qam fdm frequency division multiplexing takes advantage passband transmission share channel divides spectrum frequency bands user exclusive possession band send signal radio broadcasting illustrates fdm allocated spectrum mhz roughly khz different frequencies allocated different logical channels stations operating portion spectrum interchannel separation great enough prevent interference detailed example show three voice grade telephone channels multiplexed using fdm filters limit usable bandwidth hz per voice grade channel many channels multiplexed together hz allocated per channel excess called guard band keeps channels well separated first voice channels raised frequency different amount combined two channels occupy portion spectrum notice even though gaps channels thanks guard bands overlap adjacent channels overlap real filters ideal sharp edges means strong spike edge one channel felt adjacent one nonthermal noise scheme used multiplex calls telephone system many years multiplexing time preferred instead however fdm continues used telephone networks well cellular terrestrial wireless satellite networks higher level granularity sending digital data possible divide spectrum efficiently without using guard bands ofdm orthogonal frequency division multiplexing channel bandwidth divided many subcarriers independently send data e g qam subcarriers packed tightly together frequency domain thus signals subcarrier extend adjacent ones however seen frequency response subcarrier 134 physical layer channel attenuation factor channel channel channel channel channel frequency khz c frequency hz frequency khz b frequency division multiplexing original bandwidths b bandwidths raised frequency c multiplexed channel designed zero center adjacent subcarriers subcarriers therefore sampled center frequencies without interference neighbors make work guard time needed repeat portion symbol signals time desired frequency response however overhead much less needed many guard bands power one ofdm subcarrier shaded separation f frequency f1 f2 f3 f4 f5 orthogonal frequency division multiplexing ofdm idea ofdm around long time last decade widely adopted following realization possible sec digital modulation multiplexing implement ofdm efficiently terms fourier transform digital data subcarriers instead separately modulating subcarrier ofdm used 11 cable networks power line networking planned fourth generation cellular systems usually one high rate stream digital information split many low rate streams transmitted subcarriers parallel division valuable degradations channel easier cope subcarrier level subcarriers may degraded excluded favor subcarriers received well time division multiplexing alternative fdm tdm time division multiplexing users take turns round robin fashion one periodically getting entire bandwidth little burst time example three streams multiplexed tdm shown bits input stream taken fixed time slot output aggregate stream stream runs sum rate individual streams work streams must synchronized time small intervals guard time analogous frequency guard band may added accommodate small timing variations round robin tdm multiplexer guard time time division multiplexing tdm tdm used widely part telephone cellular networks avoid one point confusion let us clear quite different alternative stdm statistical time division multiplexing prefix statistical added indicate individual streams contribute multiplexed stream fixed schedule according statistics demand stdm packet switching another name code division multiplexing third kind multiplexing works completely different way fdm tdm cdm code division multiplexing form spread spectrum communication narrowband signal spread wider frequency band make tolerant interference well allowing multiple signals different users share frequency band code division multiplexing mostly used latter purpose commonly called cdma code division multiple access 136 physical layer cdma allows station transmit entire frequency spectrum time multiple simultaneous transmissions separated using coding theory getting algorithm let us consider analogy airport lounge many pairs people conversing tdm comparable pairs people room taking turns speaking fdm comparable pairs people speaking different pitches high pitched low pitched pair hold conversation time independently others cdma comparable pair people talking different language french speaking couple hones french rejecting everything french noise thus key cdma able extract desired signal rejecting everything else random noise somewhat simplified description cdma follows cdma bit time subdivided short intervals called chips typically chips per bit example given use chips bit simplicity station assigned unique bit code called chip sequence pedagogical purposes convenient use bipolar notation write codes sequences show chip sequences parentheses transmit bit station sends chip sequence transmit bit sends negation chip sequence patterns permitted thus station assigned chip sequence send bit transmiting chip sequence transmitting really signals voltage levels sent sufficient us think terms sequences increasing amount information sent b bits sec mb chips sec station means bandwidth needed cdma greater factor bandwidth needed station using cdma assuming changes modulation encoding techniques mhz band available stations fdm one would khz could send kbps assuming bit per hz cdma station uses full mhz chip rate chips per bit spread station bit rate kbps across channel b show chip sequences assigned four example stations signals represent station unique chip sequence let us use symbol indicate chip vector station negation chip sequences pairwise orthogonal mean normalized inner product two distinct chip sequences written known generate orthogonal chip sequences using method known walsh codes mathematical terms orthogonality chip sequences expressed follows si ti sec digital modulation multiplexing plain english many pairs different orthogonality property prove crucial later note also normalized inner product chip sequence si si si follows terms inner product sum also note b c s1 c s2 b c 0 s3 b s4 b c s5 b c s6 b c c b s1 c 1 1 s2 c 0 2 s3 c 2 2 s4 c 3 1 s5 c 0 2 s6 c 2 0 chip sequences four stations b signals sequences represent c six examples transmissions recovery station c signal bit time station transmit sending chip sequence transmit sending negative chip sequence silent transmit nothing assume stations synchronized time chip sequences begin instant two stations transmit simultaneously bipolar sequences add linearly example one chip period three stations output one station outputs received one think signals add voltages superimposed channel three stations output v one station outputs v v received instance c see six examples one stations transmitting bit time first example c transmits bit get c chip sequence second example b c transmit bits get sum bipolar chip sequences namely 0 recover bit stream individual station receiver must know station chip sequence advance recovery computing normalized inner product received chip sequence chip sequence station whose bit stream trying recover received chip sequence receiver trying listen station whose chip sequence c computes normalized inner product c 138 physical layer see works imagine two stations c transmit bit time b transmits bit case third example receiver sees sum b c computes c b c c c b c c c first two terms vanish pairs chip sequences carefully chosen orthogonal shown eq clear property must imposed chip sequences make decoding process concrete show six examples suppose receiver interested extracting bit sent station c six signals calculates bit summing pairwise products received c vector taking result since examples include cases c silent sends bit sends bit individually combination transmissions shown correct bit decoded time like speaking french principle given enough computing capacity receiver listen senders running decoding algorithm parallel real life suffice say easier said done useful know senders might transmitting ideal noiseless cdma system studied number stations send concurrently made arbitrarily large using longer chip sequences 2n stations walsh codes provide 2n orthogonal chip sequences length 2n however one significant limitation assumed chips synchronized time receiver synchronization even approximately true applications cellular networks cdma widely deployed starting 1990s leads different designs return topic later chapter describe asynchronous cdma differs synchronous cdma well cellular networks cdma used satellites cable networks glossed many complicating factors brief introduction engineers want gain deep understanding cdma read viterbi lee miller references require quite bit background communication engineering however public switched telephone network two computers owned company organization located close need communicate often easiest run cable lans work way however distances large many computers cables pass public road public right way costs running private cables usually prohibitive sec public switched telephone network furthermore every country world stringing private transmission lines across underneath public property also illegal consequently network designers must rely existing telecommunication facilities facilities especially pstn public switched telephone network usually designed many years ago completely different goal mind transmitting human voice less recognizable form suitability use computer computer communication often marginal best see size problem consider cheap commodity cable running two computers transfer data gbps contrast typical adsl blazingly fast alternative telephone modem runs around mbps difference two difference cruising airplane taking leisurely stroll nonetheless telephone system tightly intertwined wide area computer networks worth devoting time study detail limiting factor networking purposes turns last mile customers connect trunks switches inside telephone network situation changing gradual rollout fiber digital technology edge network take time money long wait computer systems designers used working systems give least three orders magnitude better performance devoted much time effort figure use telephone network efficiently following sections describe telephone system show works additional information innards telephone system see bellamy structure telephone system soon alexander graham bell patented telephone hours ahead rival elisha gray enormous demand new invention initial market sale telephones came pairs customer string single wire telephone owner wanted talk n telephone owners separate wires strung n houses within year cities covered wires passing houses trees wild jumble became immediately obvious model connecting every telephone every telephone shown going work credit bell saw problem early formed bell telephone company opened first switching office new connecticut company ran wire customer house office make call customer would crank phone make ringing sound telephone company office attract attention operator would manually connect caller callee using short jumper cable connect caller callee model single switching office illustrated b 140 physical layer b c fully interconnected network b centralized switch c two level hierarchy pretty soon bell system switching offices springing everywhere people wanted make long distance calls cities bell system began connect switching offices original problem soon returned connect every switching office every switching office means wire quickly became unmanageable second level switching offices invented multiple second level offices needed illustrated c eventually hierarchy grew five levels three major parts telephone system place switching offices wires customers switching offices balanced insulated twisted pairs instead open wires earth return long distance connections switching offices short technical history telephone system see hawley improvements three areas since basic bell system model remained essentially intact years following description highly simplified gives essential flavor nevertheless telephone two copper wires coming go directly telephone company nearest end office also called local central office distance typically km shorter cities rural areas united states alone 000 end offices two wire connections subscriber telephone end office known trade local loop world local loops stretched end end would extend moon back times one time capital value copper local loops effect world largest copper mine fortunately fact well known investment community known corporate raider might bought ended telephone service united states ripped wire sold copper refiner quick payback sec public switched telephone network subscriber attached given end office calls another subscriber attached end office switching mechanism within office sets direct electrical connection two local loops connection remains intact duration call called telephone attached another end office different procedure used end office number outgoing lines one nearby switching centers called toll offices within local area tandem offices lines called toll connecting trunks number different kinds switching centers topology varies country country depending country telephone density caller callee end offices happen toll connecting trunk toll office likely occurrence relatively close connection may established within toll office telephone network consisting telephones small dots end offices large dots toll offices squares shown c caller callee toll office common path established two toll offices toll offices communicate via high bandwidth intertoll trunks also called interoffice trunks prior breakup u telephone system used hierarchical routing find path going higher levels hierarchy switching office common replaced flexible nonhierarchical routing shows long distance connection might routed telephone local loop end office toll connecting trunk toll office intermediate switching office high bandwidth intertoll trunks toll office end office toll connecting trunk telephone local loop typical circuit route long distance call variety transmission media used telecommunication unlike modern office buildings wiring commonly category local loops homes mostly consist category twisted pairs fiber starting appear switching offices coaxial cables microwaves especially fiber optics widely used past transmission throughout telephone system analog actual voice signal transmitted electrical voltage source destination advent fiber optics digital electronics computers trunks switches digital leaving local loop last piece 142 physical layer analog technology system digital transmission preferred necessary accurately reproduce analog waveform passed many amplifiers long call able correctly distinguish enough property makes digital transmission reliable analog also cheaper easier maintain summary telephone system consists three major components local loops analog twisted pairs going houses businesses trunks digital fiber optic links connecting switching offices switching offices calls moved one trunk another short digression politics telephones come back three components detail local loops provide everyone access whole system critical unfortunately also weakest link system long haul trunks main issue collect multiple calls together send fiber calls multiplexing apply fdm tdm finally two fundamentally different ways switching look politics telephones decades prior bell system provided local long distance service throughout united states 1970s u federal government came believe illegal monopoly sued break government january broken long lines bocs bell operating companies pieces bocs grouped seven regional bocs rbocs make economically viable entire nature telecommunication united states changed overnight court order act congress exact specifications divestiture described called mfj modified final judgment oxymoron ever one judgment could modified clearly final event led increased competition better service lower long distance rates consumers businesses however prices local service rose cross subsidies longdistance calling eliminated local service become self supporting many countries introduced competition along similar lines direct relevance studies new competitive framework caused key technical feature added architecture telephone network make clear could united states divided latas local access transport areas roughly lata big area covered one area code within lata one lec local exchange carrier monopoly traditional telephone sec public switched telephone network service within area important lecs bocs although latas contained one independent telephone companies operating lecs new feature inter lata traffic handled different kind company ixc interexchange carrier originally long lines serious ixc well established competitors verizon sprint ixc business one concerns breakup ensure ixcs would treated equally terms line quality tariffs number digits customers would dial use way handled illustrated see three example latas several end offices latas also small hierarchy tandem offices intra lata toll offices ixc toll office ixc toll office ixc pop tandem office end office local loops lata lata lata relationship latas lecs ixcs circles lec switching offices hexagon belongs ixc whose number ixc wishes handle calls originating lata build switching office called pop point presence lec required connect ixc every end office either directly latas indirectly lata furthermore terms connection technical financial must identical ixcs requirement enables subscriber say lata choose ixc use calling subscribers lata part mfj ixcs forbidden offer local telephone service lecs forbidden offer inter lata telephone service although 144 physical layer free enter business operating fried chicken restaurants fairly unambiguous statement unfortunately technology funny way making law obsolete neither cable television mobile phones covered agreement cable television went one way two way mobile phones exploded popularity lecs ixcs began buying merging cable mobile operators congress saw trying maintain distinction various kinds companies longer tenable drafted bill preserve accessibility competition allow cable tv companies local telephone companies long distance carriers mobile operators enter one another businesses idea company could offer customers single integrated package containing cable tv telephone information services different companies would compete service price bill enacted law february major overhaul telecommunications regulation result bocs became ixcs companies cable television operators began offering local telephone service competition lecs one interesting property law requirement lecs implement local number portability means customer change local telephone companies without get new telephone number portability mobile phone numbers fixed mobile lines followed suit provisions removed huge hurdle many people making much inclined switch lecs result u telecommunications landscape became much competitive countries followed suit often countries wait see kind experiment works u works well thing works badly try something else local loop modems adsl fiber time start detailed study telephone system works let us begin part people familiar two wire local loop coming telephone company end office houses local loop also frequently referred last mile although length several miles carried analog information years likely continue years come due high cost converting digital much effort devoted squeezing data networking copper local loops already deployed telephone modems send digital data computers narrow channel telephone network provides voice call widely used largely displaced broadband technologies adsl reuse local loop send digital data customer end office siphoned internet sec public switched telephone network modems adsl must deal limitations old local loops relatively narrow bandwidth attenuation distortion signals susceptibility electrical noise crosstalk places local loop modernized installing optical fiber close home fiber way future installations support computer networks ground local loop ample bandwidth data services limiting factor people pay physics local loop section study local loop old new cover telephone modems adsl fiber home telephone modems send bits local loop physical channel matter must converted analog signals transmitted channel conversion accomplished using methods digital modulation studied previous section end channel analog signal converted back bits device converts stream digital bits analog signal represents bits called modem short modulator demodulator modems come many varieties telephone modems dsl modems cable modems wireless modems etc modem may built computer common telephone modems separate box common dsl cable modems logically modem inserted digital computer analog telephone system seen trunk digital fiber computer digital line local loop analog modem isp analog line codec isp end office codec modem use analog digital transmission computerto computer call conversion done modems codecs telephone modems used send bits two computers voice grade telephone line place conversation usually fills line main difficulty voice grade telephone line limited hz sufficient carry conversation bandwidth four orders magnitude less bandwidth used ethernet 146 physical layer 11 wifi unsurprisingly data rates telephone modems also four orders magnitude less ethernet 11 let us run numbers see case nyquist theorem tells us even perfect hz line telephone line decidedly point sending symbols rate faster baud practice modems send rate symbols sec baud focus getting multiple bits per symbol allowing traffic directions time using different frequencies different directions humble bps modem uses volts logical volt logical bit per symbol one step use four different symbols four phases qpsk bits symbol get data rate bps long progression higher rates achieved technology improved higher rates require larger set symbols constellation many symbols even small amount noise detected amplitude phase result error reduce chance errors standards higher speed modems use symbols error correction schemes known tcm trellis coded modulation ungerboeck v modem standard uses constellation points transmit data bits check bit per symbol baud achieve bps error correction next step bps 400 bps called v bis transmits data bits check bit per symbol baud comes v achieves 800 bps transmitting data bits symbol baud constellation thousands points final modem series v bis uses data bits symbol baud achieve 600 bps stop reason standard modems stop 600 shannon limit telephone system kbps based average length local loops quality lines going faster would violate laws physics department thermodynamics however one way change situation telephone company end office data converted digital form transmission within telephone network core telephone network converted analog digital long ago kbps limit situation two local loops one end adds noise signal could get rid one local loops would increase snr maximum rate would doubled approach kbps modems made work one end typically isp gets high quality digital feed nearest end office thus one end connection high quality signal isps maximum data rate high kbps two home users modems analog lines maximum still kbps reason kbps modems rather kbps modems use nyquist theorem telephone channel carried inside telephone system digital samples telephone channel hz wide sec public switched telephone network guard bands included number samples per second needed reconstruct thus number bits per sample u one may used control purposes allowing 000 bits sec user data europe bits available users 000 bit sec modems could used get international agreement standard 000 chosen end result v v modem standards provide kbps downstream channel isp user kbps kbps upstream channel user isp respectively asymmetry usually data transported isp user way also means limited bandwidth allocated downstream channel increase chances actually working kbps digital subscriber lines telephone industry finally got kbps patted back job well done meanwhile cable tv industry offering speeds mbps shared cables internet access became increasingly important part business telephone companies lecs began realize needed competitive product answer offer new digital services local loop initially many overlapping high speed offerings general name xdsl digital subscriber line various x services bandwidth standard telephone service sometimes called broadband although term really marketing concept specific technical concept later discuss become popular services adsl asymmetric dsl also use term dsl xdsl shorthand flavors reason modems slow telephones invented carrying human voice entire system carefully optimized purpose data always stepchildren point local loop terminates end office wire runs filter attenuates frequencies hz hz cutoff sharp hz hz db points bandwidth usually quoted hz even though distance db points hz data wire thus also restricted narrow band trick makes xdsl work customer subscribes incoming line connected different kind switch one filter thus making entire capacity local loop available limiting factor becomes physics local loop supports roughly mhz artificial hz bandwidth created filter unfortunately capacity local loop falls rather quickly distance end office signal increasingly degraded along wire also depends thickness general quality twisted pair plot 148 physical layer potential bandwidth function distance given figure assumes factors optimal new wires modest bundles etc mbps 10 meters bandwidth versus distance category utp dsl implication figure creates problem telephone company picks speed offer simultaneously picking radius end offices beyond service offered means distant customers try sign service may told thanks lot interest live meters far nearest end office get service could please move lower chosen speed larger radius customers covered lower speed less attractive service fewer people willing pay business meets technology xdsl services designed certain goals mind first services must work existing category twisted pair local loops second must affect customers existing telephones fax machines third must much faster kbps fourth always monthly charge per minute charge meet technical goals available mhz spectrum local loop divided independent channels hz arrangement shown ofdm scheme saw previous section used send data channels though often called dmt discrete multitone context adsl channel used pots plain old telephone service channels used keep voice data signals interfering remaining channels one used upstream control one used downstream control rest available user data principle remaining channels used full duplex data stream harmonics crosstalk effects keep practical systems well sec public switched telephone network power khz channels voice khz upstream downstream operation adsl using discrete multitone modulation theoretical limit provider determine many channels used upstream many downstream 50 mix upstream downstream technically possible providers allocate something like 90 bandwidth downstream channel since users download data upload choice gives rise adsl common split channels upstream rest downstream also possible highest upstream channels bidirectional increased bandwidth although making optimization requires adding special circuit cancel echoes international adsl standard known g dmt approved allows speeds much mbps downstream mbps upstream superseded second generation called adsl2 various improvements allow speeds much mbps downstream mbps upstream adsl2 doubles downstream speed mbps doubling bandwidth use mhz twisted pair however numbers quoted best case speeds good lines close within km exchange lines support rates providers offer speeds typically providers offer something like mbps downstream kbps upstream standard service mbps downstream mbps upstream improved service mbps downstream mbps upstream premium service within channel qam modulation used rate roughly symbols sec line quality channel constantly monitored data rate adjusted using larger smaller constellation like different channels may different data rates bits per symbol sent channel high snr bits per symbol sent channel low snr depending standard typical adsl arrangement shown scheme telephone company technician must install nid network interface device customer premises small plastic box marks end telephone company property start customer property close nid sometimes combined splitter analog filter separates 150 physical layer 4000 hz band used pots data pots signal routed existing telephone fax machine data signal routed adsl modem uses digital signal processing implement ofdm since adsl modems external computer must connected high speed usually done using ethernet usb cable 11 voice switch telephone codec splitter telephone line splitter nid computer dslam isp telephone company end office adsl modem ethernet customer premises typical adsl equipment configuration end wire end office side corresponding splitter installed voice portion signal filtered sent normal voice switch signal khz routed new kind device called dslam digital subscriber line access multiplexer contains kind digital signal processor adsl modem bits recovered signal packets formed sent isp complete separation voice system adsl makes relatively easy telephone company deploy adsl needed buying dslam splitter attaching adsl subscribers splitter high bandwidth services e g isdn require much greater changes existing switching equipment one disadvantage design need nid splitter customer premises installing done telephone company technician necessitating expensive truck roll e sending technician customer premises therefore alternative splitterless design informally called g lite also standardized without customer splitter existing telephone line used difference microfilter inserted telephone jack sec public switched telephone network telephone adsl modem wire microfilter telephone low pass filter eliminating frequencies hz microfilter adsl modem high pass filter eliminating frequencies khz however system reliable splitter g lite used mbps versus mbps adsl splitter information adsl see starr fiber home deployed copper local loops limit performance adsl telephone modems let provide faster better network services telephone companies upgrading local loops every opportunity installing optical fiber way houses offices result called ftth fiber home ftth technology available time deployments began take growth demand high speed internet customers used dsl cable wanted download movies around u houses connected ftth internet access speeds mbps several variations form fttx x stands basement curb neighborhood exist used note fiber deployment may reach close house case copper twisted pair coaxial cable provides fast enough speeds last short distance choice far lay fiber economic one balancing cost expected revenue case point optical fiber crossed traditional barrier last mile focus ftth discussion like copper wires fiber local loop passive means powered equipment required amplify otherwise process signals fiber simply carries signals home end office turn reduces cost improves reliability usually fibers houses joined together single fiber reaches end office per group houses downstream direction optical splitters divide signal end office reaches houses encryption needed security one house able decode signal upstream direction optical combiners merge signals houses single signal received end office architecture called pon passive optical network shown common use one wavelength shared houses downstream transmission another wavelength upstream transmission even splitting tremendous bandwidth low attenuation fiber mean pons provide high rates users distances km actual data rates details depend type pon two kinds common gpons gigabit capable pons come world telecommunications defined itu standard epons ethernet pons 152 physical layer fiber rest network end office optical splitter combiner passive optical network fiber home tune world networking defined ieee standard run around gigabit carry traffic different services including internet video voice example gpons provide gbps downstream gbps upstream protocol needed share capacity single fiber end office different houses downstream direction easy end office send messages different house whatever order likes upstream direction however messages different houses sent time different signals would collide houses also hear transmissions listen transmitting solution equipment houses requests granted time slots use equipment end office work ranging process adjust transmission times houses signals received end office synchronized design similar cable modems cover later chapter information future pons see grobe elbers trunks multiplexing trunks telephone network much faster local loops different two respects core telephone network carries digital information analog information bits voice necessitates conversion end office digital form transmission longhaul trunks trunks carry thousands even millions calls simultaneously sharing important achieving economies scale since costs essentially amount money install maintain high bandwidth trunk low bandwidth trunk two switching offices accomplished versions tdm fdm multiplexing briefly examine voice signals digitized transported telephone network see tdm used carry bits trunks including tdm system used fiber optics sec public switched telephone network sonet turn fdm applied fiber optics called wavelength division multiplexing digitizing voice signals early development telephone network core handled voice calls analog information fdm techniques used many years multiplex hz voice channels comprised hz plus guard bands larger larger units example calls khz khz band known group five groups total calls known supergroup fdm methods still used copper wires microwave channels however fdm requires analog circuitry amenable done computer contrast tdm handled entirely digital electronics become far widespread recent years since tdm used digital data local loops produce analog signals conversion needed analog digital end office individual local loops come together combined onto outgoing trunks analog signals digitized end office device called codec short coder decoder codec makes samples per second sec sample nyquist theorem says sufficient capture information khz telephone channel bandwidth lower sampling rate information would lost higher one extra information would gained sample amplitude signal quantized bit number technique called pcm pulse code modulation forms heart modern telephone system consequence virtually time intervals within telephone system multiples sec standard uncompressed data rate voice grade telephone call thus bits every sec kbps end call analog signal recreated quantized samples playing smoothing time exactly original analog signal even though sampled nyquist rate samples quantized reduce error due quantization quantization levels unevenly spaced logarithmic scale used gives relatively bits smaller signal amplitudes relatively fewer bits large signal amplitudes way error proportional signal amplitude two versions quantization widely used law used north america japan law used europe rest world versions specified standard itu g equivalent way think process imagine dynamic range signal ratio largest smallest possible values compressed evenly quantized expanded analog signal recreated reason called 154 physical layer companding also possible compress samples digitized require much less kbps however leave topic explore audio applications voice ip time division multiplexing tdm based pcm used carry multiple voice calls trunks sending sample call every sec digital transmission began emerging feasible technology itu called ccitt unable reach agreement international standard pcm consequently variety incompatible schemes use different countries around world method used north america japan t1 carrier depicted technically speaking format called ds1 carrier called t1 following widespread industry tradition make subtle distinction t1 carrier consists voice channels multiplexed together channels turn gets insert bits output stream bit frame sec channel channel channel channel channel bit framing code data bits per channel per sample bit signaling t1 carrier 544 mbps frame consists bits plus one extra bit control purposes yielding bits every sec gives gross data rate 544 mbps kbps signaling 193rd bit used frame synchronization signaling one variation 193rd bit used across group frames called extended superframe six bits 4th 8th 12th 16th 20th 24th positions take alternating pattern normally receiver keeps checking pattern make sure lost synchronization six bits used send error check code help receiver confirm synchronized get sync receiver scan pattern validate error check code get resynchronized remaining sec public switched telephone network bits used control information operating maintaining network performance reporting remote end t1 format several variations earlier versions sent signaling information band meaning channel data using data bits design one form channel associated signaling channel private signaling subchannel one arrangement least significant bit bit sample channel used every sixth frame colorful name robbed bit signaling idea stolen bits matter voice calls one hear difference data however another story delivering wrong bits unhelpful say least older versions t1 used carry data bits kbps used channels instead newer versions t1 provide clear channels bits may used send data clear channels businesses lease t1 line want send data across telephone network place voice samples signaling voice calls handled band meaning separate channel data often signaling done common channel signaling shared signaling channel one channels may used purpose outside north america japan 048 mbps e1 carrier used instead t1 carrier bit data samples packed basic sec frame thirty channels used information two used signaling group four frames provides signaling bits half used signaling whether channel associated common channel half used frame synchronization reserved country use wishes time division multiplexing allows multiple t1 carriers multiplexed higher order carriers shows done left see four t1 channels multiplexed one t2 channel multiplexing t2 done bit bit rather byte byte voice channels make t1 frame four t1 streams 544 mbps generate 176 mbps t2 actually 312 mbps extra bits used framing recovery case carrier slips t1 t3 widely used customers whereas t2 t4 used within telephone system well known next level seven t2 streams combined bitwise form t3 stream six t3 streams joined form t4 stream step small amount overhead added framing recovery case synchronization sender receiver lost little agreement basic carrier united states rest world equally little agreement multiplexed higher bandwidth carriers u scheme stepping strike everyone else way go itu standard calls multiplexing four streams one stream level also framing 156 physical layer t1 streams t2 streams t3 streams t2 stream 32 544 mbps 312 mbps 736 mbps 176 mbps t1 t2 t3 t4 multiplexing t1 streams higher carriers recovery data different u itu standards itu hierarchy channels runs speeds 048 848 304 264 148 mbps sonet sdh early days fiber optics every telephone company proprietary optical tdm system broken local telephone companies connect multiple long distance carriers different optical tdm systems need standardization became obvious bellcore rboc research arm began working standard called sonet synchronous optical network later itu joined effort resulted sonet standard set parallel itu recommendations g g g itu recommendations called sdh synchronous digital hierarchy differ sonet minor ways virtually long distance telephone traffic united states much elsewhere uses trunks running sonet physical layer additional information sonet see bellamy goralski shepard sonet design four major goals first foremost sonet make possible different carriers interwork achieving goal required defining common signaling standard respect wavelength timing framing structure issues second means needed unify u european japanese digital systems based kbps pcm channels combined different incompatible ways third sonet provide way multiplex multiple digital channels time sonet devised highest speed digital carrier actually used widely united states t3 736 mbps t4 defined used sec public switched telephone network much nothing even defined t4 speed part sonet mission continue hierarchy gigabits sec beyond standard way multiplex slower channels one sonet channel also needed fourth sonet provide support operations administration maintenance oam needed manage network previous systems well early decision make sonet traditional tdm system entire bandwidth fiber devoted one channel containing time slots various subchannels sonet synchronous system sender receiver tied common clock master clock controls system accuracy part bits sonet line sent extremely precise intervals controlled master clock basic sonet frame block bytes put every sec since sonet synchronous frames emitted whether useful data send frames sec exactly matches sampling rate pcm channels used digital telephony systems byte sonet frames best described rectangle bytes columns wide rows high thus bits transmitted times per second gross data rate 84 mbps layout basic sonet channel called sts synchronous transport signal sonet trunks multiples sts first three columns frame reserved system management information illustrated block first three rows contain section overhead next six contain line overhead section overhead generated checked start end section whereas line overhead generated checked start end line sonet transmitter sends back back byte frames without gaps even data case sends dummy data receiver point view sees continuous bit stream know frame begins answer first bytes frame contain fixed pattern receiver searches finds pattern place large number consecutive frames assumes sync sender theory user could insert pattern payload regular way practice done due multiplexing multiple users frame reasons remaining columns frame hold 112 mbps user data user data could voice samples t1 carriers swallowed whole packets sonet simply convenient container transporting bits spe synchronous payload envelope carries user data always begin row column spe begin anywhere within frame pointer first byte contained first row line overhead first column spe path overhead e header end end path sublayer protocol 158 physical layer columns overhead columns rows section overhead line overhead path overhead sonet frame sec sonet frame sec spe two back back sonet frames ability allow spe begin anywhere within sonet frame even span two frames shown gives added flexibility system example payload arrives source dummy sonet frame constructed inserted current frame instead held start next one sonet sdh multiplexing hierarchy shown rates sts sts defined ranging roughly t3 line gbps even higher rates surely defined time oc gbps next line becomes technologically feasible optical carrier corresponding sts n called oc n bit bit except certain bit reordering needed synchronization sdh names different start oc itu based systems rate near 84 mbps shown common rates proceed oc multiples four gross data rate includes overhead spe data rate excludes line section overhead user data rate excludes overhead counts payload columns aside carrier oc multiplexed carries data single source letter c concatenated appended designation oc indicates 52 mbps carrier consisting three separate oc carriers oc 3c indicates data stream single source 52 mbps three oc streams within oc 3c stream interleaved column first column stream column stream column stream followed column stream leading frame columns wide rows deep sec public switched telephone network sonet sdh electrical optical sts oc optical data rate mbps gross 84 spe user 112 536 sts oc stm 52 336 608 sts oc stm 08 344 432 sts oc stm 32 376 728 sts oc stm 28 504 912 sts oc stm 12 016 648 sonet sdh multiplex rates wavelength division multiplexing form frequency division multiplexing used well tdm harness tremendous bandwidth fiber optic channels called wdm wavelength division multiplexing basic principle wdm fibers depicted four fibers come together optical combiner energy present different wavelength four beams combined onto single shared fiber transmission distant destination far end beam split many fibers input side output fiber contains short specially constructed core filters one wavelength resulting signals routed destination recombined different ways additional multiplexed transport really nothing new way operating frequency division multiplexing high frequencies term wdm owing description fiber optic channels wavelength color rather frequency long channel frequency e wavelength range ranges disjoint multiplexed together long haul fiber difference electrical fdm optical system using diffraction grating completely passive thus highly reliable reason wdm popular energy single channel typically gigahertz wide current limit fast convert electrical optical signals running many channels parallel different wavelengths aggregate bandwidth increased linearly number channels since bandwidth single fiber band 000 ghz see theoretically room 10 gbps channels even bit hz higher rates also possible wdm technology progressing rate puts computer technology shame wdm invented around first commercial systems eight channels gbps per channel systems channels 160 physical layer fiber fiber fiber fiber filter spectrum shared fiber power fiber spectrum power fiber spectrum power fiber spectrum power power fiber spectrum combiner splitter long haul shared fiber wavelength division multiplexing gbps market products channels gbps channels gbps capable moving 56 tbps bandwidth enough transmit full length dvd movies per second channels also packed tightly fiber little ghz separation technology demonstrations companies bragging rights shown times capacity lab going lab field usually takes least years number channels large wavelengths spaced close together system referred dwdm dense wdm one drivers wdm technology development optical components previously every km necessary split channels convert one electrical signal amplification separately reconverting optical signals combining nowadays optical amplifiers regenerate entire signal every km without need multiple opto electrical conversions example fixed wavelength system bits input fiber go output fiber bits input fiber go output fiber etc however also possible build wdm systems switched optical domain device output filters tunable using fabry perot mach zehnder interferometers devices allow selected frequencies changed dynamically control computer ability provides large amount flexibility provision many different wavelength paths telephone network fixed set fibers information optical networks wdm see ramaswami et al sec public switched telephone network switching point view average telephone engineer phone system divided two principal parts outside plant local loops trunks since physically outside switching offices inside plant switches inside switching offices looked outside plant time examine inside plant two different switching techniques used network nowadays circuit switching packet switching traditional telephone system based circuit switching packet switching beginning make inroads rise voice ip technology go circuit switching detail contrast packet switching kinds switching important enough come back get network layer circuit switching conceptually computer places telephone call switching equipment within telephone system seeks physical path way telephone receiver telephone technique called circuit switching shown schematically six rectangles represents carrier switching office end office toll office etc example office three incoming lines three outgoing lines call passes switching office physical connection conceptually established line call came one output lines shown dotted lines early days telephone connection made operator plugging jumper cable input output sockets fact surprising little story associated invention automatic circuit switching equipment invented 19th century missouri undertaker named almon b strowger shortly telephone invented someone died one survivors would call town operator say please connect undertaker unfortunately mr strowger two undertakers town one wife town telephone operator quickly saw either going invent automatic telephone switching equipment going go business chose first option nearly years circuit switching equipment used worldwide known strowger gear history record whether unemployed switchboard operator got job information operator answering questions phone number undertaker model shown highly simplified course parts physical path two telephones may fact microwave fiber links onto thousands calls multiplexed nevertheless basic idea valid call set dedicated path ends exists continue exist call finished 162 physical layer physical copper connection set call made switching office computer packets queued subsequent transmission computer b circuit switching b packet switching important property circuit switching need set end end path data sent elapsed time end dialing start ringing easily sec long distance international calls time interval telephone system hunting path shown note data transmission even begin call request signal must propagate way destination acknowledged many computer applications e g point sale credit verification long setup times undesirable consequence reserved path calling parties setup completed delay data propagation time electromagnetic signal msec per km also consequence established path danger congestion call put never get busy signals course might get one connection established due lack switching trunk capacity packet switching alternative circuit switching packet switching shown fig b described chap technology packets sent soon available need set dedicated path advance unlike sec public switched telephone network call request signal pkt propagation delay pkt queuing delay pkt pkt pkt pkt pkt pkt time time spent hunting outgoing trunk pkt call accept signal data bc trunk ab trunk b cd trunk c b c b timing events circuit switching b packet switching circuit switching routers use store forward transmission send packet way destination procedure unlike circuit switching result connection setup reservation bandwidth way sender receiver data circuit follows path among properties data follow path means arrive order packet switching fixed path different packets follow different paths depending network conditions time sent may arrive order packet switching networks place tight upper limit size packets ensures user monopolize transmission line long e g many milliseconds packet switched networks handle interactive traffic also reduces delay since first packet long message forwarded second one fully arrived however store forward delay accumulating packet router memory sent 164 physical layer next router exceeds circuit switching circuit switching bits flow wire continuously packet circuit switching also differ ways bandwidth reserved packet switching packets may wait forwarded introduces queuing delay congestion many packets sent time hand danger getting busy signal unable use network thus congestion occurs different times circuit switching setup time packet switching packets sent circuit reserved particular user traffic bandwidth wasted used traffic packet switching waste bandwidth thus efficient system perspective understanding trade crucial comprehending difference circuit switching packet switching trade guaranteed service wasting resources versus guaranteeing service wasting resources packet switching fault tolerant circuit switching fact invented switch goes circuits using terminated traffic sent packet switching packets routed around dead switches final difference circuit packet switching charging algorithm circuit switching charging historically based distance time mobile phones distance usually play role except international calls time plays coarse role e g calling plan free minutes costs one free minutes sometimes nights weekends cheap packet switching connect time issue volume traffic home users isps usually charge flat monthly rate less work customers understand model backbone carriers charge regional networks based volume traffic differences summarized traditionally telephone networks used circuit switching provide high quality telephone calls computer networks used packet switching simplicity efficiency however notable exceptions older computer networks circuit switched covers e g x newer telephone networks use packet switching voice ip technology looks like standard telephone call outside users inside network packets voice data switched approach let upstarts market cheap international calls via calling cards though perhaps lower call quality incumbents mobile telephone system traditional telephone system even someday gets multigigabit end toend fiber still able satisfy growing group users people go people expect make phone calls use phones check sec mobile telephone system item circuit switched packet switched call setup required needed dedicated physical path yes packet follows route yes packets arrive order yes switch crash fatal yes bandwidth available fixed dynamic time possible congestion setup time every packet potentially wasted bandwidth yes store forward transmission yes charging per minute per packet comparison circuit switched packet switched networks email surf web airplanes cars swimming pools jogging park consequently tremendous amount interest wireless telephony following sections study topic detail mobile phone system used wide area voice data communication mobile phones sometimes called cell phones gone three distinct generations widely called 1g 2g 3g generations analog voice digital voice digital voice data internet email etc mobile phones confused cordless phones consist base station handset sold set use within home never used networking examine although discussion technology systems interesting note political tiny marketing decisions huge impact first mobile system devised u mandated whole country fcc result entire u single analog system mobile phone purchased california also worked new york contrast mobile phones came europe every country devised system resulted fiasco europe learned mistake digital came around government run ptts got together standardized single system gsm european mobile phone work anywhere europe u decided government standardization business left digital marketplace decision resulted different equipment manufacturers producing different kinds mobile phones consequence u 166 physical layer two major completely incompatible digital mobile phone systems deployed well minor systems despite initial lead u mobile phone ownership usage europe far greater u single system works anywhere europe provider part reason second area u europe differed humble matter phone numbers u mobile phones mixed regular fixed telephones thus way caller see say 5678 fixed telephone cheap free call mobile phone expensive call keep people getting nervous placing calls telephone companies decided make mobile phone owner pay incoming calls consequence many people hesitated buying mobile phone fear running big bill receiving calls europe mobile phone numbers special area code analogous numbers instantly recognizable consequently usual rule caller pays also applies mobile phones europe except international calls costs split third issue large impact adoption widespread use prepaid mobile phones europe areas purchased many stores formality buying digital camera pay go preloaded balance example euros recharged using secret pin code balance drops zero consequence practically every teenager many small children europe usually prepaid mobile phones parents locate without danger child running huge bill mobile phone used occasionally use essentially free since monthly charge charge incoming calls first generation 1g mobile phones analog voice enough politics marketing aspects mobile phones let us look technology starting earliest system mobile radiotelephones used sporadically maritime military communication early decades 20th century first system car based telephones set st louis system used single large transmitter top tall building single channel used sending receiving talk user push button enabled transmitter disabled receiver systems known push talk systems installed several cities beginning late 1950s cb radio taxis police cars often use technology 1960s imts improved mobile telephone system installed used high powered watt transmitter top hill two frequencies one sending one receiving push talk button sec mobile telephone system longer needed since communication mobile telephones went inbound different channel outbound signals mobile users could hear unlike push talk system used taxis imts supported channels spread mhz mhz due small number channels users often wait long time getting dial tone also due large power hilltop transmitters adjacent systems several hundred kilometers apart avoid interference limited capacity made system impractical advanced mobile phone system changed amps advanced mobile phone system invented bell labs first installed united states also used england called tacs japan called mcs l1 amps formally retired look understand context 2g 3g systems improved mobile phone systems geographic region divided cells devices sometimes called cell phones amps cells typically km across digital systems cells smaller cell uses set frequencies used neighbors key idea gives cellular systems far capacity previous systems use relatively small cells reuse transmission frequencies nearby adjacent cells whereas imts system km across one call frequency amps system might 10 km cells area able calls frequency widely separated cells thus cellular design increases system capacity least order magnitude cells get smaller furthermore smaller cells mean less power needed leads smaller cheaper transmitters handsets idea frequency reuse illustrated cells normally roughly circular easier model hexagons cells size grouped units seven cells letter indicates group frequencies notice frequency set buffer two cells wide frequency reused providing good separation low interference finding locations high air place base station antennas major issue problem led telecommunication carriers forge alliances roman catholic church since latter owns substantial number exalted potential antenna sites worldwide conveniently single management area number users grown point system overloaded power reduced overloaded cells split smaller 168 physical layer b b c g f f c g e e b c g f e b frequencies reused adjacent cells b add users smaller cells used microcells permit frequency reuse shown b telephone companies sometimes create temporary microcells using portable towers satellite links sporting events rock concerts places large numbers mobile users congregate hours center cell base station telephones cell transmit base station consists computer transmitter receiver connected antenna small system base stations connected single device called msc mobile switching center mtso mobile telephone switching office larger one several mscs may needed connected second level msc mscs essentially end offices telephone system fact connected least one telephone system end office mscs communicate base stations pstn using packet switching network instant mobile telephone logically one specific cell control cell base station mobile telephone physically leaves cell base station notices telephone signal fading away asks surrounding base stations much power getting answers come back base station transfers ownership cell getting strongest signal conditions cell telephone located telephone informed new boss call progress asked switch new channel old one reused adjacent cells process called handoff takes msec channel assignment done msc nerve center system base stations really dumb radio relays sec mobile telephone system channels amps uses fdm separate channels system uses full duplex channels consisting pair simplex channels arrangement known fdd frequency division duplex simplex channels mhz used mobile base station transmission simplex channels mhz used base station mobile transmission simplex channels khz wide channels divided four categories control channels base mobile used manage system paging channels base mobile alert mobile users calls access channels bidirectional used call setup channel assignment finally data channels bidirectional carry voice fax data since frequencies reused nearby cells channels reserved cell control actual number voice channels available per cell much smaller typically call management mobile telephone amps bit serial number digit telephone number programmable read memory telephone number represented digit area code bits digit subscriber number bits phone switched scans preprogrammed list control channels find powerful signal phone broadcasts bit serial number bit telephone number like control information amps packet sent digital form multiple times error correcting code even though voice channels analog base station hears announcement tells msc records existence new customer also informs customer home msc current location normal operation mobile telephone reregisters every minutes make call mobile user switches phone enters number called keypad hits send button phone transmits number called identity access channel collision occurs tries later base station gets request informs msc caller customer msc company one partners msc looks idle channel call one found channel number sent back control channel mobile phone automatically switches selected voice channel waits called party picks phone incoming calls work differently start idle phones continuously listen paging channel detect messages directed call placed mobile phone either fixed phone another mobile phone packet sent callee home msc find packet 170 physical layer sent base station current cell sends broadcast paging channel form unit called phone responds yes access channel base says something like unit call channel point called phone switches channel starts making ringing sounds playing melody owner given birthday present second generation 2g mobile phones digital voice first generation mobile phones analog second generation digital switching digital several advantages provides capacity gains allowing voice signals digitized compressed improves security allowing voice control signals encrypted turn deters fraud eavesdropping whether intentional scanning echoes calls due rf propagation finally enables new services text messaging worldwide standardization first generation also worldwide standardization second either several different systems developed three widely deployed damps digital advanced mobile phone system digital version amps coexists amps uses tdm place multiple calls frequency channel described international standard successor gsm global system mobile communications emerged dominant system slow catch u used virtually everywhere world like amps gsm based mix fdm tdm cdma code division multiple access described international standard completely different kind system based neither fdm mor tdm cdma become dominant 2g system technology become basis 3g systems also name pcs personal communications services sometimes used marketing literature indicate second generation e digital system originally meant mobile phone using mhz band distinction rarely made describe gsm since dominant 2g system next section say cdma describe 3g systems gsm global system mobile communications gsm started life 1980s effort produce single european 2g standard task assigned telecommunications group called french groupe speciale mobile first gsm systems deployed starting quick success soon became clear gsm going european success uptake stretching countries far away australia gsm renamed worldwide appeal sec mobile telephone system gsm mobile phone systems study retain 1g systems design based cells frequency reuse across cells mobility handoffs subscribers move details differ briefly discuss main properties gsm however printed gsm standard sic pages long large fraction material relates engineering aspects system especially design receivers handle multipath signal propagation synchronizing transmitters receivers none even mentioned shows gsm architecture similar amps architecture though components different names mobile divided handset removable chip subscriber account information called sim card short subscriber identity module sim card activates handset contains secrets let mobile network identify encrypt conversations sim card removed plugged different handset turn handset mobile far network concerned air interface bsc sim card msc bsc handset hlr pstn vlr cell tower base station gsm mobile network architecture mobile talks cell base stations air interface describe moment cell base stations connected bsc base station controller controls radio resources cells handles handoff bsc turn connected msc amps routes calls connects pstn public switched telephone network able route calls msc needs know mobiles currently found maintains database nearby mobiles associated cells manages database called vlr visitor location register also database mobile network gives last known location mobile called hlr home location register database used route incoming calls right locations databases must kept date mobiles move cell cell describe air interface detail gsm runs range frequencies worldwide including mhz spectrum allocated amps order support much larger number users gsm 172 physical layer frequency division duplex cellular system like amps mobile transmits one frequency receives another higher frequency mhz higher gsm versus mhz higher amps however unlike amps gsm single frequency pair split time division multiplexing time slots way shared multiple mobiles handle multiple mobiles gsm channels much wider amps channels khz versus khz one khz channel shown gsm system operating mhz region pairs simplex channels simplex channel khz wide supports eight separate connections using time division multiplexing currently active station assigned one time slot one channel pair theoretically channels supported cell many available avoid frequency conflicts neighboring cells eight shaded time slots belong connection four direction transmitting receiving happen time slot gsm radios transmit receive time takes time switch one mobile device assigned 4 mhz time slot wanted transmit base station would use lower four shaded slots ones following time putting data slot data sent frequency tdm frame channel mhz mhz mhz mhz mhz mhz base mobile mobile base time gsm uses frequency channels uses eightslot tdm system tdm slots shown part complex framing hierarchy tdm slot specific structure groups tdm slots form multiframes also specific structure simplified version hierarchy shown see tdm slot consists bit data frame occupies channel sec including sec guard time sec mobile telephone system slot data frame starts ends three bits frame delineation purposes also contains two bit information fields one control bit indicates whether following information field voice data information fields bit sync training field used receiver synchronize sender frame boundaries 500 bit multiframe sent msec c 10 14 16 18 20 22 24 l reserved future use bit tdm frame sent 615 msec 25 bit sec guard time bit data frame sent sec information bits sync information voice data bit portion gsm framing structure data frame transmitted sec transmitter allowed send one data frame every 615 msec since sharing channel seven stations gross rate channel 833 bps divided among eight users however amps overhead eats large fraction bandwidth ultimately leaving kbps worth payload per user error correction error correction kbps left speech substantially less kbps pcm uncompressed voice signals fixed telephone network compression mobile device reach levels little loss quality seen eight data frames make tdm frame tdm frames make msec multiframe tdm frames multiframe slot used control slot reserved future use available user traffic however addition slot multiframe shown slot multiframe shown also used slots used hold several control channels used manage system broadcast control channel continuous stream output base station containing base station identity channel status mobile stations monitor signal strength see moved new cell 174 physical layer dedicated control channel used location updating registration call setup particular bsc maintains database mobile stations currently jurisdiction vlr information needed maintain vlr sent dedicated control channel finally common control channel split three logical subchannels first subchannels paging channel base station uses announce incoming calls mobile station monitors continuously watch calls answer second random access channel allows users request slot dedicated control channel two requests collide garbled retried later using dedicated control channel slot station set call assigned slot announced third subchannel access grant channel finally gsm differs amps handoff handled amps msc manages completely without help mobile devices time slots gsm mobile neither sending receiving time idle slots opportunity mobile measure signal quality nearby base stations sends information bsc bsc use determine mobile leaving one cell entering another perform handoff design called maho mobile assisted handoff third generation 3g mobile phones digital voice data first generation mobile phones analog voice second generation digital voice third generation mobile phones 3g called digital voice data number factors driving industry first data traffic already exceeds voice traffic fixed network growing exponentially whereas voice traffic essentially flat many industry experts expect data traffic dominate voice mobile devices well soon second telephone entertainment computer industries gone digital rapidly converging many people drooling lightweight portable devices act telephone music video player email terminal web interface gaming machine worldwide wireless connectivity internet high bandwidth apple iphone good example kind 3g device people get hooked wireless data services wireless data volumes rising steeply popularity iphones trouble iphone uses 5g network enhanced 2g network true 3g network enough data capacity keep users happy 3g mobile telephony providing enough wireless bandwidth keep future users happy itu tried get bit specific vision starting back around issued blueprint getting called imt imt stood sec mobile telephone system international mobile telecommunications basic services imt network supposed provide users high quality voice transmission messaging replacing email fax sms chat etc multimedia playing music viewing videos films television etc internet access web surfing including pages audio video additional services might video conferencing telepresence group game playing commerce waving telephone cashier pay store furthermore services supposed available worldwide automatic connection via satellite terrestrial network located instantly always quality service guarantees itu envisioned single worldwide technology imt manufacturers could build single device could sold used anywhere world like cd players computers unlike mobile phones televisions single technology would also make life much simpler network operators would encourage people use services format wars betamax versus vhs battle videorecorders good business turned bit optimistic number stood three things year supposed go service frequency supposed operate mhz bandwidth service kbps make three counts nothing implemented itu recommended governments reserve spectrum ghz devices could roam seamlessly country country china reserved required bandwidth nobody else finally recognized mbps currently feasible users mobile due difficulty performing handoffs quickly enough realistic mbps stationary indoor users compete head adsl kbps people walking kbps connections cars despite initial setbacks much accomplished since several imt proposals made winnowing came two main ones first one wcdma wideband cdma proposed ericsson pushed european union called umts universal mobile telecommunications system contender cdma2000 proposed qualcomm systems similar different based broadband cdma wcdma uses mhz channels cdma2000 uses 25mhz channels ericsson qualcomm engineers put room told come common design probably could find one fairly quickly trouble real problem engineering politics usual europe wanted system interworked gsm whereas u wanted 176 physical layer system compatible one already widely deployed u side also supported local company ericsson based sweden qualcomm california finally ericsson qualcomm involved numerous lawsuits respective cdma patents worldwide 15 mobile subscribers already use 3g technologies north america europe around third mobile subscribers 3g japan early adopter nearly mobile phones japan 3g figures include deployment umts cdma2000 3g continues one great cauldron activity market shakes add confusion umts became single 3g standard multiple incompatible options including cdma2000 change effort unify various camps papers technical differences obscures focus ongoing efforts use umts mean wcdma distinct cdma2000 focus discussion use cdma cellular networks distinguishing feature systems cdma neither fdm tdm kind mix user sends frequency band time first proposed cellular systems industry gave approximately reaction columbus first got queen isabella proposed reaching india sailing wrong direction however persistence single company qualcomm cdma succeeded 2g system matured point became technical basis 3g make cdma work mobile phone setting requires basic cdma technique described previous section specifically described synchronous cdma chip sequences exactly orthogonal design works users synchronized start time chip sequences case base station transmitting mobiles base station transmit chip sequences starting time signals orthogonal able separated however difficult synchronize transmissions independent mobile phones without care transmissions would arrive base station different times guarantee orthogonality let mobiles send base station without synchronization want code sequences orthogonal possible offsets simply aligned start possible find sequences exactly orthogonal general case long pseudorandom sequences come close enough property high probability low cross correlation offsets means one sequence multiplied another sequence summed compute inner product result small would zero orthogonal intuitively random sequences always look different multiplying together produce random signal sum small result lets receiver filter unwanted transmissions received signal also auto correlation sec mobile telephone system pseudorandom sequences also small high probability except zero offset means one sequence multiplied delayed copy summed result small except delay zero intuitively delayed random sequence looks like different random sequence back cross correlation case lets receiver lock onto beginning wanted transmission received signal use pseudorandom sequences lets base station receive cdma messages unsynchronized mobiles however implicit assumption discussion cdma power levels mobiles receiver small cross correlation powerful signal might overwhelm large auto correlation weak signal thus transmit power mobiles must controlled minimize interference competing signals interference limits capacity cdma systems power levels received base station depend far away transmitters well much power transmit may many mobile stations varying distances base station good heuristic equalize received power mobile station transmit base station inverse power level receives base station words mobile station receiving weak signal base station use power one getting strong signal accuracy base station also gives mobile feedback increase decrease hold steady transmit power feedback frequent times per second good power control important minimize interference another improvement basic cdma scheme described earlier allow different users send data different rates trick accomplished naturally cdma fixing rate chips transmitted assigning users chip sequences different lengths example wcdma chip rate 84 mchips sec spreading codes vary chips 256chip code around kbps left error correction capacity sufficient voice call chip code user data rate close mbps intermediate length codes give intermediate rates get multiple mbps mobile must use one mhz channel let us describe advantages cdma given dealt problems getting work three main advantages first cdma improve capacity taking advantage small periods transmitters silent polite voice calls one party silent talks average line busy time however pauses may small difficult predict tdm fdm systems possible reassign time slots frequency channels quickly enough benefit small silences however cdma simply transmitting one user lowers interference users likely fraction users transmitting busy cell given time thus cdma takes advantage expected silences allow larger number simultaneous calls 178 physical layer second cdma cell uses frequencies unlike gsm amps fdm needed separate transmissions different users eliminates complicated frequency planning tasks improves capacity also makes easy base station use multiple directional antennas sectored antennas instead omnidirectional antenna directional antennas concentrate signal intended direction reduce signal hence interference directions turn increases capacity three sector designs common base station must track mobile moves sector sector tracking easy cdma frequencies used sectors third cdma facilitates soft handoff mobile acquired new base station previous one signs way loss continuity soft handoff shown easy cdma frequencies used cell alternative hard handoff old base station drops call new one acquires new one unable acquire e g available frequency call disconnected abruptly users tend notice inevitable occasionally current design hard handoff norm fdm designs avoid cost mobile transmit receive two frequencies simultaneously b c soft handoff b c much written 3g praising greatest thing since sliced bread meanwhile many operators taken cautious steps direction 3g going sometimes called 5g although 1g might accurate one system edge enhanced data rates gsm evolution gsm bits per symbol trouble bits per symbol also means errors per symbol edge nine different schemes modulation error correction differing terms much bandwidth devoted fixing errors introduced higher speed edge one step along evolutionary path defined gsm wcdma similarly evolutionary path defined operators upgrade cdma2000 networks even though 3g networks fully deployed yet researchers regard 3g done deal people already working 4g systems sec mobile telephone system name lte long term evolution proposed features 4g include high bandwidth ubiquity connectivity everywhere seamless integration wired wireless ip networks including 11 access points adaptive resource spectrum management high quality service multimedia information see astely et al larmo et al meanwhile wireless networks 4g levels performance already available main example 16 also known wimax overview mobile wimax see ahmadi say industry state flux huge understatement check back years see happened cable television studied fixed wireless telephone systems fair amount detail clearly play major role future networks another major player emerged past decade internet access cable television networks many people nowadays get telephone internet service cable following sections look cable television network detail contrast telephone systems studied relevant references information donaldson jones dutta roy fellows jones community antenna television cable television conceived late 1940s way provide better reception people living rural mountainous areas system initially consisted big antenna top hill pluck television signal air amplifier called headend strengthen coaxial cable deliver people houses illustrated antenna picking distant signals headend drop cable tap coaxial cable early cable television system early years cable television called community antenna television much mom pop operation anyone handy electronics 180 physical layer could set service town users would chip pay costs number subscribers grew additional cables spliced onto original cable amplifiers added needed transmission one way headend users thousands independent systems existed time inc started new channel home box office new content movies distributed cable cable channels followed focusing news sports cooking many topics development gave rise two changes industry first large corporations began buying existing cable systems laying new cable acquire new subscribers second need connect multiple systems often distant cities order distribute new cable channels cable companies began lay cable cities connect single system pattern analogous happened telephone industry years earlier connection previously isolated end offices make long distance calling possible internet cable course years cable system grew cables various cities replaced high bandwidth fiber similar happened telephone system system fiber long haul runs coaxial cable houses called hfc hybrid fiber coax system electrooptical converters interface optical electrical parts system called fiber nodes bandwidth fiber much greater coax fiber node feed multiple coaxial cables part modern hfc system shown past decade many cable operators decided get internet access business often telephony business well technical differences cable plant telephone plant effect done achieve goals one thing one way amplifiers system replaced two way amplifiers support upstream well downstream transmissions happening early internet cable systems used cable television network downstream transmissions dialup connection via telephone network upstream transmissions clever workaround much network compared could however another difference hfc system telephone system b much harder remove neighborhoods single cable shared many houses whereas telephone system every house private local loop used television broadcasting sharing natural fit programs broadcast cable matter whether viewers 000 viewers cable used internet access however matters lot users 000 one user decides download large file bandwidth potentially taken away users users sec switch cable television high bandwidth fiber trunk coaxial cable fiber node headend tap house fiber house toll office high bandwidth fiber trunk end office local loop fiber copper twisted pair b cable television b fixed telephone system competition bandwidth telephone system particular property downloading large file adsl line reduce neighbor bandwidth hand bandwidth coax much higher twisted pairs get lucky neighbors use internet much way cable industry tackled problem split long cables connect one directly fiber node bandwidth headend fiber node effectively infinite long many subscribers cable segment amount traffic manageable typical 182 physical layer cables nowadays 2000 houses people subscribe internet cable load may become great requiring splitting fiber nodes spectrum allocation throwing tv channels using cable infrastructure strictly internet access would probably generate fair number irate customers cable companies hesitant furthermore cities heavily regulate cable cable operators would allowed even really wanted consequence needed find way television internet peacefully coexist cable solution build frequency division multiplexing cable television channels north america occupy 550 mhz region except fm radio mhz channels mhz wide including guard bands carry one traditional analog television channel several digital television channels europe low end usually mhz channels mhz wide higher resolution required pal secam otherwise allocation scheme similar low part band used modern cables also operate well mhz often mhz solution chosen introduce upstream channels 42 mhz band slightly higher europe use frequencies high end downstream signals cable spectrum illustrated 42 88 upstream frequencies upstream data tv fm tv mhz downstream data downstream frequencies frequency allocation typical cable tv system used internet access note since television signals downstream possible use upstream amplifiers work 42 mhz region downstream amplifiers work mhz shown figure thus get asymmetry upstream downstream bandwidths spectrum available television hand users want downstream traffic cable operators unhappy fact sec cable television life saw earlier telephone companies usually offer asymmetric dsl service even though technical reason addition upgrading amplifiers operator upgrade headend dumb amplifier intelligent digital computer system high bandwidth fiber interface isp often name gets upgraded well headend cmts cable modem termination system following text refrain name upgrade stick traditional headend cable modems internet access requires cable modem device two interfaces one computer one cable network early years cable internet operator proprietary cable modem installed cable company technician however soon became apparent open standard would create competitive cable modem market drive prices thus encouraging use service furthermore customers buy cable modems stores install wireless access points would eliminate dreaded truck rolls consequently larger cable operators teamed company called cablelabs produce cable modem standard test products compliance standard called docsis data cable service interface specification mostly replaced proprietary modems docsis version came soon followed docsis increased upstream rates better support symmetric services ip telephony recent version standard docsis came uses bandwidth increase rates directions european version standards called eurodocsis cable operators like idea standard however since many making good money leasing modems captive customers open standard dozens manufacturers selling cable modems stores ends lucrative practice modem computer interface straightforward normally ethernet occasionally usb end complicated uses fdm tdm cdma share bandwidth cable subscribers cable modem plugged powered scans downstream channels looking special packet periodically put headend provide system parameters modems come online upon finding packet new modem announces presence one upstream channels headend responds assigning modem upstream downstream channels assignments changed later headend deems necessary balance load use mhz mhz channels fdm part cable modem sends data one upstream one downstream channel multiple channels 184 physical layer docsis usual scheme take mhz downstream channel modulate qam cable quality exceptionally good qam mhz channel qam get mbps overhead subtracted net payload mbps qam256 net payload mbps european values larger upstream rf noise system originally designed data noise multiple subscribers funneled headend conservative scheme used ranges qpsk qam symbols used error protection trellis coded modulation fewer bits per symbol upstream asymmetry upstream downstream rates much suggested tdm used share bandwidth upstream across multiple subscribers otherwise transmissions would collide headend time divided minislots different subscribers send different minislots make work modem determines distance headend sending special packet seeing long takes get response process called ranging important modem know distance get timing right upstream packet must fit one consecutive minislots headend received headend announces start new round minislots periodically starting gun heard modems simultaneously due propagation time cable knowing far headend modem compute long ago first minislot really started minislot length network dependent typical payload bytes initialization headend assigns modem minislot use requesting upstream bandwidth computer wants send packet transfers packet modem requests necessary number minislots request accepted headend puts acknowledgement downstream channel telling modem minislots reserved packet packet sent starting minislot allocated additional packets requested using field header rule multiple modems assigned minislot leads contention two different possibilities exist dealing first cdma used share minislot subscribers solves contention problem subscribers cdma code sequence send time albeit reduced rate second option cdma used case may acknowledgement request collision case modem waits random time tries successive failure randomization time doubled readers already somewhat familiar networking algorithm slotted aloha binary exponential backoff ethernet used cable stations sense medium come back issues chap downstream channels managed differently upstream channels starters one sender headend contention sec cable television need minislots actually statistical time division multiplexing another amount traffic downstream usually much larger upstream fixed packet size bytes used part reedsolomon error correcting code overhead leaving user payload bytes numbers chosen compatibility digital television using mpeg tv downstream data channels formatted way logically connections depicted typical details upstream downstream channels north america adsl versus cable better adsl cable like asking operating system better language better religion answer get depends ask let us compare adsl cable points use fiber backbone differ edge cable uses coax adsl uses twisted pair theoretical carrying capacity coax hundreds times twisted pair however full capacity cable available data users much cable bandwidth wasted useless stuff television programs practice hard generalize effective capacity adsl providers give specific statements bandwidth e g mbps downstream kbps upstream generally achieve consistently cable providers may artificially cap bandwidth user help make performance predictions really give guarantees effective capacity depends many people currently active user cable segment sometimes may better adsl sometimes may worse annoying though unpredictability great service one minute guarantee great service next minute since biggest bandwidth hog town may turned computer 186 physical layer adsl system acquires users increasing numbers little effect existing users since user dedicated connection cable subscribers sign internet service performance existing users drop cure cable operator split busy cables connect one fiber node directly costs time money business pressures avoid aside already studied another system shared channel like cable mobile telephone system group users could call cellmates share fixed amount bandwidth voice traffic fairly smooth bandwidth rigidly divided fixed chunks among active users using fdm tdm data traffic rigid division inefficient data users frequently idle case reserved bandwidth wasted cable dynamic means used allocate shared bandwidth availability issue adsl cable differ everyone telephone users close enough end offices get adsl hand everyone cable cable company provides internet access get distance fiber node headend issue also worth noting since cable started television distribution medium businesses point point medium adsl inherently secure cable cable user easily read packets going cable reason decent cable provider encrypt traffic directions nevertheless neighbor get encrypted messages still less secure get anything telephone system generally reliable cable example backup power continues work normally even power outage cable power amplifier along chain fails downstream users cut instantly finally adsl providers offer choice isps sometimes even required law always case cable operators conclusion adsl cable much alike different offer comparable service competition heats probably comparable prices summary physical layer basis networks nature imposes two fundamental limits channels determine bandwidth limits nyquist limit deals noiseless channels shannon limit deals noisy channels sec summary transmission media guided unguided principal guided media twisted pair coaxial cable fiber optics unguided media include terrestrial radio microwaves infrared lasers air satellites digital modulation methods send bits guided unguided media analog signals line codes operate baseband signals placed passband modulating amplitude frequency phase carrier channels shared users time frequency code division multiplexing key element wide area networks telephone system main components local loops trunks switches adsl offers speeds mbps local loop dividing many subcarriers run parallel far exceeds rates telephone modems pons bring fiber home even greater access rates adsl trunks carry digital information multiplexed wdm provision many high capacity links individual fibers well tdm share high rate link users circuit switching packet switching important mobile applications fixed telephone system suitable mobile phones currently widespread use voice increasingly data gone three generations first generation 1g analog dominated amps 2g digital gsm presently widely deployed mobile phone system world 3g digital based broadband cdma wcdma also cdma2000 deployed alternative system network access cable television system gradually evolved coaxial cable hybrid fiber coax television television internet potentially offers high bandwidth bandwidth practice depends heavily users shared problems compute fourier coefficients function f noiseless khz channel sampled every msec maximum data rate maximum data rate change channel noisy signal noise ratio db television channels mhz wide many bits sec sent four level digital signals used assume noiseless channel binary signal sent khz channel whose signal noise ratio db maximum achievable data rate signal noise ratio needed put t1 carrier khz line advantages fiber optics copper transmission medium downside using fiber optics copper 188 physical layer much bandwidth microns spectrum wavelength micron desired send sequence computer screen images optical fiber screen pixels pixel bits screen images per second much bandwidth needed many microns wavelength needed band 30 microns nyquist theorem true high quality single mode optical fiber copper wire radio antennas often work best diameter antenna equal wavelength radio wave reasonable antennas range cm meters diameter frequency range cover laser beam mm wide aimed detector mm wide away roof building much angular diversion degrees laser misses detector low orbit satellites iridium project divided six necklaces around earth altitude using period minutes average interval handoffs stationary transmitter calculate end end transit time packet geo altitude 800 km meo altitude 000 km leo altitude km satellites latency call originating north pole reach south pole call routed via iridium satellites assume switching time satellites microseconds earth radius km minimum bandwidth needed achieve data rate b bits sec signal transmitted using nrz mlt manchester encoding explain answer prove 4b 5b encoding signal transition occur least every four bit times many end office codes pre end office named three digit area code first three digits local number area codes started digit range second digit ended digit first two digits local number always range third digit could digit simple telephone system consists two end offices single toll office end office connected mhz full duplex trunk average telephone used make four calls per hour workday mean call duration min ten percent calls long distance e pass toll office maximum number telephones end office support assume khz per circuit explain telephone company may decide support lesser number telephones maximum number end office regional telephone company million subscribers telephones connected central office copper twisted pair average length twisted pairs km much copper local loops worth assume chap problems cross section strand circle mm diameter density copper grams cm3 copper sells per kilogram oil pipeline simplex system half duplex system full duplex system none river walkie talkie style communication cost fast microprocessor dropped point possible put one modem affect handling telephone line errors negate need error checking correction layer modem constellation diagram similar data points following coordinates many bps modem parameters achieve symbols second maximum bit rate achievable v standard modem baud rate error correction used many frequencies full duplex qam modem use ten signals requiring hz multiplexed onto single channel using fdm minimum bandwidth required multiplexed channel assume guard bands hz wide pcm sampling time set sec percent overhead t1 carrier percent 544 mbps delivered end user relate percent overhead oc oc lines compare maximum data rate noiseless khz channel using analog encoding e g qpsk bits per sample b t1 pcm system t1 carrier system slips loses track tries resynchronize using first bit frame many frames inspected average resynchronize probability 001 wrong difference demodulator part modem coder part codec convert analog signals digital ones sonet clocks drift rate part long take drift equal width bit see practical implications calculation long take transmit gb file one vsat another using hub shown assume uplink mbps downlink mbps circuit switching used sec circuit setup time calculate transmit time previous problem packet switching used instead assume packet size kb switching delay satellite hub microseconds packet header size bytes user data rate oc stated 608 mbps show number derived sonet oc parameters gross spe user data rates oc line 190 physical layer accommodate lower data rates sts sonet system virtual tributaries vts vt partial payload inserted sts frame combined partial payloads fill data frame vt1 uses columns vt2 uses columns vt3 uses columns vt6 uses columns sts frame vt accommodate ds service 544 mbps b european cept service 048 mbps c ds service 312 mbps available user bandwidth oc 12c connection three packet switching networks contain n nodes first network star topology central switch second bidirectional ring third fully interconnected wire every node every node best average worst case transmission paths hops compare delay sending x bit message k hop path circuit switched network lightly loaded packet switched network circuit setup time sec propagation delay sec per hop packet size p bits data rate b bps conditions packet network lower delay also explain conditions packet switched network preferable circuitswitched network suppose x bits user data transmitted k hop path packetswitched network series packets containing p data bits h header bits x p h bit rate lines b bps propagation delay negligible value p minimizes total delay typical mobile phone system hexagonal cells forbidden reuse frequency band adjacent cell frequencies available many used given cell actual layout cells seldom regular shown even shapes individual cells typically irregular give possible reason might irregular shapes affect frequency assignment cell make rough estimate number pcs microcells diameter would take cover san francisco square km sometimes mobile user crosses boundary one cell another current call abruptly terminated even though transmitters receivers functioning perfectly suppose b c simultaneously transmitting bits using cdma system chip sequences resulting chip sequence consider different way looking orthogonality property cdma chip sequences bit pair sequences match match express orthogonality property terms matches mismatches cdma receiver gets following chips assuming chip sequences defined stations transmitted bits one send chap problems four stations transmit suppose four stations added provide chip sequences stations low end telephone system star shaped local loops neighborhood converging end office contrast cable television consists single long cable snaking way past houses neighborhood suppose future tv cable gbps fiber instead copper could used simulate telephone model everybody private line end office many one telephone houses could hooked single fiber cable company decides provide internet access cable neighborhood consisting houses company uses coaxial cable spectrum allocation allowing mbps downstream bandwidth per cable attract customers company decides guarantee least mbps downstream bandwidth house time describe cable company needs provide guarantee using spectral allocation shown information given text many mbps cable system allocate upstream many downstream fast cable user receive data network otherwise idle assume user interface mbps ethernet b mbps ethernet c mbps wireless multiplexing sts multiple data streams called tributaries plays important role sonet multiplexer multiplexes three input sts tributaries onto one output sts stream multiplexing done byte byte first three output bytes first bytes tributaries respectively next three output bytes second bytes tributaries respectively write program simulates multiplexer program consist five processes main process creates four processes one three sts tributaries one multiplexer tributary process reads sts frame input file sequence bytes send frames byte byte multiplexer process multiplexer process receives bytes outputs sts frame byte byte writing standard output use pipes communication among processes write program implement cdma assume length chip sequence eight number stations transmitting four program consists three sets processes four transmitter processes t0 t1 t2 t3 one joiner process four receiver processes r0 r1 r2 r3 main program also acts joiner process first reads four chip sequences bipolar notation standard input sequence bits bit per transmitter process transmitted forks four pairs transmitter receiver processes pair transmitter receiver processes t0 r0 t1 r1 t2 r2 t3 r3 assigned one chip sequence transmitter process assigned bit first bit t0 second bit t1 next transmitter process computes signal transmitted sequence bits sends joiner process receiving signals four transmitter processes joiner process combines signals sends combined signal 192 physical layer four receiver processes receiver process computes bit received prints standard output use pipes communication processes 3 data link layer chapter study design principles second layer model data link layer study deals algorithms achieving reliable efficient communication whole units information called frames rather individual bits physical layer two adjacent machines adjacent mean two machines connected communication channel acts conceptually like wire e g coaxial cable telephone line wireless channel essential property channel makes wire like bits delivered exactly order sent first might think problem trivial nothing study machine puts bits wire machine b takes unfortunately communication channels make errors occasionally furthermore finite data rate nonzero propagation delay time bit sent time received limitations important implications efficiency data transfer protocols used communications must take factors consideration protocols subject chapter introduction key design issues present data link layer start study protocols looking nature errors detected corrected study series increasingly complex protocols one solving problems present layer finally conclude examples data link protocols 194 data link layer data link layer design issues data link layer uses services physical layer send receive bits communication channels number functions including providing well defined service interface network layer dealing transmission errors regulating flow data slow receivers swamped fast senders accomplish goals data link layer takes packets gets network layer encapsulates frames transmission frame contains frame header payload field holding packet frame trailer illustrated frame management forms heart data link layer following sections examine abovementioned issues detail sending machine receiving machine packet packet frame header payload field trailer header payload field trailer relationship packets frames although chapter explicitly data link layer protocols many principles study error control flow control found transport protocols well reliability overall goal achieved layers work together fact many networks functions found mostly upper layers data link layer minimal job good enough however matter found principles pretty much often show simplest purest forms data link layer making good place examine detail services provided network layer function data link layer provide services network layer principal service transferring data network layer source machine network layer destination machine source machine sec data link layer design issues entity call process network layer hands bits data link layer transmission destination job data link layer transmit bits destination machine handed network layer shown actual transmission follows path b easier think terms two data link layer processes communicating using data link protocol reason implicitly use model throughout chapter host host virtual data path host host actual data path b virtual communication b actual communication data link layer designed offer various services actual services offered vary protocol protocol three reasonable possibilities consider turn unacknowledged connectionless service acknowledged connectionless service acknowledged connection oriented service unacknowledged connectionless service consists source machine send independent frames destination machine without destination machine acknowledge ethernet good example data link layer provides class service logical connection established beforehand released afterward frame lost due noise line 196 data link layer attempt made detect loss recover data link layer class service appropriate error rate low recovery left higher layers also appropriate real time traffic voice late data worse bad data next step terms reliability acknowledged connectionless service service offered still logical connections used frame sent individually acknowledged way sender knows whether frame arrived correctly lost arrived within specified time interval sent service useful unreliable channels wireless systems 11 wifi good example class service perhaps worth emphasizing providing acknowledgements data link layer optimization never requirement network layer always send packet wait acknowledged peer remote machine acknowledgement forthcoming timer expires sender send entire message trouble strategy inefficient links usually strict maximum frame length imposed hardware known propagation delays network layer know parameters might send large packet broken say frames lost average would take long time packet get instead individual frames acknowledged retransmitted errors corrected directly quickly reliable channels fiber overhead heavyweight data link protocol may unnecessary inherently unreliable wireless channels well worth cost getting back services sophisticated service data link layer provide network layer connection oriented service service source destination machines establish connection data transferred frame sent connection numbered data link layer guarantees frame sent indeed received furthermore guarantees frame received exactly frames received right order connection oriented service thus provides network layer processes equivalent reliable bit stream appropriate long unreliable links satellite channel long distance telephone circuit acknowledged connectionless service used conceivable lost acknowledgements could cause frame sent received several times wasting bandwidth connection oriented service used transfers go three distinct phases first phase connection established sides initialize variables counters needed keep track frames received ones second phase one frames actually transmitted third final phase connection released freeing variables buffers resources used maintain connection sec data link layer design issues framing provide service network layer data link layer must use service provided physical layer physical layer accept raw bit stream attempt deliver destination channel noisy wireless wired links physical layer add redundancy signals reduce bit error rate tolerable level however bit stream received data link layer guaranteed error free bits may different values number bits received may less equal number bits transmitted data link layer detect necessary correct errors usual approach data link layer break bit stream discrete frames compute short token called checksum frame include checksum frame transmitted checksum algorithms discussed later chapter frame arrives destination checksum recomputed newly computed checksum different one contained frame data link layer knows error occurred takes steps deal e g discarding bad frame possibly also sending back error report breaking bit stream frames difficult first appears good design must make easy receiver find start new frames using little channel bandwidth look four methods byte count flag bytes byte stuffing flag bits bit stuffing physical layer coding violations first framing method uses field header specify number bytes frame data link layer destination sees byte count knows many bytes follow hence end frame technique shown four small example frames sizes bytes respectively trouble algorithm count garbled transmission error example byte count second frame b becomes due single bit flip destination get synchronization unable locate correct start next frame even checksum incorrect destination knows frame bad still way telling next frame starts sending frame back source asking retransmission help either since destination know many bytes skip get start retransmission reason byte count method rarely used 198 data link layer one byte byte count frame bytes frame bytes frame bytes frame bytes error frame frame wrong byte count b byte stream without errors b one error second framing method gets around problem resynchronization error frame start end special bytes often byte called flag byte used starting ending delimiter byte shown flag two consecutive flag bytes indicate end one frame start next thus receiver ever loses synchronization search two flag bytes find end current frame start next frame however still problem solve may happen flag byte occurs data especially binary data photographs songs transmitted situation would interfere framing one way solve problem sender data link layer insert special escape byte esc accidental flag byte data thus framing flag byte distinguished one data absence presence escape byte data link layer receiving end removes escape bytes giving data network layer technique called byte stuffing course next question happens escape byte occurs middle data answer stuffed escape byte receiver first escape byte removed leaving data byte follows might another escape byte flag byte examples shown b cases byte sequence delivered destuffing exactly original byte sequence still search frame boundary looking two flag bytes row without bothering undo escapes byte stuffing scheme depicted slight simplification one used ppp point point protocol used carry packets communications links discuss ppp near end chapter sec data link layer design issues flag header payload field trailer flag original bytes stuffing flag b esc flag b esc b esc esc b esc flag b esc esc esc flag b esc esc b esc esc esc esc b b frame delimited flag bytes b four examples byte sequences byte stuffing third method delimiting bit stream gets around disadvantage byte stuffing tied use bit bytes framing also done bit level frames contain arbitrary number bits made units size developed popular hdlc highlevel data link control protocol frame begins ends special bit pattern 0x7e hexadecimal pattern flag byte whenever sender data link layer encounters five consecutive 1s data automatically stuffs bit outgoing bit stream bit stuffing analogous byte stuffing escape byte stuffed outgoing character stream flag byte data also ensures minimum density transitions help physical layer maintain synchronization usb universal serial bus uses bit stuffing reason receiver sees five consecutive incoming bits followed bit automatically destuffs e deletes bit byte stuffing completely transparent network layer computers bit stuffing user data contain flag pattern flag transmitted stored receiver memory gives example bit stuffing bit stuffing boundary two frames unambiguously recognized flag pattern thus receiver loses track scan input flag sequences since occur frame boundaries never within data 200 data link layer 0 1 1 1 1 0 b 0 1 1 0 1 0 stuffed bits c 0 1 1 1 1 0 bit stuffing original data b data appear line c data stored receiver memory destuffing bit byte stuffing side effect length frame depends contents data carries instance flag bytes data bytes might carried frame roughly bytes however data consists solely flag bytes flag byte escaped frame become roughly bytes long bit stuffing increase would roughly bit added every byte last method framing use shortcut physical layer saw chap encoding bits signals often includes redundancy help receiver redundancy means signals occur regular data example 4b 5b line code data bits mapped signal bits ensure sufficient bit transitions means signal possibilities used use reserved signals indicate start end frames effect using coding violations delimit frames beauty scheme reserved signals easy find start end frames need stuff data many data link protocols use combination methods safety common pattern used ethernet 11 frame begin well defined pattern called preamble pattern might quite long bits typical 11 allow receiver prepare incoming packet preamble followed length e count field header used locate end frame error control solved problem marking start end frame come next problem make sure frames eventually delivered network layer destination proper order assume moment receiver tell whether frame receives contains correct faulty information look codes used detect correct transmission errors sec unacknowledged connectionless service might fine sender kept outputting frames without regard whether sec data link layer design issues arriving properly reliable connection oriented service would fine usual way ensure reliable delivery provide sender feedback happening end line typically protocol calls receiver send back special control frames bearing positive negative acknowledgements incoming frames sender receives positive acknowledgement frame knows frame arrived safely hand negative acknowledgement means something gone wrong frame must transmitted additional complication comes possibility hardware troubles may cause frame vanish completely e g noise burst case receiver react since reason react similarly acknowledgement frame lost sender know proceed clear protocol sender transmits frame waits acknowledgement positive negative hang forever frame ever lost due example malfunctioning hardware faulty communication channel possibility dealt introducing timers data link layer sender transmits frame generally also starts timer timer set expire interval long enough frame reach destination processed acknowledgement propagate back sender normally frame correctly received acknowledgement get back timer runs case timer canceled however either frame acknowledgement lost timer go alerting sender potential problem obvious solution transmit frame however frames may transmitted multiple times danger receiver accept frame two times pass network layer prevent happening generally necessary assign sequence numbers outgoing frames receiver distinguish retransmissions originals whole issue managing timers sequence numbers ensure frame ultimately passed network layer destination exactly less important part duties data link layer higher layers later chapter look series increasingly sophisticated examples see management done flow control another important design issue occurs data link layer higher layers well sender systematically wants transmit frames faster receiver accept situation occur sender running fast powerful computer receiver running slow low end machine common situation smart phone requests web page far powerful server turns fire hose 202 data link layer blasts data poor helpless phone completely swamped even transmission error free receiver may unable handle frames fast arrive lose clearly something done prevent situation two approaches commonly used first one feedback based flow control receiver sends back information sender giving permission send data least telling sender receiver second one rate based flow control protocol built mechanism limits rate senders may transmit data without using feedback receiver chapter study feedback based flow control schemes primarily rate based schemes seen part transport layer chap feedback based schemes seen link layer higher layers latter common days case link layer hardware designed run fast enough cause loss example hardware implementations link layer nics network interface cards sometimes said run wire speed meaning handle frames fast arrive link overruns link problem handled higher layers various feedback based flow control schemes known use basic principle protocol contains well defined rules sender may transmit next frame rules often prohibit frames sent receiver granted permission either implicitly explicitly example connection set receiver might say may send n frames sent send told continue examine details shortly error detection correction saw chap communication channels range characteristics channels like optical fiber telecommunications networks tiny error rates transmission errors rare occurrence channels especially wireless links aging local loops error rates orders magnitude larger links transmission errors norm avoided reasonable expense cost terms performance conclusion transmission errors stay learn deal network designers developed two basic strategies dealing errors add redundant information data sent one strategy include enough redundant information enable receiver deduce transmitted data must include enough redundancy allow receiver deduce error occurred error sec error detection correction request retransmission former strategy uses error correcting codes latter uses error detecting codes use error correcting codes often referred fec forward error correction techniques occupies different ecological niche channels highly reliable fiber cheaper use error detecting code retransmit occasional block found faulty however channels wireless links make many errors better add redundancy block receiver able figure originally transmitted block fec used noisy channels retransmissions likely error first transmission key consideration codes type errors likely occur neither error correcting codes error detecting codes handle possible errors since redundant bits offer protection likely received error data bits compromise protection would nice channel treated redundant bits differently data bits bits channel means avoid undetected errors code must strong enough handle expected errors one model errors caused extreme values thermal noise overwhelm signal briefly occasionally giving rise isolated single bit errors another model errors tend come bursts rather singly model follows physical processes generate deep fade wireless channel transient electrical interference wired channel models matter practice different trade offs errors come bursts advantages disadvantages isolated singlebit errors advantage side computer data always sent blocks bits suppose block size bits error rate 001 per bit errors independent blocks would contain error errors came bursts however one block would affected average disadvantage burst errors occur much harder correct isolated errors types errors also exist sometimes location error known perhaps physical layer received analog signal far expected value declared bit lost situation called erasure channel easier correct errors erasure channels channels flip bits even value bit lost least know bit error however often benefit erasures examine error correcting codes error detecting codes next please keep two points mind though first cover codes link layer first place run problem reliably transmitting groups bits however codes widely used reliability overall concern error correcting codes also seen physical layer particularly noisy channels higher layers particularly 204 data link layer real time media content distribution error detecting codes commonly used link network transport layers second point bear mind error codes applied mathematics unless particularly adept galois fields properties sparse matrices get codes good properties reliable source rather making fact many protocol standards codes coming material study simple code detail briefly describe advanced codes way understand trade offs simple code talk codes used practice via advanced codes error correcting codes examine four different error correcting codes hamming codes binary convolutional codes reed solomon codes low density parity check codes codes add redundancy information sent frame consists data e message bits r redundant e check bits block code r check bits computed solely function data bits associated though bits looked large table find corresponding r check bits systematic code data bits sent directly along check bits rather encoded sent linear code r check bits computed linear function data bits exclusive xor modulo addition popular choice means encoding done operations matrix multiplications simple logic circuits codes look section linear systematic block codes unless otherwise noted let total length block n e n r describe n code n bit unit containing data check bits referred nbit codeword code rate simply rate fraction codeword carries information redundant n rates used practice vary widely might noisy channel case half received information redundant close high quality channel small number check bits added large message understand errors handled necessary first look closely error really given two codewords may transmitted received say possible determine many sec error detection correction corresponding bits differ case bits differ determine many bits differ xor two codewords count number bits result example number bit positions two codewords differ called hamming distance hamming significance two codewords hamming distance apart require single bit errors convert one given algorithm computing check bits possible construct complete list legal codewords list find two codewords smallest hamming distance distance hamming distance complete code data transmission applications 2m possible data messages legal due way check bits computed 2n possible codewords used fact r check bits small fraction 2m 2n 2r possible messages legal codewords sparseness message embedded space codewords allows receiver detect correct errors error detecting error correcting properties block code depend hamming distance reliably detect errors need distance code code way single bit errors change valid codeword another valid codeword receiver sees illegal codeword tell transmission error occurred similarly correct errors need distance 2d code way legal codewords far apart even changes original codeword still closer codeword means original codeword uniquely determined based assumption larger number errors less likely simple example error correcting code consider code four valid codewords code distance means correct double errors detect quadruple errors codeword arrives expect single double bit errors receiver know original must however triple error changes error corrected properly alternatively expect errors detect none received codewords legal codewords error must occurred apparent example correct double errors detect quadruple errors would require us interpret received codeword two different ways 206 data link layer example task decoding finding legal codeword closest received codeword done inspection unfortunately general case codewords need evaluated candidates task time consuming search instead practical codes designed admit shortcuts find likely original codeword imagine want design code message bits r check bits allow single errors corrected 2m legal messages n illegal codewords distance formed systematically inverting n bits n bit codeword formed thus 2m legal messages requires n bit patterns dedicated since total number bit patterns 2n must n 2m 2n using n r requirement becomes r 2r given puts lower limit number check bits needed correct single errors theoretical lower limit fact achieved using method due hamming hamming codes bits codeword numbered consecutively starting bit left end bit immediate right bits powers etc check bits rest etc filled data bits pattern shown hamming code data bits check bits check bit forces modulo sum parity collection bits including even odd bit may included several check bit computations see check bits data bit position k contributes rewrite k sum powers example bit checked check bits occurring expansion e g bit checked bits example check bits computed even parity sums message ascii letter syndrome 01 check bits bit error p1 p2 m3 p4 m5 m6 m7 p8 m9 m10 m11 message sent codeword 0 1 channel flip bit check results 0 1 received codeword message example hamming code correcting single bit error construction gives code hamming distance means correct single errors detect double errors reason careful numbering message check bits becomes apparent decoding sec error detection correction process codeword arrives receiver redoes check bit computations including values received check bits call check results check bits correct even parity sums check result zero case codeword accepted valid check results zero however error detected set check results forms error syndrome used pinpoint correct error single bit error occurred channel check results k respectively gives syndrome design scheme means fifth bit error flipping incorrect bit might check bit data bit discarding check bits gives correct message ascii hamming distances valuable understanding block codes hamming codes used error correcting memory however networks use stronger codes second code look convolutional code code one cover block code convolutional code encoder processes sequence input bits generates sequence output bits natural message size encoding boundary block code output depends current previous input bits encoder memory number previous bits output depends called constraint length code convolutional codes specified terms rate constraint length convolutional codes widely used deployed networks example part gsm mobile phone system satellite communications 11 example popular convolutional code shown code known nasa convolutional code r k since first used voyager space missions starting since liberally reused example part 11 output bit input bit s1 s2 s3 s4 s5 s6 output bit nasa binary convolutional code used 11 input bit left hand side produces two output bits right hand side xor sums input internal state since deals bits performs linear operations binary linear convolutional code since input bit produces output bits code rate systematic since none output bits simply input bit 208 data link layer internal state kept six memory registers time another bit input values registers shifted right example input initial state zeros internal state written left right become first second third bits input output bits followed takes seven shifts flush input completely affect output constraint length code thus k convolutional code decoded finding sequence input bits likely produced observed sequence output bits includes errors small values k done widely used algorithm developed viterbi forney algorithm walks observed sequence keeping step possible internal state input sequence would produced observed sequence fewest errors input sequence requiring fewest errors end likely message convolutional codes popular practice easy factor uncertainty bit decoding example suppose 1v logical level 1v logical level might receive 9v 1v bits instead mapping signals right away would like treat 9v likely 1v maybe correct sequence whole extensions viterbi algorithm work uncertainties provide stronger error correction approach working uncertainty bit called soft decision decoding conversely deciding whether bit subsequent error correction called hard decision decoding third kind error correcting code describe reed solomon code like hamming codes reed solomon codes linear block codes often systematic unlike hamming codes operate individual bits reed solomon codes operate bit symbols naturally mathematics involved describe operation analogy reed solomon codes based fact every n degree polynomial uniquely determined n points example line form ax b determined two points extra points line redundant helpful error correction imagine two data points represent line send two data points plus two check points chosen lie line one points received error still recover data points fitting line received points three points lie line one point one error finding line corrected error reed solomon codes actually defined polynomials operate finite fields work similar manner bit symbols codewords 2m symbols long popular choice make symbols bytes codeword bytes long code widely used adds redundant symbols data symbols decoding error correction sec error detection correction done algorithm developed berlekamp massey efficiently perform fitting task moderate length codes massey reed solomon codes widely used practice strong error correction properties particularly burst errors used dsl data cable satellite communications perhaps ubiquitously cds dvds blu ray discs based bit symbols single bit error bit burst error treated simply one symbol error 2t redundant symbols added reed solomon code able correct errors transmitted symbols means example code redundant symbols correct symbol errors since symbols may consecutive bits error burst bits corrected situation even better error model one erasures e g scratch cd obliterates symbols case 2t errors corrected reed solomon codes often used combination codes convolutional code thinking follows convolutional codes effective handling isolated bit errors fail likely burst errors many errors received bit stream adding reed solomon code within convolutional code reed solomon decoding mop error bursts task good overall code provides good protection single burst errors final error correcting code cover ldpc low density parity check code ldpc codes linear block codes invented robert gallagher doctoral thesis gallagher like theses promptly forgotten reinvented advances computing power made practical ldpc code output bit formed fraction input bits leads matrix representation code low density 1s hence name code received codewords decoded approximation algorithm iteratively improves best fit received data legal codeword corrects errors ldpc codes practical large block sizes excellent error correction abilities outperform many codes including ones looked practice reason rapidly included new protocols part standard digital video broadcasting gbps ethernet power line networks latest version 11 expect see future networks error detecting codes error correcting codes widely used wireless links notoriously noisy error prone compared optical fibers without error correcting codes would hard get anything however fiber 210 data link layer high quality copper error rate much lower error detection retransmission usually efficient dealing occasional error examine three different error detecting codes linear systematic block codes parity checksums cyclic redundancy checks crcs see efficient error correcting codes consider first error detecting code single parity bit appended data parity bit chosen number bits codeword even odd equivalent computing even parity bit modulo sum xor data bits example sent even parity bit added end make odd parity becomes code single parity bit distance since single bit error produces codeword wrong parity means detect single bit errors consider channel errors isolated error rate per bit may seem tiny error rate best fair rate long wired cable challenging error detection typical lan links provide bit error rates 10 let block size bits provide error correction bit blocks know eq check bits needed thus megabit data would require 000 check bits merely detect block single bit error one parity bit per block suffice every blocks block found error extra block bits transmitted repair error total overhead error detection retransmission method bits per megabit data versus 000 bits hamming code one difficulty scheme single parity bit reliably detect single bit error block block badly garbled long burst error probability error detected hardly acceptable odds improved considerably block sent regarded rectangular matrix n bits wide k bits high compute send one parity bit row k bit errors reliably detected long one error per row however something else provides better protection burst errors compute parity bits data different order order data bits transmitted called interleaving case compute parity bit n columns send data bits k rows sending rows top bottom bits row left right usual manner last row send n parity bits transmission order shown n k sec error detection correction n e w r k 001110 1101111 0010 parity bits transmit order channel n c l w r k 11 11 11 burst error parity errors interleaving parity bits detect burst error interleaving general technique convert code detects corrects isolated errors code detects corrects burst errors burst error length n occurs bits error spread across different columns burst error imply bits wrong implies least first last wrong bits flipped range bits bit n columns affected parity bits columns detect error method uses n parity bits blocks kn data bits detect single burst error length n less burst length n pass undetected however first bit inverted last bit inverted bits correct block badly garbled long burst multiple shorter bursts probability n columns correct parity accident probability bad block accepted n second kind error detecting code checksum closely related groups parity bits word checksum often used mean group check bits associated message regardless calculated group parity bits one example checksum however stronger checksums based running sum data bits message checksum usually placed end message complement sum function way errors may detected summing entire received codeword data bits checksum result comes zero error detected one example checksum bit internet checksum used internet packets part ip protocol braden et al checksum sum message bits divided bit words method operates words rather bits parity errors leave parity unchanged still alter sum detected example lowest order bit two different words flipped parity check across bits would fail detect error however two 1s added bit checksum produce different result error detected 212 data link layer internet checksum computed one complement arithmetic instead modulo sum one complement arithmetic negative number bitwise complement positive counterpart modern computers run two complement arithmetic negative number one complement plus one two complement computer one complement sum equivalent taking sum modulo adding overflow high order bits back low order bits algorithm gives uniform coverage data checksum bits otherwise two high order bits added overflow lost without changing sum another benefit one complement two representations zero 0s 1s allows one value e g 0s indicate checksum without need another field decades always assumed frames checksummed contain random bits analyses checksum algorithms made assumption inspection real data partridge et al shown assumption quite wrong consequence undetected errors cases much common previously thought internet checksum particular efficient simple provides weak protection cases precisely simple sum detect deletion addition zero data swapping parts message provides weak protection message splices parts two packets put together errors may seem unlikely occur random processes sort errors occur buggy hardware better choice fletcher checksum fletcher includes positional component adding product data position running sum provides stronger detection changes position data although two preceding schemes may sometimes adequate higher layers practice third stronger kind error detecting code widespread use link layer crc cyclic redundancy check also known polynomial code polynomial codes based upon treating bit strings representations polynomials coefficients k bit frame regarded coefficient list polynomial k terms ranging x k x polynomial said degree k high order leftmost bit coefficient x k next bit coefficient x k example bits thus represents six term polynomial coefficients 1x 1x 0x 0x 0x 1x polynomial arithmetic done modulo according rules algebraic field theory carries addition borrows subtraction addition subtraction identical exclusive example 11111010 long division carried exactly way binary except sec error detection correction subtraction done modulo divisor said go dividend dividend many bits divisor polynomial code method employed sender receiver must agree upon generator polynomial g x advance high loworder bits generator must compute crc frame bits corresponding polynomial x frame must longer generator polynomial idea append crc end frame way polynomial represented checksummed frame divisible g x receiver gets checksummed frame tries dividing g x remainder transmission error algorithm computing crc follows let r degree g x append r zero bits low order end frame contains r bits corresponds polynomial x r x divide bit string corresponding g x bit string corresponding x r x using modulo division subtract remainder always r fewer bits bit string corresponding x r x using modulo subtraction result checksummed frame transmitted call polynomial x illustrates calculation frame using generator g x x x clear x divisible modulo g x division problem diminish dividend remainder left divisible divisor example base divide 278 941 remainder subtract 278 left 879 divisible 941 let us analyze power method kinds errors detected imagine transmission error occurs instead bit string x arriving x e x arrives bit e x corresponds bit inverted k bits e x k single bit errors occurred single burst error characterized initial mixture 0s 1s final bits upon receiving checksummed frame receiver divides g x computes x e x g x x g x result computation simply e x g x errors happen correspond polynomials containing g x factor slip errors caught single bit error e x x determines bit error g x contains two terms never divide e x single bit errors detected 214 data link layer frame generator 1 transmitted frame 1 1 0 1 0 1 1 1 0 0 1 1 0 0 0 0 0 1 0 1 0 0 1 0 1 0 0 0 0 0 1 0 1 1 1 0 quotient thrown away frame four zeros appended remainder frame four zeros appended minus remainder example calculation crc two isolated single bit errors e x x x j j alternatively written e x x j x j assume g x divisible x sufficient condition double errors detected g x divide x k k maximum value j e maximum frame length simple low degree polynomials give protection long frames known example x x divide x k value k 768 odd number bits error e x contains odd number terms e g x x x interestingly polynomial odd number terms x factor modulo system making x factor g x catch errors odd number inverted bits finally importantly polynomial code r check bits detect burst errors length r burst error length k represented x x k determines far right hand end received frame burst located g x contains x term x factor degree parenthesized expression less degree g x remainder never zero sec error detection correction burst length r remainder division g x zero burst identical g x definition burst first last bits must whether matches depends r intermediate bits combinations regarded equally likely probability incorrect frame accepted valid r also shown error burst longer r bits occurs several shorter bursts occur probability bad frame getting unnoticed r assuming bit patterns equally likely certain polynomials become international standards one used ieee followed example ethernet x x x x x x x x x x x x x x among desirable properties property detects bursts length less bursts affecting odd number bits used widely since 1980s however mean best choice using exhaustive computational search castagnoli et al koopman found best crcs crcs hamming distance typical message sizes ieee standard crc hamming distance although calculation required compute crc may seem complicated easy compute verify crcs hardware simple shift register circuits peterson brown practice hardware nearly always used dozens networking standards include various crcs including virtually lans e g ethernet 11 point point links e g packets sonet elementary data link protocols introduce subject protocols begin looking three protocols increasing complexity interested readers simulator subsequent protocols available via web see preface look protocols useful make explicit assumptions underlying model communication start assume physical layer data link layer network layer independent processes communicate passing messages back forth common implementation shown physical layer process data link layer process run dedicate hardware called nic network interface card rest link layer process network layer process run main cpu part operating system software link layer process often taking form device driver however implementations also possible e g three processes offloaded dedicated hardware called network accelerator three processes running 216 data link layer main cpu software defined ratio actually preferred implementation changes decade decade technology trade offs event treating three layers separate processes makes discussion conceptually cleaner also serves emphasize independence layers computer application operating system network driver link link network interface card nic phy cable medium implementation physical data link network layers another key assumption machine wants send long stream data machine b using reliable connection oriented service later consider case b also wants send data simultaneously assumed infinite supply data ready send never wait data produced instead data link layer asks data network layer always able comply immediately restriction dropped later also assume machines crash protocols deal communication errors problems caused computers crashing rebooting far data link layer concerned packet passed across interface network layer pure data whose every bit delivered destination network layer fact destination network layer may interpret part packet header concern data link layer data link layer accepts packet encapsulates packet frame adding data link header trailer see thus frame consists embedded packet control information header checksum trailer frame transmitted data link layer machine assume exist suitable library procedures physical layer send frame physical layer receive frame procedures compute append check checksum usually done hardware need worry part protocols develop section might use crc algorithm discussed previous section example initially receiver nothing sits around waiting something happen example protocols throughout chapter indicate data link layer waiting something happen procedure call sec elementary data link protocols define max pkt determines packet size bytes typedef enum false true boolean typedef unsigned int seq nr typedef struct unsigned char data max pkt packet typedef enum data ack nak frame kind boolean type sequence ack numbers packet definition frame kind definition typedef struct frame kind kind seq nr seq seq nr ack packet info frame frames transported layer kind frame sequence number acknowledgement number network layer packet wait event happen return type event void wait event event type event fetch packet network layer transmission channel void network layer packet p deliver information inbound frame network layer void network layer packet p go get inbound frame physical layer copy r void physical layer frame r pass frame physical layer transmission void physical layer frame start clock running enable timeout event void start timer seq nr k stop clock disable timeout event void stop timer seq nr k start auxiliary timer enable ack timeout event void start ack timer void stop auxiliary timer disable ack timeout event void stop ack timer void allow network layer cause network layer ready event void enable network layer void forbid network layer causing network layer ready event void disable network layer void macro inc expanded line increment k circularly define inc k k max seq k k else k definitions needed protocols follow definitions located file protocol h 218 data link layer wait event event procedure returns something happened e g frame arrived upon return variable event tells happened set possible events differs various protocols described defined separately protocol note realistic situation data link layer sit tight loop waiting event suggested receive interrupt cause stop whatever go handle incoming frame nevertheless simplicity ignore details parallel activity within data link layer assume dedicated full time handling one channel frame arrives receiver checksum recomputed checksum frame incorrect e transmission error data link layer informed event cksum err inbound frame arrived undamaged data link layer also informed event frame arrival acquire frame inspection using physical layer soon receiving data link layer acquired undamaged frame checks control information header everything right passes packet portion network layer circumstances frame header ever given network layer good reason network layer must never given part frame header keep network data link protocols completely separate long network layer knows nothing data link protocol frame format things changed without requiring changes network layer software happens whenever new nic installed computer providing rigid interface network data link layers greatly simplifies design task communication protocols different layers evolve independently shows declarations c common many protocols discussed later five data structures defined boolean seq nr packet frame kind frame boolean enumerated type take values true false seq nr small integer used number frames tell apart sequence numbers run including max seq defined protocol needing packet unit information exchanged network layer data link layer machine network layer peers model always contains max pkt bytes realistically would variable length frame composed four fields kind seq ack info first three contain control information last may contain actual data transferred control fields collectively called frame header kind field tells whether data frame protocols distinguish frames containing control information containing data well seq ack fields used sequence numbers acknowledgements respectively use described detail later info field data frame contains single packet info field sec elementary data link protocols control frame used realistic implementation would use variablelength info field omitting altogether control frames important understand relationship packet frame network layer builds packet taking message transport layer adding network layer header packet passed data link layer inclusion info field outgoing frame frame arrives destination data link layer extracts packet frame passes packet network layer manner network layer act though machines exchange packets directly number procedures also listed library routines whose details implementation dependent whose inner workings concern us following discussions procedure wait event sits tight loop waiting something happen mentioned earlier procedures network layer network layer used data link layer pass packets network layer accept packets network layer respectively note physical layer physical layer pass frames data link layer physical layer words network layer network layer deal interface layers whereas physical layer physical layer deal interface layers protocols assume channel unreliable loses entire frames upon occasion able recover calamities sending data link layer must start internal timer clock whenever sends frame reply received within certain predetermined time interval clock times data link layer receives interrupt signal protocols handled allowing procedure wait event return event timeout procedures start timer stop timer turn timer respectively timeout events possible timer running stop timer called explicitly permitted call start timer timer running call simply resets clock cause next timeout full timer interval elapsed unless reset turned procedures start ack timer stop ack timer control auxiliary timer used generate acknowledgements certain conditions procedures enable network layer disable network layer used sophisticated protocols longer assume network layer always packets send data link layer enables network layer network layer permitted interrupt packet sent indicate event network layer ready network layer disabled may cause events careful enables disables network layer data link layer prevent network layer swamping packets buffer space frame sequence numbers always range max seq inclusive max seq different different protocols frequently necessary 220 data link layer advance sequence number circularly e max seq followed macro inc performs incrementing defined macro used line within critical path see later factor limiting network performance often protocol processing defining simple operations like macros affect readability code improve performance declarations part protocols discuss shortly save space provide convenient reference extracted listed together conceptually merged protocols c merging done putting definitions special header file case protocol h using include facility c preprocessor include protocol files utopian simplex protocol initial example consider protocol simple worry possibility anything going wrong data transmitted one direction transmitting receiving network layers always ready processing time ignored infinite buffer space available best communication channel data link layers never damages loses frames thoroughly unrealistic protocol nickname utopia simply show basic structure build implementation shown protocol consists two distinct procedures sender receiver sender runs data link layer source machine receiver runs data link layer destination machine sequence numbers acknowledgements used max seq needed event type possible frame arrival e arrival undamaged frame sender infinite loop pumping data onto line fast body loop consists three actions go fetch packet always obliging network layer construct outbound frame using variable send frame way info field frame used protocol fields error flow control errors flow control restrictions receiver equally simple initially waits something happen possibility arrival undamaged frame eventually frame arrives procedure wait event returns event set frame arrival ignored anyway call physical layer removes newly arrived frame hardware buffer puts variable r receiver code get finally data portion passed network layer data link layer settles back wait next frame effectively suspending frame arrives sec elementary data link protocols protocol utopia provides data transmission one direction sender receiver communication channel assumed error free receiver assumed able process input infinitely quickly consequently sender sits loop pumping data onto line fast typedef enum frame arrival event type include protocol h void sender1 void frame packet buffer buffer outbound frame buffer outbound packet true network layer buffer info buffer physical layer void receiver1 void frame r event type event go get something send copy transmission send way tomorrow tomorrow tomorrow creeps petty pace day day last syllable recorded time macbeth v v filled wait used true wait event event physical layer r network layer r info possibility frame arrival go get inbound frame pass data network layer utopian simplex protocol utopia protocol unrealistic handle either flow control error correction processing close unacknowledged connectionless service relies higher layers solve problems though even unacknowledged connectionless service would error detection simplex stop wait protocol error free channel tackle problem preventing sender flooding receiver frames faster latter able process situation easily happen practice able prevent great importance 222 data link layer communication channel still assumed error free however data traffic still simplex one solution build receiver powerful enough process continuous stream back back frames equivalently define link layer slow enough receiver keep must sufficient buffering processing abilities run line rate must able pass frames received network layer quickly enough however worst case solution requires dedicated hardware wasteful resources utilization link mostly low moreover shifts problem dealing sender fast elsewhere case network layer general solution problem receiver provide feedback sender passed packet network layer receiver sends little dummy frame back sender effect gives sender permission transmit next frame sent frame sender required protocol bide time little dummy e acknowledgement frame arrives delay simple example flow control protocol protocols sender sends one frame waits acknowledgement proceeding called stop wait gives example simplex stop wait protocol although data traffic example simplex going sender receiver frames travel directions consequently communication channel two data link layers needs capable bidirectional information transfer however protocol entails strict alternation flow first sender sends frame receiver sends frame sender sends another frame receiver sends another one halfduplex physical channel would suffice protocol sender starts fetching packet network layer using construct frame sending way unlike protocol sender must wait acknowledgement frame arrives looping back fetching next packet network layer sending data link layer need even inspect incoming frame one possibility incoming frame always acknowledgement difference receiver1 receiver2 delivering packet network layer receiver2 sends acknowledgement frame back sender entering wait loop arrival frame back sender important contents receiver need put particular information simplex stop wait protocol noisy channel let us consider normal situation communication channel makes errors frames may either damaged lost completely however assume frame damaged transit receiver hardware detect sec elementary data link protocols protocol stop wait also provides one directional flow data sender receiver communication channel assumed error free protocol however time receiver finite buffer capacity finite processing speed protocol must explicitly prevent sender flooding receiver data faster handled typedef enum frame arrival event type include protocol h void sender2 void frame packet buffer event type event buffer outbound frame buffer outbound packet frame arrival possibility true network layer buffer info buffer physical layer wait event event go get something send copy transmission bye bye little frame proceed given go ahead void receiver2 void frame r event type event true wait event event physical layer r network layer r info physical layer buffers frames frame arrival possibility possibility frame arrival go get inbound frame pass data network layer send dummy frame awaken sender simplex stop wait protocol computes checksum frame damaged way checksum nevertheless correct unlikely occurrence protocol protocols fail e deliver incorrect packet network layer first glance might seem variation protocol would work adding timer sender could send frame receiver would send acknowledgement frame data correctly received damaged frame arrived receiver would discarded sender would time send frame process would repeated frame finally arrived intact scheme fatal flaw though think problem try discover might go wrong reading 224 data link layer see might go wrong remember goal data link layer provide error free transparent communication network layer processes network layer machine gives series packets data link layer must ensure identical series packets delivered network layer machine b data link layer particular network layer b way knowing packet lost duplicated data link layer must guarantee combination transmission errors however unlikely cause duplicate packet delivered network layer consider following scenario network layer gives packet data link layer packet correctly received b passed network layer b b sends acknowledgement frame back acknowledgement frame gets lost completely never arrives life would great deal simpler channel mangled lost data frames control frames sad say channel discriminating data link layer eventually times received acknowledgement incorrectly assumes data frame lost damaged sends frame containing packet duplicate frame also arrives intact data link layer b unwittingly passed network layer sending file b part file duplicated e copy file made b incorrect error detected words protocol fail clearly needed way receiver able distinguish frame seeing first time retransmission obvious way achieve sender put sequence number header frame sends receiver check sequence number arriving frame see new frame duplicate discarded since protocol must correct sequence number field header likely small use link efficiently question arises minimum number bits needed sequence number header might provide bit bits byte multiple bytes sequence number depending protocol important point must carry sequence numbers large enough protocol work correctly much protocol ambiguity protocol frame direct successor frame lost damaged receiver acknowledge sender keep trying send correctly received receiver send acknowledgement sender potential sec elementary data link protocols trouble crops depending upon whether acknowledgement frame gets back sender correctly sender may try send sender event triggers transmission frame arrival acknowledgement frame situation implies correctly received furthermore acknowledgement also correctly received sender otherwise sender would begun let alone considering consequence ambiguity frame immediate predecessor successor predecessor successor bit sequence number therefore sufficient instant time receiver expects particular sequence number next frame containing correct sequence number arrives accepted passed network layer acknowledged expected sequence number incremented modulo e becomes becomes arriving frame containing wrong sequence number rejected duplicate however last valid acknowledgement repeated sender eventually discover frame received example kind protocol shown protocols sender waits positive acknowledgement advancing next data item often called arq automatic repeat request par positive acknowledgement retransmission like protocol one also transmits data one direction protocol differs predecessors sender receiver variable whose value remembered data link layer wait state sender remembers sequence number next frame send next frame send receiver remembers sequence number next frame expected frame expected protocol short initialization phase entering infinite loop transmitting frame sender starts timer running already running reset allow another full timer interval interval chosen allow enough time frame get receiver receiver process worst case acknowledgement frame propagate back sender interval elapsed safe assume either transmitted frame acknowledgement lost send duplicate timeout interval set short sender transmit unnecessary frames extra frames affect correctness protocol hurt performance transmitting frame starting timer sender waits something exciting happen three possibilities exist acknowledgement frame arrives undamaged damaged acknowledgement frame staggers timer expires valid acknowledgement comes sender fetches next packet network layer puts buffer overwriting previous packet also advances sequence number damaged frame arrives 226 data link layer timer expires neither buffer sequence number changed duplicate sent cases contents buffer either next packet duplicate sent valid frame arrives receiver sequence number checked see duplicate accepted passed network layer acknowledgement generated duplicates damaged frames passed network layer cause last correctly received frame acknowledged signal sender advance next frame retransmit damaged frame sliding window protocols previous protocols data frames transmitted one direction practical situations need transmit data directions one way achieving full duplex data transmission run two instances one previous protocols using separate link simplex data traffic different directions link comprised forward channel data reverse channel acknowledgements cases capacity reverse channel almost entirely wasted better idea use link data directions protocols already used transmit frames ways reverse channel normally capacity forward channel model data frames b intermixed acknowledgement frames b looking kind field header incoming frame receiver tell whether frame data acknowledgement although interleaving data control frames link big improvement two separate physical links yet another improvement possible data frame arrives instead immediately sending separate control frame receiver restrains waits network layer passes next packet acknowledgement attached outgoing data frame using ack field frame header effect acknowledgement gets free ride next outgoing data frame technique temporarily delaying outgoing acknowledgements hooked onto next outgoing data frame known piggybacking principal advantage using piggybacking distinct acknowledgement frames better use available channel bandwidth ack field frame header costs bits whereas separate frame would need header acknowledgement checksum addition fewer frames sent generally means lighter processing load receiver next protocol examined piggyback field costs bit frame header rarely costs bits however piggybacking introduces complication present separate acknowledgements long data link layer wait packet onto sec sliding window protocols protocol par allows unidirectional data flow unreliable channel must protocol define max seq typedef enum frame arrival cksum err timeout event type include protocol h void sender3 void seq nr next frame send frame packet buffer event type event next frame send network layer buffer true info buffer seq next frame send physical layer start timer seq wait event event event frame arrival physical layer ack next frame send stop timer ack network layer buffer inc next frame send seq number next outgoing frame scratch variable buffer outbound packet initialize outbound sequence numbers fetch first packet construct frame transmission insert sequence number frame send way answer takes long time frame arrival cksum err timeout get acknowledgement turn timer get next one send invert next frame send void receiver3 void seq nr frame expected frame r event type event frame expected true wait event event event frame arrival physical layer r r seq frame expected network layer r info inc frame expected ack frame expected physical layer possibilities frame arrival cksum err valid frame arrived go get newly arrived frame waiting pass data network layer next time expect sequence nr tell frame acked send acknowledgement positive acknowledgement retransmission protocol 228 data link layer piggyback acknowledgement data link layer waits longer sender timeout period frame retransmitted defeating whole purpose acknowledgements data link layer oracle could foretell future would know next network layer packet going come could decide either wait send separate acknowledgement immediately depending long projected wait going course data link layer foretell future must resort ad hoc scheme waiting fixed number milliseconds new packet arrives quickly acknowledgement piggybacked onto otherwise new packet arrived end time period data link layer sends separate acknowledgement frame next three protocols bidirectional protocols belong class called sliding window protocols three differ among terms efficiency complexity buffer requirements discussed later sliding window protocols outbound frame contains sequence number ranging maximum maximum usually 2n sequence number fits exactly n bit field stop wait sliding window protocol uses n restricting sequence numbers sophisticated versions use arbitrary n essence sliding window protocols instant time sender maintains set sequence numbers corresponding frames permitted send frames said fall within sending window similarly receiver also maintains receiving window corresponding set frames permitted accept sender window receiver window need lower upper limits even size protocols fixed size others grow shrink course time frames sent received although protocols give data link layer freedom order may send receive frames definitely dropped requirement protocol must deliver packets destination network layer order passed data link layer sending machine changed requirement physical communication channel wire like must deliver frames order sent sequence numbers within sender window represent frames sent sent yet acknowledged whenever new packet arrives network layer given next highest sequence number upper edge window advanced one acknowledgement comes lower edge advanced one way window continuously maintains list unacknowledged frames shows example since frames currently within sender window may ultimately lost damaged transit sender must keep frames memory possible retransmission thus maximum window size n sender needs n buffers hold unacknowledged frames window ever grows sec sliding window protocols sender receiver b c sliding window size bit sequence number initially b first frame sent c first frame received first acknowledgement received maximum size sending data link layer must forcibly shut network layer another buffer becomes free receiving data link layer window corresponds frames may accept frame falling within window put receiver buffer frame whose sequence number equal lower edge window received passed network layer window rotated one frame falling outside window discarded cases subsequent acknowledgement generated sender may work proceed note window size means data link layer accepts frames order larger windows network layer contrast always fed data proper order regardless data link layer window size shows example maximum window size initially frames outstanding lower upper edges sender window equal time goes situation progresses shown unlike sender window receiver window always remains initial size rotating next frame accepted delivered network layer one bit sliding window protocol tackling general case let us examine sliding window protocol window size protocol uses stop wait since sender transmits frame waits acknowledgement sending next one 230 data link layer depicts protocol like others starts defining variables next frame send tells frame sender trying send similarly frame expected tells frame receiver expecting cases possibilities protocol sliding window bidirectional must protocol define max seq typedef enum frame arrival cksum err timeout event type include protocol h void protocol4 void seq nr next frame send seq nr frame expected frame r scratch variables packet buffer current packet sent event type event next frame outbound stream next frame send frame expected next frame expected fetch packet network layer network layer buffer info buffer prepare send initial frame insert sequence number frame seq next frame send piggybacked ack ack frame expected transmit frame physical layer start timer running start timer seq true frame arrival cksum err timeout wait event event frame arrived undamaged event frame arrival go get physical layer r handle inbound frame stream r seq frame expected pass packet network layer network layer r info invert seq number expected next inc frame expected r ack next frame send stop timer r ack network layer buffer inc next frame send info buffer seq next frame send ack frame expected physical layer start timer seq handle outbound frame stream turn timer fetch new pkt network layer invert sender sequence number construct outbound frame insert sequence number seq number last received frame transmit frame start timer running bit sliding window protocol sec sliding window protocols normal circumstances one two data link layers goes first transmits first frame words one data link layer programs contain physical layer start timer procedure calls outside main loop starting machine fetches first packet network layer builds frame sends frame arrives receiving data link layer checks see duplicate protocol frame one expected passed network layer receiver window slid acknowledgement field contains number last frame received without error number agrees sequence number frame sender trying send sender knows done frame stored buffer fetch next packet network layer sequence number disagrees must continue trying send frame whenever frame received frame also sent back let us examine protocol see resilient pathological scenarios assume computer trying send frame computer b b trying send frame suppose sends frame b timeout interval little short consequently may time repeatedly sending series identical frames seq ack first valid frame arrives computer b accepted frame expected set value subsequent frames received rejected b expecting frames sequence number furthermore since duplicates ack b still waiting acknowledgement b go fetch new packet network layer every rejected duplicate comes b send frame containing seq ack eventually one arrive correctly causing begin sending next packet combination lost frames premature timeouts cause protocol deliver duplicate packets either network layer skip packet deadlock protocol correct however show subtle protocol interactions note peculiar situation arises sides simultaneously send initial packet synchronization difficulty illustrated part normal operation protocol shown b peculiarity illustrated b waits first frame sending one sequence shown every frame accepted however b simultaneously initiate communication first frames cross data link layers get situation b frame arrival brings new packet network layer duplicates b half frames contain duplicates even though transmission errors similar situations occur result premature timeouts even one side clearly starts first fact multiple premature timeouts occur frames may sent three times wasting valuable bandwidth 232 data link layer sends a0 sends a0 b sends b0 b gets a0 b sends b0 b gets a0 b sends b0 gets b0 sends a1 gets b0 sends a0 b gets a1 b sends b1 b gets a0 b sends b1 gets b1 sends a2 gets b0 sends a1 b gets a2 b sends b2 gets b2 sends a3 gets b1 sends a1 b gets a3 b sends b3 b gets a1 b sends b1 time b gets a1 b sends b2 b two scenarios protocol normal case b abnormal case notation seq ack packet number asterisk indicates network layer accepts packet protocol using go back n made tacit assumption transmission time required frame arrive receiver plus transmission time acknowledgement come back negligible sometimes assumption clearly false situations long round trip time important implications efficiency bandwidth utilization example consider kbps satellite channel msec round trip propagation delay let us imagine trying use protocol send bit frames via satellite sender starts sending first frame msec frame completely sent msec frame fully arrived receiver msec acknowledgement arrived back sender best circumstances waiting receiver short acknowledgement frame means sender blocked 520 time words available bandwidth used clearly combination long transit time high bandwidth short frame length disastrous terms efficiency problem described viewed consequence rule requiring sender wait acknowledgement sending another frame relax restriction much better efficiency achieved basically solution lies allowing sender transmit w frames blocking instead large enough choice w sender able continuously transmit frames since acknowledgements arrive previous frames window becomes full preventing sender blocking sec sliding window protocols find appropriate value w need know many frames fit inside channel propagate sender receiver capacity determined bandwidth bits sec multiplied one way transit time bandwidth delay product link divide quantity number bits frame express number frames call quantity bd w set 2bd twice bandwidth delay number frames outstanding sender continuously sends frames round trip time receive acknowledgement considered acknowledgement frame sent complete frame received example link bandwidth kbps one way transit time msec bandwidth delay product kbit frames bits 2bd frames assume sender begins sending frame sends new frame every msec time finished sending frames msec acknowledgement frame arrived thereafter acknowledgements arrive every msec sender always get permission continue needs onwards unacknowledged frames always outstanding put terms sender maximum window size smaller window sizes utilization link less since sender blocked sometimes write utilization fraction time sender blocked link utilization w 2bd value upper bound allow frame processing time treats acknowledgement frame zero length since usually short equation shows need large window w whenever bandwidth delay product large delay high sender rapidly exhaust window even moderate bandwidth satellite example bandwidth high even moderate delay sender exhaust window quickly unless large window e g gbps link msec delay holds megabit stop wait w even one frame worth propagation delay efficiency less technique keeping multiple frames flight example pipelining pipelining frames unreliable communication channel raises serious issues first happens frame middle long stream damaged lost large numbers succeeding frames arrive receiver sender even finds anything wrong damaged frame arrives receiver obviously discarded receiver correct frames following remember receiving data link layer obligated hand packets network layer sequence 234 data link layer two basic approaches available dealing errors presence pipelining shown timeout interval e error k3 k6 ac ac k7 ac k5 ac k4 ac k2 ac ac k0 ac k1 frames discarded data link layer time error ac k1 ac k1 k1 k1 k8 k6 ac ac ac ac e ac k2 ac na ac k7 k5 ac ac k1 k0 k9 frames buffered data link layer b pipelining error recovery effect error receiver window size b receiver window size large one option called go back n receiver simply discard subsequent frames sending acknowledgements discarded frames strategy corresponds receive window size words data link layer refuses accept frame except next one must give network layer sender window fills timer runs pipeline begin empty eventually sender time retransmit unacknowledged frames order starting damaged lost one approach waste lot bandwidth error rate high b see go back n case receiver window large frames correctly received acknowledged frame however damaged lost sender unaware problem continues send frames timer frame expires backs frame starts sending etc general strategy handling errors frames pipelined called selective repeat used bad frame received discarded good frames received accepted buffered sender times oldest unacknowledged frame retransmitted frame sec sliding window protocols arrives correctly receiver deliver network layer sequence frames buffered selective repeat corresponds receiver window larger approach require large amounts data link layer memory window large selective repeat often combined receiver send negative acknowledgement nak detects error example receives checksum error frame sequence naks stimulate retransmission corresponding timer expires thus improve performance b frames correctly received acknowledged frame lost frame arrives receiver data link layer notices missed frame sends back nak buffers frames arrive buffered data link layer instead passed network layer eventually nak gets back sender immediately resends frame arrives data link layer pass network layer correct order also acknowledge frames including shown figure nak get lost eventually sender time frame send accord may quite later two alternative approaches trade offs efficient use bandwidth data link layer buffer space depending resource scarcer one used shows go back n protocol receiving data link layer accepts frames order frames following error discarded protocol first time dropped assumption network layer always infinite supply packets send network layer packet wants send cause network layer ready event happen however enforce flow control limit sender window number unacknowledged frames may outstanding time data link layer must able keep network layer bothering work library procedures enable network layer disable network layer job maximum number frames may outstanding instant size sequence number space go back n max seq frames may outstanding instant even though max seq distinct sequence numbers max seq see even tighter restriction next protocol selective repeat see restriction required consider following scenario max seq sender sends frames piggybacked acknowledgement comes back sender sender sends another eight frames sequence numbers another piggybacked acknowledgement frame comes 236 data link layer protocol go back n allows multiple outstanding frames sender may transmit max seq frames without waiting ack addition unlike previous protocols network layer assumed new packet time instead network layer causes network layer ready event packet send define max seq typedef enum frame arrival cksum err timeout network layer ready event type include protocol h static boolean seq nr seq nr b seq nr c return true b c circularly false otherwise b b c c b b c c return true else return false static void send data seq nr frame nr seq nr frame expected packet buffer construct send data frame frame scratch variable insert packet frame info buffer frame nr insert sequence number frame seq frame nr ack frame expected max seq max seq piggyback ack transmit frame physical layer start timer running start timer frame nr void protocol5 void seq nr next frame send seq nr ack expected seq nr frame expected frame r packet buffer max seq seq nr nbuffered seq nr event type event max seq used outbound stream oldest frame yet unacknowledged next frame expected inbound stream scratch variable buffers outbound stream number output buffers currently use used index buffer array enable network layer ack expected next frame send frame expected nbuffered allow network layer ready events next ack expected inbound next frame going number frame expected inbound initially packets buffered true wait event event four possibilities see event type sec sliding window protocols switch event network layer packet send case network layer ready accept save transmit new frame network layer buffer next frame send fetch new packet nbuffered nbuffered expand sender window send data next frame send frame expected buffer transmit frame advance sender upper window edge inc next frame send break case frame arrival physical layer r data control frame arrived get incoming frame physical layer r seq frame expected frames accepted order pass packet network layer network layer r info advance lower edge receiver window inc frame expected ack n implies n n etc check ack expected r ack next frame send handle piggybacked ack nbuffered nbuffered one frame fewer buffered frame arrived intact stop timer stop timer ack expected contract sender window inc ack expected break case cksum err break ignore bad frames case timeout trouble retransmit outstanding frames start retransmitting next frame send ack expected nbuffered send data next frame send frame expected buffer resend frame prepare send next one inc next frame send nbuffered max seq enable network layer else disable network layer sliding window protocol using go back n question eight frames belonging second batch arrive successfully eight get lost counting discards following error lost cases receiver would sending frame acknowledgement 238 data link layer sender way telling reason maximum number outstanding frames must restricted max seq although protocol buffer frames arriving error escape problem buffering altogether since sender may retransmit unacknowledged frames future time must hang transmitted frames knows sure accepted receiver acknowledgement comes frame n frames n n also automatically acknowledged type acknowledgement called cumulative acknowledgement property especially important previous acknowledgement bearing frames lost garbled whenever acknowledgement comes data link layer checks see buffers released buffers released e room available window previously blocked network layer allowed cause network layer ready events protocol assume always reverse traffic piggyback acknowledgements protocol need assumption since sends back one frame every time receives frame even already sent frame next protocol solve problem one way traffic elegant way protocol multiple outstanding frames logically needs multiple timers one per outstanding frame frame times independently ones however timers easily simulated software using single hardware clock causes interrupts periodically pending timeouts form linked list node list containing number clock ticks timer expires frame timed pointer next node real time 00 000 00 005 pointer next timeout frame timed ticks go b simulation multiple timers software queued timeouts b situation first timeout expired illustration timers could implemented consider example assume clock ticks every msec initially sec sliding window protocols real time 00 000 three timeouts pending 00 005 00 013 00 019 every time hardware clock ticks real time updated tick counter head list decremented tick counter becomes zero timeout caused node removed list shown b although organization requires list scanned start timer stop timer called require much work per tick protocol routines given parameter indicating frame timed protocol using selective repeat go back n protocol works well errors rare line poor wastes lot bandwidth retransmitted frames alternative strategy selective repeat protocol allow receiver accept buffer frames following damaged lost one protocol sender receiver maintain window outstanding acceptable sequence numbers respectively sender window size starts grows predefined maximum receiver window contrast always fixed size equal predetermined maximum receiver buffer reserved sequence number within fixed window associated buffer bit arrived telling whether buffer full empty whenever frame arrives sequence number checked function see falls within window already received accepted stored action taken without regard whether frame contains next packet expected network layer course must kept within data link layer passed network layer lower numbered frames already delivered network layer correct order protocol using algorithm given nonsequential receive introduces constraints frame sequence numbers compared protocols frames accepted order illustrate trouble easily example suppose bit sequence number sender permitted transmit seven frames required wait acknowledgement initially sender receiver windows shown sender transmits frames receiver window allows accept frame sequence number inclusive seven frames arrive correctly receiver acknowledges advances window allow receipt shown b seven buffers marked empty point disaster strikes form lightning bolt hitting telephone pole wiping acknowledgements protocol operate correctly despite disaster sender eventually times retransmits frame frame arrives receiver check made see falls within receiver window unfortunately b frame 240 data link layer protocol selective repeat accepts frames order passes packets network layer order associated outstanding frame timer timer expires frame retransmitted outstanding frames protocol n define max seq define nr bufs max seq typedef enum frame arrival cksum err timeout network layer ready ack timeout event type include protocol h nak sent yet boolean nak true initial value simulator seq nr oldest frame max seq static boolean seq nr seq nr b seq nr c protocol shorter obscure return b b c c b b c c static void send frame frame kind fk seq nr frame nr seq nr frame expected packet buffer construct send data ack nak frame frame scratch variable kind fk kind data ack nak fk data info buffer frame nr nr bufs meaningful data frames seq frame nr ack frame expected max seq max seq one nak per frame please fk nak nak false transmit frame physical layer fk data start timer frame nr nr bufs need separate ack frame stop ack timer void protocol6 void seq nr ack expected seq nr next frame send seq nr frame expected seq nr far int frame r packet buf nr bufs packet buf nr bufs boolean arrived nr bufs seq nr nbuffered event type event enable network layer ack expected next frame send frame expected far nr bufs nbuffered nr bufs arrived false lower edge sender window upper edge sender window lower edge receiver window upper edge receiver window index buffer pool scratch variable buffers outbound stream buffers inbound stream inbound bit map many output buffers currently used initialize next ack expected inbound stream number next outgoing frame initially packets buffered sec sliding window protocols true five possibilities see event type wait event event switch event accept save transmit new frame case network layer ready nbuffered nbuffered expand window network layer buf next frame send nr bufs fetch new packet send frame data next frame send frame expected buf transmit frame advance upper window edge inc next frame send break data control frame arrived case frame arrival fetch incoming frame physical layer physical layer r r kind data undamaged frame arrived r seq frame expected nak send frame nak frame expected buf else start ack timer frame expected r seq far arrived r seq nr bufs false frames may accepted order mark buffer full arrived r seq nr bufs true insert data buffer buf r seq nr bufs r info arrived frame expected nr bufs pass frames advance window network layer buf frame expected nr bufs nak true arrived frame expected nr bufs false advance lower edge receiver window inc frame expected advance upper edge receiver window inc far see separate ack needed start ack timer r kind nak ack expected r ack max seq next frame send send frame data r ack max seq frame expected buf ack expected r ack next frame send nbuffered nbuffered handle piggybacked ack frame arrived intact stop timer ack expected nr bufs advance lower edge sender window inc ack expected break case cksum err nak send frame nak frame expected buf damaged frame break case timeout send frame data oldest frame frame expected buf timed break case ack timeout ack timer expired send ack send frame ack frame expected buf nbuffered nr bufs enable network layer else disable network layer sliding window protocol using selective repeat 242 data link layer within new window accepted new frame receiver also sends piggybacked acknowledgement frame since received sender happy learn transmitted frames actually arrive correctly advances window immediately sends frames frame accepted receiver packet passed directly network layer immediately thereafter receiving data link layer checks see valid frame already discovers passes old buffered packet network layer new packet consequently network layer gets incorrect packet protocol fails essence problem receiver advanced window new range valid sequence numbers overlapped old one consequently following batch frames might either duplicates acknowledgements lost new ones acknowledgements received poor receiver way distinguishing two cases way dilemma lies making sure receiver advanced window overlap original window ensure overlap maximum window size half range sequence numbers situation shown c bits sequence numbers range four unacknowledged frames outstanding instant way receiver accepted frames advanced window permit acceptance frames unambiguously tell subsequent frames retransmissions new ones general window size protocol max seq interesting question many buffers must receiver conditions ever accept frames whose sequence numbers lower edge window frames whose sequence numbers upper edge window consequently number buffers needed equal window size range sequence numbers preceding example bit sequence number four buffers numbered needed frame arrives put buffer mod notice although mod competing buffer never within window time would imply window size least reason number timers needed equal number buffers size sequence space effectively timer associated buffer timer runs contents buffer retransmitted protocol also relaxes implicit assumption channel heavily loaded made assumption protocol relied frames sent reverse direction piggyback acknowledgements reverse traffic light acknowledgements may held long period time cause problems extreme lot traffic one sec sliding window protocols sender 3 7 3 7 3 7 3 7 receiver 3 7 3 7 3 7 3 7 b c initial situation window size7 b frames sent received acknowledged c initial situation window size frames sent received acknowledged direction traffic direction protocol block sender window reaches maximum relax assumption auxiliary timer started start ack timer sequence data frame arrives reverse traffic presented timer expires separate acknowledgement frame sent interrupt due auxiliary timer called ack timeout event arrangement traffic flow one direction possible lack reverse data frames onto acknowledgements piggybacked longer obstacle one auxiliary timer exists start ack timer called timer running effect timer reset extended since purpose provide minimum rate acknowledgements essential timeout associated auxiliary timer appreciably shorter timeout used timing data frames condition required ensure correctly received frame acknowledged early enough frame retransmission timer expire retransmit frame protocol uses efficient strategy protocol dealing errors whenever receiver reason suspect error occurred sends negative acknowledgement nak frame back sender frame request retransmission frame specified nak two cases receiver suspicious damaged frame arrives frame expected one arrives potential lost frame avoid making multiple requests retransmission lost frame receiver keep track whether nak already sent given frame variable nak protocol true nak sent yet frame expected nak gets mangled lost real harm done since sender eventually time retransmit missing frame anyway wrong frame arrives nak sent lost nak true auxiliary timer started expires ack sent resynchronize sender receiver current status 244 data link layer situations time required frame propagate destination processed acknowledgement come back nearly constant situations sender adjust timer tight slightly larger normal time interval expected sending frame receiving acknowledgement naks useful case however situations time highly variable example reverse traffic sporadic time acknowledgement shorter reverse traffic longer sender faced choice either setting interval small value risking unnecessary retransmissions setting large value going idle long period error choices waste bandwidth general standard deviation acknowledgement interval large compared interval timer set loose conservative naks appreciably speed retransmission lost damaged frames closely related matter timeouts naks question determining frame caused timeout protocol always ack expected always oldest protocol trivial way determine timed suppose frames transmitted meaning list outstanding frames order oldest youngest imagine times new frame transmitted times times another new frame transmitted point list outstanding frames oldest youngest inbound traffic e acknowledgement bearing frames lost seven outstanding frames time order keep example getting even complicated already shown timer administration instead assume variable oldest frame set upon timeout indicate frame timed example data link protocols within single building lans widely used interconnection wide area network infrastructure built point point lines chap look lans examine data link protocols found point point lines internet two common situations first situation packets sent sonet optical fiber links wide area networks links widely used example connect routers different locations isp network second situation adsl links running local loop telephone network edge internet links connect millions individuals businesses internet internet needs point point links uses well dial modems leased lines cable modems standard protocol called ppp sec example data link protocols point point protocol used send packets links ppp defined rfc elaborated rfc rfcs simpson 1994a 1994b sonet adsl links apply ppp different ways packet sonet sonet covered sec physical layer protocol commonly used wide area optical fiber links make backbone communications networks including telephone system provides bitstream runs well defined rate example gbps oc link bitstream organized fixed size byte payloads recur every sec whether user data send carry packets across links framing mechanism needed distinguish occasional packets continuous bitstream transported ppp runs ip routers provide mechanism shown router ip packet ip ip ppp ppp sonet optical fiber sonet ppp frame sonet payload sonet payload b packet sonet protocol stack b frame relationships ppp improves earlier simpler protocol called slip serial line internet protocol used handle error detection link configuration support multiple protocols permit authentication wide set options ppp provides three main features framing method unambiguously delineates end one frame start next one frame format also handles error detection link control protocol bringing lines testing negotiating options bringing gracefully longer needed protocol called lcp link control protocol way negotiate network layer options way independent network layer protocol used method chosen different ncp network control protocol network layer supported 246 data link layer ppp frame format chosen closely resemble frame format hdlc high level data link control widely used instance earlier family protocols since need reinvent wheel primary difference ppp hdlc ppp byte oriented rather bit oriented particular ppp uses byte stuffing frames integral number bytes hdlc uses bit stuffing allows frames say 25 bytes second major difference practice however hdlc provides reliable transmission sliding window acknowledgements timeouts manner studied ppp also provide reliable transmission noisy environments wireless networks exact details defined rfc however rarely done practice instead unnumbered mode nearly always used internet provide connectionless unacknowledged service ppp frame format shown ppp frames begin standard hdlc flag byte 0x7e flag byte stuffed occurs within payload field using escape byte 0x7d following byte escaped byte xored 0x20 flips 5th bit example 0x7d 0x5e escape sequence flag byte 0x7e means start end frames searched simply scanning byte 0x7e since occur elsewhere destuffing rule receiving frame look 0x7d remove xor following byte 0x20 also one flag byte needed frames multiple flag bytes used fill link frames sent start frame flag byte comes address field field always set binary value indicate stations accept frame using value avoids issue assign data link addresses bytes variable flag address control protocol payload checksum flag ppp full frame format unnumbered mode operation address field followed control field default value value indicates unnumbered frame since address control fields always constant default configuration lcp provides necessary mechanism two parties negotiate option omit altogether save bytes per frame fourth ppp field protocol field job tell kind packet payload field codes starting bit defined ip version ip version network layer protocols might used ipx sec example data link protocols appletalk codes starting bit used ppp configuration protocols including lcp different ncp network layer protocol supported default size protocol field bytes negotiated byte using lcp designers perhaps overly cautious thinking someday might protocols use payload field variable length negotiated maximum length negotiated using lcp line setup default length bytes used padding may follow payload needed payload field comes checksum field normally bytes byte checksum negotiated byte checksum fact bit crc whose generator polynomial given end sec 2byte checksum also industry standard crc ppp framing mechanism carry packets multiple protocols many types physical layers use ppp sonet choices make spelled rfc malis simpson byte checksum used since primary means detecting transmission errors physical link network layers recommended address control protocol fields compressed since sonet links already run relatively high rates also one unusual feature ppp payload scrambled described sec inserted sonet payload scrambling xors payload long pseudorandom sequence transmitted issue sonet bitstream needs frequent bit transitions synchronization transitions come naturally variation voice signals data communication user chooses information sent might send packet long run 0s scrambling likelihood user able cause problems sending long run 0s made extremely low ppp frames carried sonet lines ppp link must established configured phases link goes brought used taken shown link starts dead state means connection physical layer physical layer connection established link moves establish point ppp peers exchange series lcp packets carried payload field ppp frame select ppp options link possibilities mentioned initiating peer proposes options responding peer either accepts rejects whole part responder also make alternative proposals lcp option negotiation successful link reaches authenticate state two parties check identities desired authentication successful network state entered series ncp packets sent configure network layer difficult generalize ncp protocols one specific network layer protocol allows configuration requests made specific protocol 248 data link layer carrier detected sides agree options establish authentication successful authenticate failed dead failed terminate carrier dropped done network open ncp configuration state diagram bringing ppp link ip example assignment ip addresses ends link important possibility open reached data transport take place state ip packets carried ppp frames across sonet line data transport finished link moves terminate state moves back dead state physical layer connection dropped adsl asymmetric digital subscriber loop adsl connects millions home subscribers internet megabit sec rates telephone local loop used plain old telephone service sec described device called dsl modem added home side sends bits local loop device called dslam dsl access multiplexer pronounced dee slam telephone company local office explore detail packets carried adsl links overall picture protocols devices used adsl shown different protocols deployed different networks chosen show popular scenario inside home computer pc sends ip packets dsl modem using link layer like ethernet dsl modem sends ip packets local loop dslam using protocols study dslam router connected depending implementation ip packets extracted enter isp network may reach destination internet protocols shown adsl link start bottom adsl physical layer based digital modulation scheme called sec example data link protocols ip ppp pc ethernet ethernet ip aal5 atm atm local loop dslam router ppp aal5 adsl customer home dsl modem link internet adsl isp office adsl protocol stacks orthogonal frequency division multiplexing also known discrete multitone saw sec near top stack ip network layer ppp protocol ppp studied packet sonet transports works way establish configure link carry ip packets adsl ppp atm aal5 new protocols seen atm asynchronous transfer mode designed early 1990s launched incredible hype promised network technology would solve world telecommunications problems merging voice data cable television telegraph carrier pigeon tin cans connected strings tom toms everything else integrated system could everything everyone happen large part problems atm similar described concerning osi protocols bad timing technology implementation politics nevertheless atm much successful osi taken world remains widely used niches including broadband access lines dsl wan links inside telephone networks atm link layer based transmission fixed length cells information asynchronous name means cells always need sent way bits continuously sent synchronous lines sonet cells need sent information carry atm connection oriented technology cell carries virtual circuit identifier header devices use identifier forward cells along paths established connections cells bytes long consisting byte payload plus byte header using small cells atm flexibly divide bandwidth physical layer link among different users fine slices ability useful example sending voice data one link without long data packets would cause large variations delay voice samples unusual choice cell length e g compared natural choice 250 data link layer power indication political design atm byte size payload compromise resolve deadlock europe wanted byte cells u wanted byte cells brief overview atm given siu jain send data atm network needs mapped sequence cells mapping done atm adaptation layer process called segmentation reassembly several adaptation layers defined different services ranging periodic voice samples packet data main one used packet data aal5 atm adaptation layer aal5 frame shown instead header trailer gives length byte crc error detection naturally crc one used ppp ieee lans like ethernet wang crowcroft shown strong enough detect nontraditional errors cell reordering well payload aal5 frame padding rounds overall length multiple bytes frame evenly divided cells addresses needed frame virtual circuit identifier carried cell get right destination bytes variable ppp protocol ppp payload pad unused length crc aal5 payload aal5 trailer aal5 frame carrying ppp data described atm describe ppp makes use atm case adsl done yet another standard called pppoa ppp atm standard really protocol appear specification work ppp aal5 frames described rfc gross et al ppp protocol payload fields placed aal5 payload shown protocol field indicates dslam far end whether payload ip packet packet another protocol lcp far end knows cells contain ppp information atm virtual circuit set purpose within aal5 frame ppp framing needed would serve purpose atm aal5 already provide framing framing would worthless ppp crc also needed aal5 already includes crc error detection mechanism supplements adsl physical layer coding reed solomon code error correction byte crc detection remaining errors otherwise caught scheme much sophisticated error recovery mechanism packets sent sonet line adsl much noisier channel sec summary summary task data link layer convert raw bit stream offered physical layer stream frames use network layer link layer present stream varying levels reliability ranging connectionless unacknowledged service reliable connection oriented service various framing methods used including byte count byte stuffing bit stuffing data link protocols provide error control detect correct damaged frames retransmit lost frames prevent fast sender overrunning slow receiver data link protocol also provide flow control sliding window mechanism widely used integrate error control flow control simple way window size packet protocol stop wait codes error correction detection add redundant information messages using variety mathematical techniques convolutional codes reed solomon codes widely deployed error correction low density parity check codes increasing popularity codes error detection used practice include cyclic redundancy checks checksums codes applied link layer well physical layer higher layers examined series protocols provide reliable link layer using acknowledgements retransmissions arq automatic repeat request realistic assumptions starting error free environment receiver handle frame sent introduced flow control followed error control sequence numbers stop wait algorithm used sliding window algorithm allow bidirectional communication introduce concept piggybacking last two protocols pipeline transmission multiple frames prevent sender blocking link long propagation delay receiver either discard frames next one sequence buffer order frames send negative acknowledgements greater bandwidth efficiency former strategy go back n protocol latter strategy selective repeat protocol internet uses ppp main data link protocol point point lines provides connectionless unacknowledged service using flag bytes delimit frames crc error detection used carry packets across range links including sonet links wide area networks adsl links home problems upper layer packet split frames chance arriving undamaged error control done data link protocol many times must message sent average get entire thing 252 data link layer following character encoding used data link protocol b flag esc show bit sequence transmitted binary four character frame b esc flag following framing methods used byte count b flag bytes byte stuffing c starting ending flag bytes bit stuffing following data fragment occurs middle data stream bytestuffing algorithm described text used b esc c esc flag flag output stuffing maximum overhead byte stuffing algorithm one classmates scrooge pointed wasteful end frame flag byte begin next one second flag byte one flag byte could job well byte saved byte earned agree bit string needs transmitted data link layer string actually transmitted bit stuffing think circumstances open loop protocol e g hamming code might preferable feedback type protocols discussed throughout chapter provide reliability single parity bit give error detecting coding scheme uses one parity bit checking odd numbered bits second parity bit even numbered bits hamming distance code sixteen bit messages transmitted using hamming code many check bits needed ensure receiver detect correct single bit errors show bit pattern transmitted message assume even parity used hamming code bit hamming code whose hexadecimal value 0xe4f arrives receiver original value hexadecimal assume bit error one way detecting errors transmit data block n rows k bits per row add parity bits row column bitin lower right corner parity bit checks row column scheme detect single errors double errors triple errors show scheme detect four bit errors suppose data transmitted blocks sizes bits maximum error rate error detection retransmission mechanism parity bit per block better using hamming code assume bit errors independent one another bit error occurs retransmission block bits n rows k columns uses horizontal vertical parity bits error detection suppose exactly bits inverted due transmission errors derive expression probability error undetected chap problems using convolutional coder output sequence input sequence left right internal state initially zero suppose message 1100 0011 transmitted using internet checksum bit word value checksum remainder obtained dividing x x generator polynomial x bit stream transmitted using standard crc method described text generator polynomial x show actual bit string transmitted suppose third bit left inverted transmission show error detected receiver end give example bit errors bit string transmitted detected receiver bit message sent contains data bits crc bits crc computed using ieee standardized degree crc polynomial following explain whether errors message transmission detected receiver single bit error b two isolated bit errors c isolated bit errors isolated bit errors e bit long burst error f bit long burst error discussion arq protocol section scenario outlined resulted receiver accepting two copies frame due loss acknowledgement frame possible receiver may accept multiple copies frame none frames message acknowledgement lost channel bit rate kbps propagation delay msec range frame sizes stop wait give efficiency least protocol possible sender start timer already running might occur impossible km long t1 trunk used transmit byte frames using protocol propagation speed sec km many bits sequence numbers imagine sliding window protocol using many bits sequence numbers wraparound never occurs relations must hold among four window edges window size constant sender receiver procedure protocol checked condition b c instead condition b c would effect protocol correctness efficiency explain answer protocol data frame arrives check made see sequence number differs one expected nak true conditions hold nak sent otherwise auxiliary timer started suppose else clause omitted would change affect protocol correctness 254 data link layer suppose three statement loop near end protocol removed code would affect correctness protocol performance explain answer distance earth distant planet approximately channel utilization stop wait protocol used frame transmission mbps point point link assume frame size kb speed light previous problem suppose sliding window protocol used instead send window size link utilization may ignore protocol processing times sender receiver protocol code frame arrival section used naks section invoked incoming frame nak another condition met give scenario presence condition essential consider operation protocol mbps perfect e error free line maximum frame size bits new packets generated second apart timeout interval msec special acknowledgement timer eliminated unnecessary timeouts would occur many times would average message transmitted protocol max seq 2n condition obviously desirable make efficient use header bits demonstrated essential protocol work correctly max seq example frames bits sent mbps channel using geostationary satellite whose propagation time earth msec acknowledgements always piggybacked onto data frames headers short three bit sequence numbers used maximum achievable channel utilization stop wait b protocol c protocol compute fraction bandwidth wasted overhead headers retransmissions protocol heavily loaded kbps satellite channel data frames consisting header data bits assume signal propagation time earth satellite msec ack frames never occur nak frames bits error rate data frames error rate nak frames negligible sequence numbers bits consider error free kbps satellite channel used send byte data frames one direction short acknowledgements coming back way maximum throughput window sizes earth satellite propagation time msec km long cable runs t1 data rate propagation speed cable speed light vacuum many bits fit cable give least one reason ppp uses byte stuffing instead bit stuffing prevent accidental flag bytes within payload causing confusion chap problems minimum overhead send ip packet using ppp count overhead introduced ppp ip header overhead maximum overhead byte ip packet transmitted local loop using adsl protocol stack many atm cells transmitted briefly describe contents goal lab exercise implement error detection mechanism using standard crc algorithm described text write two programs generator verifier generator program reads standard input line ascii text containing n bit message consisting string 0s 1s second line kbit polynomial also ascii outputs standard output line ascii text n k 0s 1s representing message transmitted outputs polynomial read verifier program reads output generator program outputs message indicating whether correct finally write program alter inverts bit first line depending argument bit number counting leftmost bit copies rest two lines correctly typing generator file verifier see message correct typing generator file alter arg verifier get error message page intentionally left blank 4 medium access control sublayer network links divided two categories using point point connections using broadcast channels studied point point links chap chapter deals broadcast links protocols broadcast network key issue determine gets use channel competition make point consider conference call six people six different telephones connected one hear talk others likely one stops speaking two start talking leading chaos face face meeting chaos avoided external means example meeting people raise hands request permission speak single channel available much harder determine go next many protocols solving problem known form contents chapter literature broadcast channels sometimes referred multiaccess channels random access channels protocols used determine goes next multiaccess channel belong sublayer data link layer called mac medium access control sublayer mac sublayer especially important lans particularly wireless ones wireless naturally broadcast channel wans contrast use point point links except satellite networks multiaccess channels lans closely related chapter discuss lans 258 medium access control sublayer general including issues strictly part mac sublayer main subject control channel technically mac sublayer bottom part data link layer logically studied examining point point protocols chap nevertheless people easier understand protocols involving multiple parties two party protocols well understood reason deviated slightly strict bottom order presentation channel allocation problem central theme chapter allocate single broadcast channel among competing users channel might portion wireless spectrum geographic region single wire optical fiber multiple nodes connected matter cases channel connects user users user makes full use channel interferes users also wish use channel first look shortcomings static allocation schemes bursty traffic lay key assumptions used model dynamic schemes examine following sections static channel allocation traditional way allocating single channel telephone trunk among multiple competing users chop capacity using one multiplexing schemes described sec fdm frequency division multiplexing n users bandwidth divided n equal sized portions user assigned one portion since user private frequency band interference among users small constant number users steady stream heavy load traffic division simple efficient allocation mechanism wireless example fm radio stations station gets portion fm band uses time broadcast signal however number senders large varying traffic bursty fdm presents problems spectrum cut n regions fewer n users currently interested communicating large piece valuable spectrum wasted n users want communicate denied permission lack bandwidth even users assigned frequency band hardly ever transmit receive anything even assuming number users could somehow held constant n dividing single available channel number static subchannels sec channel allocation problem inherently inefficient basic problem users quiescent bandwidth simply lost using one else allowed use either static allocation poor fit computer systems data traffic extremely bursty often peak traffic mean traffic ratios consequently channels idle time poor performance static fdm easily seen simple queueing theory calculation let us start finding mean time delay send frame onto channel capacity c bps assume frames arrive randomly average arrival rate frames sec frames vary length average length bits parameters service rate channel c frames sec standard queueing theory result c curious result queue requires randomness times frame arrivals frame lengths follow exponential distribution equivalently result poisson process example c mbps mean frame length 000 bits frame arrival rate frames sec sec note ignored queueing delay asked long takes send 000bit frame mbps network would get incorrect answer sec result holds contention channel let us divide single channel n independent subchannels capacity c n bps mean input rate subchannels n recomputing get tn n nt c c n n mean delay divided channel n times worse frames somehow magically arranged orderly big central queue result says bank lobby full atm machines better single queue feeding machines separate queue front machine precisely arguments apply fdm also apply ways statically dividing channel use time division multiplexing tdm allocate user every nth time slot user use allocated slot would lie fallow would hold split networks physically using previous example replace mbps network networks mbps statically allocate user one mean delay would jump sec msec since none traditional static channel allocation methods work well bursty traffic explore dynamic methods 260 medium access control sublayer assumptions dynamic channel allocation get first many channel allocation methods chapter worthwhile carefully formulate allocation problem underlying work done area following five key assumptions independent traffic model consists n independent stations e g computers telephones program user generates frames transmission expected number frames generated interval length constant arrival rate new frames frame generated station blocked nothing frame successfully transmitted single channel single channel available communication stations transmit receive stations assumed equally capable though protocols may assign different roles e g priorities observable collisions two frames transmitted simultaneously overlap time resulting signal garbled event called collision stations detect collision occurred collided frame must transmitted later errors generated collisions occur continuous slotted time time may assumed continuous case frame transmission begin instant alternatively time may slotted divided discrete intervals called slots frame transmissions must begin start slot slot may contain frames corresponding idle slot successful transmission collision respectively carrier sense carrier sense carrier sense assumption stations tell channel use trying use station attempt use channel sensed busy carrier sense stations sense channel trying use go ahead transmit later determine whether transmission successful discussion assumptions order first one says frame arrivals independent across stations particular station frames generated unpredictably constant rate actually assumption particularly good model network traffic well known packets come bursts range time scales paxson floyd leland et al nonetheless poisson models frequently called useful mathematically tractable help us analyze sec channel allocation problem protocols understand roughly performance changes operating range compares designs single channel assumption heart model external ways communicate exist stations raise hands request teacher call come better solutions remaining three assumptions depend engineering system say assumptions hold examine particular protocol collision assumption basic stations need way detect collisions retransmit frames rather let lost wired channels node hardware designed detect collisions occur stations terminate transmissions prematurely avoid wasting capacity detection much harder wireless channels collisions usually inferred fact lack expected acknowledgement frame also possible frames involved collision successfully received depending details signals receiving hardware however situation common case assume frames involved collision lost also see protocols designed prevent collisions occurring first place reason two alternative assumptions time slotted time used improve performance however requires stations follow master clock synchronize actions divide time discrete intervals hence always available discuss analyze systems kinds time given system one holds similarly network may carrier sensing wired networks generally carrier sense wireless networks always use effectively every station may within radio range every station similarly carrier sense available settings station communicate directly stations example cable modem stations must communicate via cable headend note word carrier sense refers signal channel nothing common carriers e g telephone companies date back days pony express avoid misunderstanding worth noting multiaccess protocol guarantees reliable delivery even absence collisions receiver may copied frame incorrectly various reasons parts link layer higher layers provide reliability multiple access protocols many algorithms allocating multiple access channel known following sections study small sample interesting ones give examples commonly used practice 262 medium access control sublayer aloha story first mac starts pristine hawaii early 1970s case pristine interpreted working telephone system make life pleasant researcher norman abramson colleagues university hawaii trying connect users remote islands main computer honolulu stringing cables pacific ocean cards looked different solution one found used short range radios user terminal sharing upstream frequency send frames central computer included simple elegant method solve channel allocation problem work extended many researchers since schwartz abramson although abramson work called aloha system used groundbased radio broadcasting basic idea applicable system uncoordinated users competing use single shared channel discuss two versions aloha pure slotted differ respect whether time continuous pure version divided discrete slots frames must fit pure aloha basic idea aloha system simple let users transmit whenever data sent collisions course colliding frames damaged senders need way find case aloha system station sent frame central computer computer rebroadcasts frame stations sending station thus listen broadcast hub see frame gotten systems wired lans sender might able listen collisions transmitting frame destroyed sender waits random amount time sends waiting time must random frames collide lockstep systems multiple users share common channel way lead conflicts known contention systems sketch frame generation aloha system given made frames length throughput aloha systems maximized uniform frame size rather allowing variable length frames whenever two frames try occupy channel time collision seen garbled first bit new frame overlaps last bit frame almost finished frames totally destroyed e incorrect checksums retransmitted later checksum distinguish total loss near miss bad bad sec multiple access protocols user b c e collision time collision pure aloha frames transmitted completely arbitrary times interesting question efficiency aloha channel words fraction transmitted frames escape collisions chaotic circumstances let us first consider infinite collection users typing terminals stations user always one two states typing waiting initially users typing state line finished user stops typing waiting response station transmits frame containing line shared channel central computer checks channel see successful user sees reply goes back typing user continues wait station retransmits frame successfully sent let frame time denote amount time needed transmit standard fixed length frame e frame length divided bit rate point assume new frames generated stations well modeled poisson distribution mean n frames per frame time infinitepopulation assumption needed ensure n decrease users become blocked n user community generating frames higher rate channel handle nearly every frame suffer collision reasonable throughput would expect n addition new frames stations also generate retransmissions frames previously suffered collisions let us assume old new frames combined well modeled poisson distribution mean g frames per frame time clearly g n low load e n collisions hence retransmissions g n high load many collisions g n loads throughput offered load g times probability p transmission succeeding gp p probability frame suffer collision frame suffer collision frames sent within one frame time start shown conditions 264 medium access control sublayer shaded frame arrive undamaged let time required send one frame user generated frame time end frame collide beginning shaded one fact shaded frame fate already sealed even first bit sent since pure aloha station listen channel transmitting way knowing another frame already underway similarly frame started 2t bump end shaded frame collides start shaded frame t0 t0 collides end shaded frame t0 2t t0 3t time vulnerable vulnerable period shaded frame probability k frames generated given frame time g frames expected given poisson distribution pr k g k e g k probability zero frames e g interval two frame times long mean number frames generated 2g probability frames initiated entire vulnerable period thus given p e 2g using gp get ge 2g relation offered traffic throughput shown maximum throughput occurs g 2e 184 words best hope channel utilization result encouraging everyone transmitting could hardly expected success rate slotted aloha soon aloha came onto scene roberts published method doubling capacity aloha system proposal divide time discrete intervals called slots interval corresponding one frame 265 multiple access protocols throughput per frame time 40 slotted aloha ge g 30 20 pure aloha ge 2g 10 g attempts per packet time throughput versus offered traffic aloha systems approach requires users agree slot boundaries one way achieve synchronization would one special station emit pip start interval like clock roberts method come known slotted aloha contrast abramson pure aloha station permitted send whenever user types line instead required wait beginning next slot thus continuous time aloha turned discrete time one halves vulnerable period see look imagine collisions possible probability traffic slot test frame e g leads ge g see slotted aloha peaks g throughput e 368 twice pure aloha system operating g probability empty slot 368 eq best hope using slotted aloha slots empty successes collisions operating higher values g reduces number empties increases number collisions exponentially see rapid growth collisions g comes consider transmission test frame probability avoid collision e g probability stations silent slot probability collision e g probability transmission requiring exactly k attempts e k collisions followed one success pk e g e g k expected number transmissions e per line typed terminal k k e kpk ke g e g k e g 266 medium access control sublayer result exponential dependence e upon g small increases channel load drastically reduce performance slotted aloha notable reason may initially obvious devised 1970s used early experimental systems almost forgotten internet access cable invented sudden problem allocate shared channel among multiple competing users slotted aloha pulled garbage save day later multiple rfid tags talk rfid reader presented another variation problem slotted aloha dash ideas mixed came rescue often happened protocols perfectly valid fall disuse political reasons e g big company wants everyone things way due ever changing technology trends years later clever person realizes long discarded protocol solves current problem reason chapter study number elegant protocols currently widespread use might easily used future applications provided enough network designers aware course also study many protocols current use well carrier sense multiple access protocols slotted aloha best channel utilization achieved e low result hardly surprising since stations transmitting without knowing stations bound many collisions lans however often possible stations detect stations thus adapt behavior accordingly networks achieve much better utilization e section discuss protocols improving performance protocols stations listen carrier e transmission act accordingly called carrier sense protocols number proposed long ago analyzed detail example see kleinrock tobagi look several versions carrier sense protocols persistent nonpersistent csma first carrier sense protocol study called persistent csma carrier sense multiple access bit mouthful simplest csma scheme station data send first listens channel see anyone else transmitting moment channel idle stations sends data otherwise channel busy station waits becomes idle station transmits frame collision occurs sec multiple access protocols station waits random amount time starts protocol called persistent station transmits probability finds channel idle might expect scheme avoids collisions except rare case simultaneous sends fact two stations become ready middle third station transmission wait politely transmission ends begin transmitting exactly simultaneously resulting collision impatient would fewer collisions subtly propagation delay important effect collisions chance station begins sending another station become ready send sense channel first station signal yet reached second one latter sense idle channel also begin sending resulting collision chance depends number frames fit channel bandwidth delay product channel tiny fraction frame fits channel case lans since propagation delay small chance collision happening small larger bandwidth delay product important effect becomes worse performance protocol even protocol better performance pure aloha stations decency desist interfering third station frame exactly holds slotted aloha second carrier sense protocol nonpersistent csma protocol conscious attempt made less greedy previous one station senses channel wants send frame one else sending station begins however channel already use station continually sense purpose seizing immediately upon detecting end previous transmission instead waits random period time repeats algorithm consequently algorithm leads better channel utilization longer delays persistent csma last protocol p persistent csma applies slotted channels works follows station becomes ready send senses channel idle transmits probability p probability q p defers next slot slot also idle either transmits defers probabilities p q process repeated either frame transmitted another station begun transmitting latter case unlucky station acts collision e waits random time starts station initially senses channel busy waits next slot applies algorithm ieee 11 uses refinement p persistent csma discuss sec shows computed throughput versus offered traffic three protocols well pure slotted aloha 268 medium access control sublayer 01 persistent csma throughput per packet time nonpersistent csma persistent csma 5 persistent csma 5 slotted aloha 3 persistent csma pure aloha 1 g attempts per packet time comparison channel utilization versus load various random access protocols csma collision detection persistent nonpersistent csma protocols definitely improvement aloha ensure station begins transmit channel busy however two stations sense channel idle begin transmitting simultaneously signals still collide another improvement stations quickly detect collision abruptly stop transmitting rather finishing since irretrievably garbled anyway strategy saves time bandwidth protocol known csma cd csma collision detection basis classic ethernet lan worth devoting time looking detail important realize collision detection analog process station hardware must listen channel transmitting signal reads back different signal putting knows collision occurring implications received signal must tiny compared transmitted signal difficult wireless received signals may 000 times weaker transmitted signals modulation must chosen allow collisions detected e g collision two 0volt signals may well impossible detect csma cd well many lan protocols uses conceptual model point marked station finished transmitting frame station frame send may attempt two stations decide transmit simultaneously collision station detects collision aborts transmission waits random period time tries assuming station started transmitting sec multiple access protocols meantime therefore model csma cd consist alternating contention transmission periods idle periods occurring stations quiet e g lack work contention slots frame frame frame transmission contention period period frame idle period time csma cd contention transmission idle state let us look details contention algorithm suppose two stations begin transmitting exactly time long take realize collided answer vital determining length contention period hence delay throughput minimum time detect collision time takes signal propagate one station based information might think station heard collision time equal full cable propagation time starting transmission sure seized cable seized mean stations know transmitting interfere conclusion wrong consider following worst case scenario let time signal propagate two farthest stations one station begins transmitting instant signal arrives distant station station also begins transmitting course detects collision almost instantly stops little noise burst caused collision get back original station time words worst case station sure seized channel transmitted without hearing collision understanding think csma cd contention slotted aloha system slot width km long coaxial cable sec difference csma cd compared slotted aloha slots one station transmits e channel seized followed rest frame difference greatly improve performance frame time much longer propagation time collision free protocols although collisions occur csma cd station unambiguously captured channel still occur contention period collisions adversely affect system performance especially 270 medium access control sublayer bandwidth delay product large cable long e large frames short collisions reduce bandwidth make time send frame variable good fit real time traffic voice ip csma cd also universally applicable section examine protocols resolve contention channel without collisions even contention period protocols currently used major systems rapidly changing field protocols excellent properties available future systems often good thing protocols described assume exactly n stations programmed unique address n matter stations may inactive part time also assume propagation delay negligible basic question remains station gets channel successful transmission continue using model discrete contention slots bit map protocol first collision free protocol basic bit map method contention period consists exactly n slots station frame send transmits bit slot station allowed transmit slot regardless station station gets opportunity transmit bit slot frame queued general station j may announce frame send inserting bit slot j n slots passed station complete knowledge stations wish transmit point begin transmitting frames numerical order see frames contention slots 3 7 contention slots 3 7 3 7 basic bit map protocol since everyone agrees goes next never collisions last ready station transmitted frame event stations easily monitor another n bit contention period begun station becomes ready bit slot passed luck must remain silent every station chance bit map come around sec multiple access protocols protocols like desire transmit broadcast actual transmission called reservation protocols reserve channel ownership advance prevent collisions let us briefly analyze performance protocol convenience measure time units contention bit slot data frames consisting time units conditions low load bit map simply repeated lack data frames consider situation point view low numbered station typically becomes ready send current slot somewhere middle bit map average station wait n slots current scan finish another full n slots following scan run completion may begin transmitting prospects high numbered stations brighter generally wait half scan n bit slots starting transmit highnumbered stations rarely wait next scan since low numbered stations must wait average 5n slots high numbered stations must wait average 5n slots mean stations n slots channel efficiency low load easy compute overhead per frame n bits amount data bits efficiency n high load stations something send time nbit contention period prorated n frames yielding overhead bit per frame efficiency mean delay frame equal sum time queues inside station plus additional n n gets head internal queue interval long takes wait stations turn sending frame another bitmap token passing essence bit map protocol lets every station transmit frame turn predefined order another way accomplish thing pass small message called token one station next predefined order token represents permission send station frame queued transmission receives token send frame passes token next station queued frame simply passes token token ring protocol topology network used define order stations send stations connected one next single ring passing token next station simply consists receiving token one direction transmitting direction seen frames also transmitted direction token way circulate around ring reach whichever station destination however stop frame circulating indefinitely like token station needs 272 medium access control sublayer remove ring station may either one originally sent frame gone complete cycle station intended recipient frame station token direction transmission token ring note need physical ring implement token passing channel connecting stations might instead single long bus station uses bus send token next station predefined sequence possession token allows station use bus send one frame protocol called token bus performance token passing similar bit map protocol though contention slots frames one cycle intermingled sending frame station must wait n stations including send token neighbors n stations send frame one subtle difference since positions cycle equivalent bias low high numbered stations token ring station also sending token far neighboring station protocol takes next step token need propagate stations protocol advances next step token rings cropped mac protocols consistency early token ring protocol called token ring standardized ieee popular 1980s alternative classic ethernet 1990s much faster token ring called fddi fiber distributed data interface beaten switched ethernet 2000s token ring called rpr resilient packet ring defined ieee 17 standardize mix metropolitan area rings use isps wonder 2010s offer binary countdown problem basic bit map protocol extension token passing overhead bit per station scale well networks thousands stations better using binary station addresses channel combines transmissions station wanting use sec multiple access protocols channel broadcasts address binary bit string starting highorder bit addresses assumed length bits address position different stations boolean ored together channel sent time call protocol binary countdown used datakit fraser implicitly assumes transmission delays negligible stations see asserted bits essentially instantaneously avoid conflicts arbitration rule must applied soon station sees high order bit position address overwritten gives example stations trying get channel first bit time stations transmit respectively ored together form stations see know higher numbered station competing channel give current round stations continue next bit stations continue next bit station gives winner station highest address winning bidding may transmit frame another bidding cycle starts protocol illustrated property higher numbered stations higher priority lower numbered stations may either good bad depending context bit time 3 0 0 1 0 0 result 0 stations see give station sees gives binary countdown protocol dash indicates silence channel efficiency method log2 n however frame format cleverly chosen sender address first field frame even log2 n bits wasted efficiency binary countdown example simple elegant efficient protocol waiting rediscovered hopefully find new home day 274 medium access control sublayer limited contention protocols considered two basic strategies channel acquisition broadcast network contention csma collision free protocols strategy rated well respect two important performance measures delay low load channel efficiency high load conditions light load contention e pure slotted aloha preferable due low delay since collisions rare load increases contention becomes increasingly less attractive overhead associated channel arbitration becomes greater reverse true collision free protocols low load relatively high delay load increases channel efficiency improves since overheads fixed obviously would nice could combine best properties contention collision free protocols arriving new protocol used contention low load provide low delay used collision free technique high load provide good channel efficiency protocols call limited contention protocols fact exist conclude study carrier sense networks contention protocols studied symmetric station attempts acquire channel probability p stations using p interestingly enough overall system performance sometimes improved using protocol assigns different probabilities different stations looking asymmetric protocols let us quickly review performance symmetric case suppose k stations contending channel access probability p transmitting slot probability station successfully acquires channel given slot probability one station transmits probability p k stations defer probability p value kp p k find optimal value p differentiate respect p set result zero solve p find best value p k substituting p k get k pr success optimal p k k probability plotted small numbers stations chances success good soon number stations reaches even five probability dropped close asymptotic value e fairly obvious probability station acquiring channel increased decreasing amount competition limited contention protocols precisely first divide stations necessarily disjoint groups members group permitted sec multiple access protocols probability success 8 4 0 number ready stations acquisition probability symmetric contention channel compete slot one succeeds acquires channel transmits frame slot lies fallow collision members group contend slot etc making appropriate division stations groups amount contention slot reduced thus operating slot near left end trick assign stations slots looking general case let us consider special cases one extreme group one member assignment guarantees never collisions one station contending given slot seen protocols e g binary countdown next special case assign two stations per group probability try transmit slot p small p negligible stations assigned slot probability collision grows length bit map scan needed give everyone chance shrinks limiting case single group containing stations e slotted aloha need way assign stations slots dynamically many stations per slot load low even one station per slot load high adaptive tree walk protocol one particularly simple way performing necessary assignment use algorithm devised u army testing soldiers syphilis world war ii dorfman short army took blood sample n soldiers portion sample poured single test tube mixed sample tested antibodies none found soldiers group declared healthy antibodies present two new mixed samples 276 medium access control sublayer prepared one soldiers n one rest process repeated recursively infected soldiers determined computerized version algorithm capetanakis convenient think stations leaves binary tree illustrated first contention slot following successful frame transmission slot stations permitted try acquire channel one fine collision slot stations falling node tree may compete one acquires channel slot following frame reserved stations node hand two stations node want transmit collision slot case node turn slot stations b c e f g h tree eight stations essence collision occurs slot entire tree searched depth first locate ready stations bit slot associated particular node tree collision occurs search continues recursively node left right children bit slot idle one station transmits searching node stop ready stations located one would collision load system heavy hardly worth effort dedicate slot node makes sense unlikely event precisely one station frame send similarly one could argue nodes skipped well reason put general terms level tree search begin clearly heavier load farther tree search begin assume station good estimate number ready stations q example monitoring recent traffic proceed let us number levels tree top node level nodes level etc notice node level sec multiple access protocols fraction stations q ready stations uniformly distributed expected number specific node level q intuitively would expect optimal level begin searching tree one mean number contending stations per slot level q solving equation find log2 q numerous improvements basic algorithm discovered discussed detail bertsekas gallager example consider case stations g h ones wanting transmit node collision occur tried discovered idle pointless probe node since guaranteed collision know two stations ready none must probe skipped tried next probe also turns nothing skipped node g tried next wireless lan protocols system laptop computers communicate radio regarded wireless lan discussed sec lan example broadcast channel also somewhat different properties wired lan leads different mac protocols section examine protocols sec look 11 wifi detail common configuration wireless lan office building access points aps strategically placed around building aps wired together using copper fiber provide connectivity stations talk transmission power aps laptops adjusted range tens meters nearby rooms become like single cell entire building becomes like cellular telephony systems studied chap except cell one channel channel shared stations cell including ap typically provides megabit sec bandwidths mbps already remarked wireless systems normally detect collision occurring received signal station may tiny perhaps million times fainter signal transmitted finding like looking ripple ocean instead acknowledgements used discover collisions errors fact even important difference wireless lans wired lans station wireless lan may able transmit frames receive frames stations limited radio range stations wired lans one station sends frame stations receive absence property wireless lans causes variety complications make simplifying assumption radio transmitter fixed range represented circular coverage region within another station sense receive station transmission important realize 278 medium access control sublayer practice coverage regions nearly regular propagation radio signals depends environment walls obstacles attenuate reflect signals may cause range differ markedly different directions simple circular model purposes naive approach using wireless lan might try csma listen transmissions transmit one else trouble protocol really good way think wireless matters reception interference receiver sender see nature problem consider four wireless stations illustrated purposes matter aps laptops radio range b within range potentially interfere one another c also potentially interfere b c b radio range b c radio range b wireless lan c hidden terminals transmitting b b b c exposed terminals transmitting first consider happens c transmit b depicted sends c immediately senses medium hear range thus c falsely conclude transmit b c start transmitting interfere b wiping frame assume cdma type scheme used provide multiple channels collisions garble signal destroy frames want mac protocol prevent kind collision happening wastes bandwidth problem station able detect potential competitor medium competitor far away called hidden terminal problem let us look different situation b transmitting time c wants transmit shown b c senses medium hear transmission falsely conclude may send shown dashed line fact transmission would cause bad reception zone b c neither intended receivers located want mac protocol prevents kind deferral happening wastes bandwidth problem called exposed terminal problem difficulty starting transmission station really wants know whether radio activity around receiver csma merely tells sec multiple access protocols whether activity near transmitter sensing carrier wire signals propagate stations distinction exist however one transmission take place anywhere system system based short range radio waves multiple transmissions occur simultaneously different destinations destinations range one another want concurrency happen cell gets larger larger way people party wait everyone room go silent talk multiple conversations take place large room long directed location early influential protocol tackles problems wireless lans maca multiple access collision avoidance karn basic idea behind sender stimulate receiver outputting short frame stations nearby detect transmission avoid transmitting duration upcoming large data frame technique used instead carrier sense maca illustrated let us see sends frame b starts sending rts request send frame b shown short frame bytes contains length data frame eventually follow b replies cts clear send frame shown b cts frame contains data length copied rts frame upon receipt cts frame begins transmission range transmitter c rts b range b transmitter c cts b e e b maca protocol sending rts b b b responding cts let us see stations overhearing either frames react station hearing rts clearly close must remain silent long enough cts transmitted back without conflict station hearing cts clearly close b must remain silent upcoming data transmission whose length tell examining cts frame 280 medium access control sublayer c within range within range b therefore hears rts cts b long interfere cts free transmit data frame sent contrast within range b hear rts hear cts hearing cts tips close station receive frame defers sending anything frame expected finished station e hears control messages like must silent data frame complete despite precautions collisions still occur example b c could send rts frames time collide lost event collision unsuccessful transmitter e one hear cts within expected time interval waits random amount time tries later ethernet finished discussion channel allocation protocols abstract time see principles apply real systems many designs personal local metropolitan area networks standardized name ieee survived many saw people believe reincarnation think charles darwin came back member ieee standards association weed unfit important survivors ethernet 11 wireless lan bluetooth wireless pan widely deployed standardized outside 15 16 wireless man early tell please consult 6th edition book find begin study real systems ethernet probably ubiquitous kind computer network world two kinds ethernet exist classic ethernet solves multiple access problem using techniques studied chapter switched ethernet devices called switches used connect different computers important note referred ethernet quite different classic ethernet original form ran rates mbps switched ethernet ethernet become runs 000 mbps forms called fast ethernet gigabit ethernet gigabit ethernet practice switched ethernet used nowadays discuss historical forms ethernet chronological order showing developed since ethernet ieee identical except minor difference discuss shortly many people use terms ethernet ieee interchangeably information ethernet see spurgeon sec ethernet classic ethernet physical layer story ethernet starts time aloha student named bob metcalfe got bachelor degree moved river get ph harvard studies exposed abramson work became interested graduating harvard decided spend summer hawaii working abramson starting work xerox parc palo alto research center got parc saw researchers designed built would later called personal computers machines isolated using knowledge abramson work together colleague david boggs designed implemented first local area network metcalfe boggs used single long thick coaxial cable ran mbps called system ethernet luminiferous ether electromagnetic radiation thought propagate 19th century british physicist james clerk maxwell discovered electromagnetic radiation could described wave equation scientists assumed space must filled ethereal medium radiation propagating famous michelson morley experiment physicists discover electromagnetic radiation could propagate vacuum xerox ethernet successful dec intel xerox drew standard mbps ethernet called dix standard minor change dix standard became ieee standard unfortunately xerox already history making seminal inventions personal computer failing commercialize story told fumbling future smith alexander xerox showed little interest anything ethernet helping standardize metcalfe formed company 3com sell ethernet adapters pcs sold many millions classic ethernet snaked around building single long cable computers attached architecture shown first variety popularly called thick ethernet resembled yellow garden hose markings every meters show attach computers standard actually require cable yellow suggest succeeded thin ethernet bent easily made connections using industry standard bnc connectors thin ethernet much cheaper easier install could run meters per segment instead thick ethernet could handle machines instead version ethernet maximum cable length per segment e unamplified length signal propagate allow larger networks multiple cables connected repeaters repeater physical layer device receives amplifies e regenerates retransmits signals directions far software concerned series cable segments 282 medium access control sublayer transceiver interface cable ether architecture classic ethernet connected repeaters different single cable except small amount delay introduced repeaters cables information sent using manchester encoding studied sec ethernet could contain multiple cable segments multiple repeaters two transceivers could km apart path two transceivers could traverse four repeaters reason restriction mac protocol look next would work correctly classic ethernet mac sublayer protocol format used send frames shown first comes preamble bytes containing bit pattern exception last byte last bits set last byte called start frame delimiter manchester encoding pattern produces mhz square wave sec allow receiver clock synchronize sender last two bits tell receiver rest frame start bytes 1500 46 preamble destination address source address type data pad checksum b preamble destination address source address length data pad checksum frame formats ethernet dix b ieee next come two addresses one destination one source bytes long first transmitted bit destination address sec ethernet ordinary addresses group addresses group addresses allow multiple stations listen single address frame sent group address stations group receive sending group stations called multicasting special address consisting bits reserved broadcasting frame containing 1s destination field accepted stations network multicasting selective involves group management define stations group conversely broadcasting differentiate stations require group management interesting feature station source addresses globally unique assigned centrally ieee ensure two stations anywhere world address idea station uniquely address station giving right bit number first bytes address field used oui organizationally unique identifier values field assigned ieee indicate manufacturer manufacturers assigned blocks addresses manufacturer assigns last bytes address programs complete address nic sold next comes type length field depending whether frame ethernet ieee ethernet uses type field tell receiver frame multiple network layer protocols may use time machine ethernet frame arrives operating system know one hand frame type field specifies process give frame example type code 0x0800 means data contains ipv4 packet ieee wisdom decided field would carry length frame since ethernet length determined looking inside data layering violation ever one course meant way receiver figure incoming frame problem handled addition another header llc logical link control protocol within data uses bytes convey bytes protocol type information unfortunately time published much hardware software dix ethernet already use manufacturers users enthusiastic repackaging type length fields ieee threw towel said ways fine fortunately type fields use values greater well established maximum data size rule number less equal 0x600 interpreted length number greater 0x600 interpreted type ieee maintain everyone using standard everybody else keep already bothering llc without feeling guilty next come data bytes limit chosen somewhat arbitrarily time ethernet standard cast stone mostly based fact 284 medium access control sublayer transceiver needs enough ram hold entire frame ram expensive larger upper limit would meant ram hence expensive transceiver addition maximum frame length also minimum frame length data field bytes sometimes useful causes problem transceiver detects collision truncates current frame means stray bits pieces frames appear cable time make easier distinguish valid frames garbage ethernet requires valid frames must least bytes long destination address checksum including data portion frame less bytes pad field used fill frame minimum size another important reason minimum length frame prevent station completing transmission short frame first bit even reached far end cable may collide another frame problem illustrated time station one end network sends frame let us call propagation time frame reach end frame gets end e time distant station b starts transmitting b detects receiving power putting knows collision occurred aborts transmission generates bit noise burst warn stations words jams ether make sure sender miss collision time sender sees noise burst aborts transmission waits random time trying packet starts time b b b b c packet almost b collision time noise burst gets back b collision detection take long station tries transmit short frame conceivable collision occur transmission completed noise burst gets back station sender incorrectly conclude frame successfully sent prevent situation occurring frames must take send transmission still taking place sec ethernet noise burst gets back sender mbps lan maximum length meters four repeaters specification round trip time including time propagate four repeaters determined nearly sec worst case therefore shortest allowed frame must take least long transmit mbps bit takes nsec bits smallest frame guaranteed work add margin safety number rounded bits bytes final field checksum bit crc kind studied sec fact defined exactly generator polynomial gave popped ppp adsl links crc errordetecting code used determine bits frame received correctly error detection frame dropped error detected csma cd binary exponential backoff classic ethernet uses persistent csma cd algorithm studied sec descriptor means stations sense medium frame send send frame soon medium becomes idle monitor channel collisions send collision abort transmission short jam signal retransmit random interval let us see random interval determined collision occurs new method model still collision time divided discrete slots whose length equal worst case roundtrip propagation time ether accommodate longest path allowed ethernet slot time set bit times sec first collision station waits either slot times random trying two stations collide one picks random number collide second collision one picks either random waits number slot times third collision occurs probability happening 25 next time number slots wait chosen random interval general collisions random number 2i chosen number slots skipped however collisions reached randomization interval frozen maximum slots collisions controller throws towel reports failure back computer recovery higher layers algorithm called binary exponential backoff chosen dynamically adapt number stations trying send randomization interval collisions chance two stations colliding second time would negligible average wait collision would hundreds slot times introducing significant delay hand station always 286 medium access control sublayer delayed either slots stations ever tried send would collide picked remaining station picked might take years randomization interval grow exponentially consecutive collisions occur algorithm ensures low delay stations collide also ensures collisions resolved reasonable interval many stations collide truncating backoff keeps bound growing large collision sender assumes frame probably successfully delivered neither csma cd ethernet provides acknowledgements choice appropriate wired optical fiber channels low error rates errors occur must detected crc recovered higher layers wireless channels errors see acknowledgements used ethernet performance let us briefly examine performance classic ethernet conditions heavy constant load k stations always ready transmit rigorous analysis binary exponential backoff algorithm complicated instead follow metcalfe boggs assume constant retransmission probability slot station transmits contention slot probability p probability station acquires channel slot kp p k maximized p k e k probability contention interval exactly j slots j mean number slots per contention given ja j j since slot duration mean contention interval w assuming optimal p mean number contention slots never e w e mean frame takes p sec transmit many stations frames send channel efficiency p p see maximum cable distance two stations enters performance figures longer cable longer contention interval ethernet standard specifies maximum cable length sec ethernet instructive formulate eq terms frame length f network bandwidth b cable length l speed signal propagation c optimal case e contention slots per frame p f b eq becomes channel efficiency 2ble cf second term denominator large network efficiency low specifically increasing network bandwidth distance bl product reduces efficiency given frame size unfortunately much research network hardware aimed precisely increasing product people want high bandwidth long distances fiber optic mans example yet classic ethernet implemented manner best system applications see ways implementing ethernet next section channel efficiency plotted versus number ready stations sec data rate mbps using eq 64byte slot time surprising byte frames efficient hand byte frames asymptotic value e byte slots per contention interval contention period bytes long efficiency result much better efficiency slotted aloha 9 byte frames channel efficiency byte frames byte frames 5 byte frames 3 byte frames 1 32 number stations trying send efficiency ethernet mbps bit slot times probably worth mentioning large amount theoretical performance analysis ethernet networks results taken grain better yet metric ton salt two reasons 288 medium access control sublayer first virtually theoretical work assumes poisson traffic researchers begun looking real data appears network traffic rarely poisson instead self similar bursty range time scales paxson floyd leland et al means averaging long periods time smooth traffic well using questionable models many analyses focus interesting performance cases abnormally high load boggs et al showed experimentation ethernet works well reality even moderately high load switched ethernet ethernet soon began evolve away single long cable architecture classic ethernet problems associated finding breaks loose connections drove toward different kind wiring pattern station dedicated cable running central hub hub simply connects attached wires electrically soldered together configuration shown port port line hub line switch b hub b switch wires telephone company twisted pairs since office buildings already wired way normally plenty spares available reuse win reduce maximum cable run hub meters meters high quality category twisted pairs used adding removing station simpler configuration cable breaks detected easily advantages able use existing wiring ease maintenance twisted pair hubs quickly became dominant form ethernet however hubs increase capacity logically equivalent single long cable classic ethernet stations added station gets decreasing share fixed capacity eventually lan saturate one way go higher speed say mbps mbps gbps even higher speeds growth multimedia powerful servers even gbps ethernet become saturated sec ethernet fortunately another way deal increased load switched ethernet heart system switch containing high speed backplane connects ports shown b outside switch looks like hub boxes typically ports standard rj connector twisted pair cable cable connects switch hub single computer shown switch advantages hub easy add remove new station plugging unplugging wire easy find faults since flaky cable port usually affect one station still shared component fail switch stations lose connectivity folks know fix problem replace whole switch switch hub switch ports twisted pair ethernet switch inside switch however something different happening switches output frames ports frames destined switch port receives ethernet frame station switch checks ethernet addresses see port frame destined step requires switch able work ports correspond addresses process describe sec get general case switches connected switches assume switch knows frame destination port switch forwards frame high speed backplane destination port backplane typically runs many gbps using proprietary protocol need standardized entirely hidden inside switch destination port transmits frame wire reaches intended station none ports even knows frame exists happens one stations ports wants send frame time switches differ hubs hub stations collision domain must use csma cd algorithm schedule transmissions switch port independent collision domain common case cable full duplex station port send frame cable time without worrying ports stations collisions impossible csma cd needed however cable half duplex station port must contend transmission csma cd usual way 290 medium access control sublayer switch improves performance hub two ways first since collisions capacity used efficiently second importantly switch multiple frames sent simultaneously different stations frames reach switch ports travel switch backplane output proper ports however since two frames might sent output port time switch must buffering temporarily queue input frame transmitted output port overall improvements give large performance win possible hub total system throughput often increased order magnitude depending number ports traffic patterns change ports frames output also security benefits lan interfaces promiscuous mode frames given computer addressed hub every computer attached see traffic sent computers spies busybodies love feature switch traffic forwarded ports destined restriction provides better isolation traffic easily escape fall wrong hands however better encrypt traffic security really needed switch expects standard ethernet frames input port possible use ports concentrators port upper right corner connected single station port hub instead frames arrive hub contend ether usual way including collisions binary backoff successful frames make hub switch treated like incoming frames switch know fight way switch sent correct output line high speed backplane also possible correct destination one lines attached hub case frame already delivered switch drops hubs simpler cheaper switches due falling switch prices become endangered species modern networks largely use switched ethernet nevertheless legacy hubs still exist fast ethernet time switches becoming popular speed mbps ethernet coming pressure first mbps seemed like heaven cable modems seemed like heaven users telephone modems novelty wore quickly kind corollary parkinson law work expands fill time available completion seemed data expanded fill bandwidth available transmission many installations needed bandwidth thus numerous mbps lans connected maze repeaters hubs switches although network managers sometimes felt held together bubble sec ethernet gum chicken wire even ethernet switches maximum bandwidth single computer limited cable connected switch port environment ieee reconvened committee instructions come faster lan one proposal keep exactly make go faster another proposal redo totally give lots new features real time traffic digitized voice keep old name marketing reasons wrangling committee decided keep way make go faster strategy would get job done technology changed avoid unforeseen problems brand new design new design would also backwardcompatible existing ethernet lans people behind losing proposal self respecting computer industry people would done circumstances stomped formed committee standardized lan anyway eventually 12 flopped miserably work done quickly standards committees norms result 3u approved ieee june technically 3u new standard addendum existing standard emphasize backward compatibility strategy used lot since practically everyone calls fast ethernet rather 3u basic idea behind fast ethernet simple keep old frame formats interfaces procedural rules reduce bit time nsec nsec technically would possible copy mbps classic ethernet still detect collisions time reducing maximum cable length factor however advantages twisted pair wiring overwhelming fast ethernet based entirely design thus fast ethernet systems use hubs switches multidrop cables vampire taps bnc connectors permitted nevertheless choices still made important wire types support one contender category twisted pair argument practically every office western world least four category better twisted pairs running telephone wiring closet within meters sometimes two cables existed thus using category twisted pair would make possible wire desktop computers using fast ethernet without rewire building enormous advantage many organizations main disadvantage category twisted pair inability carry mbps meters maximum computer hub distance specified mbps hubs contrast category twisted pair wiring handle easily fiber go much farther compromise chosen allow three possibilities shown pep category solution give additional carrying capacity needed category utp scheme called 100base t4 used signaling speed mhz faster standard ethernet mhz remember 292 medium access control sublayer name cable max segment advantages 100base t4 twisted pair uses category utp 100base tx twisted pair full duplex mbps cat utp 100base fx fiber optics full duplex mbps long runs original fast ethernet cabling manchester encoding discussed sec requires two clock periods million bits sent second however achieve necessary bit rate 100base t4 requires four twisted pairs four pairs one always hub one always hub two switchable current transmission direction get mbps three twisted pairs transmission direction fairly involved scheme used twisted pair involves sending ternary digits three different voltage levels scheme likely win prizes elegance skip details however since standard telephone wiring decades four twisted pairs per cable offices able use existing wiring plant course means giving office telephone surely small price pay faster email 100base t4 fell wayside many office buildings rewired category utp 100base tx ethernet came dominate market design simpler wires handle clock rates mhz two twisted pairs per station used one hub one neither straight binary coding e nrz manchester coding used instead 4b 5b encoding described sec used data bits encoded signal bits sent mhz provide mbps scheme simple sufficient transitions synchronization uses bandwidth wire relatively well 100base tx system full duplex stations transmit mbps one twisted pair receive mbps another twisted pair time last option 100base fx uses two strands multimode fiber one direction run full duplex mbps direction setup distance station switch km fast ethernet allows interconnection either hubs switches ensure csma cd algorithm continues work relationship minimum frame size maximum cable length must maintained network speed goes mbps mbps either minimum frame size bytes must go maximum cable length must come proportionally easy choice maximum distance two stations come factor since hub cables falls within new maximum already however km 100base fx cables sec ethernet long permit mbps hub normal ethernet collision algorithm cables must instead connected switch operate full duplex mode collisions users quickly started deploy fast ethernet throw away mbps ethernet cards older computers consequence virtually fast ethernet switches handle mix mbps mbps stations make upgrading easy standard provides mechanism called autonegotiation lets two stations automatically negotiate optimum speed mbps duplexity half full works well time known lead duplex mismatch problems one end link autonegotiates end set full duplex mode shalunov carlson ethernet products use feature configure gigabit ethernet ink barely dry fast ethernet standard committee began working yet faster ethernet quickly dubbed gigabit ethernet ieee ratified popular form 3ab discuss key features gigabit ethernet information given spurgeon committee goals gigabit ethernet essentially committee goals fast ethernet increase performance tenfold maintaining compatibility existing ethernet standards particular gigabit ethernet offer unacknowledged datagram service unicast broadcast use bit addressing scheme already use maintain frame format including minimum maximum frame sizes final standard met goals like fast ethernet configurations gigabit ethernet use point point links simplest configuration illustrated two computers directly connected common case however uses switch hub connected multiple computers possibly additional switches hubs shown b configurations individual ethernet cable exactly two devices fewer also like fast ethernet gigabit ethernet supports two different modes operation full duplex mode half duplex mode normal mode fullduplex mode allows traffic directions time mode used central switch connected computers switches periphery configuration lines buffered computer switch free send frames whenever wants sender sense channel see anybody else using contention impossible line computer switch computer possible sender switch transmission succeed even switch currently sending frame computer line full duplex since 294 medium access control sublayer switch hub ethernet computer ethernet b two station ethernet b multistation ethernet contention possible csma cd protocol used maximum length cable determined signal strength issues rather long takes noise burst propagate back sender worst case switch es free mix match speeds autonegotiation supported fast ethernet choice among mbps mode operation half duplex used computers connected hub rather switch hub buffer incoming frames instead electrically connects lines internally simulating multidrop cable used classic ethernet mode collisions possible standard csma cd protocol required byte frame shortest allowed transmitted times faster classic ethernet maximum cable length must times less meters maintain essential property sender still transmitting noise burst gets back even worst case meter long cable sender byte frame gbps would long finished frame got even tenth way end let alone end back length restriction painful enough two features added standard increase maximum cable length meters probably enough offices first feature called carrier extension essentially tells hardware add padding normal frame extend frame bytes since padding added sending hardware removed receiving hardware software unaware meaning changes needed existing software downside using bytes worth bandwidth transmit bytes user data payload byte frame line efficiency second feature called frame bursting allows sender transmit concatenated sequence multiple frames single transmission total burst less bytes hardware pads enough frames waiting transmission scheme efficient preferred carrier extension sec ethernet fairness hard imagine organization buying modern computers gigabit ethernet cards connecting old fashioned hub simulate classic ethernet collisions gigabit ethernet interfaces switches used expensive prices fell rapidly sales volumes picked still backward compatibility sacred computer industry committee required put today computers ship ethernet interface capable mbps operation compatible gigabit ethernet supports copper fiber cabling listed signaling near gbps requires encoding sending bit every nanosecond trick initially accomplished short shielded copper cables 1000base cx version optical fibers optical fibers two wavelengths permitted result two different versions 85 microns short 1000base sx microns long 1000base lx name cable max segment advantages 1000base sx fiber optics multimode fiber microns 1000base lx fiber optics single multimode 1000base cx pairs stp shielded twisted pair 1000base pairs utp standard category utp gigabit ethernet cabling signaling short wavelength achieved cheaper leds used multimode fiber useful connections within building run micron fiber signaling long wavelength requires expensive lasers hand combined singlemode micron fiber cable length km limit allows long distance connections buildings campus backbone dedicated point point link later variations standard allowed even longer links single mode fiber send bits versions gigabit ethernet 8b 10b encoding described sec borrowed another networking technology called fibre channel scheme encodes bits data bit codewords sent wire fiber hence name 8b 10b codewords chosen could balanced e number 0s 1s sufficient transitions clock recovery sending coded bits nrz requires signaling bandwidth required uncoded bits big improvement expansion manchester coding however options required new copper fiber cables support faster signaling none made use large amount category utp installed along fast ethernet within year 1000base 296 medium access control sublayer came along fill gap popular form gigabit ethernet ever since people apparently dislike rewiring buildings complicated signaling needed make ethernet run mbps category wires start four twisted pairs cable used pair used directions time using digital signal processing separate signals wire five voltage levels carry bits used signaling msymbols sec mapping produce symbols bits straightforward involves scrambling transitions followed error correcting code four values embedded five signal levels speed gbps quite fast example receiver busy task even msec empty input buffer line frames may accumulated gap also computer gigabit ethernet shipping data line computer classic ethernet buffer overruns likely consequence two observations gigabit ethernet supports flow control mechanism consists one end sending special control frame end telling pause period time pause control frames normal ethernet frames containing type 0x8808 pauses given units minimum frame time gigabit ethernet time unit nsec allowing pauses long msec one extension introduced along gigabit ethernet jumbo frames allow frames longer bytes usually kb extension proprietary recognized standard used ethernet longer compatible earlier versions vendors support anyway rationale bytes short unit gigabit speeds manipulating larger blocks information frame rate decreased along processing associated interrupting processor say frame arrived splitting recombining messages long fit one ethernet frame 10 gigabit ethernet soon gigabit ethernet standardized committee got bored wanted get back work ieee told start gigabit ethernet work followed much pattern previous ethernet standards standards fiber shielded copper cable appearing first followed standard copper twisted pair gbps truly prodigious speed 1000x faster original ethernet could needed answer inside data centers exchanges connect high end routers switches servers well long distance high bandwidth trunks offices enabling entire metropolitan area networks based ethernet fiber long distance connections use optical fiber short connections may use copper fiber sec ethernet versions gigabit ethernet support full duplex operation csma cd longer part design standards concentrate details physical layers run high speed compatibility still matters though gigabit ethernet interfaces autonegotiate fall back highest speed supported ends line main kinds gigabit ethernet listed multimode fiber 85 short wavelength used medium distances singlemode fiber long extended used long distances 10gbase er run distances km making suitable wide area applications versions send serial stream information produced scrambling data bits encoding 64b 66b code encoding less overhead 8b 10b code name cable max segment advantages 10gbase sr fiber optics multimode fiber 85 10gbase lr fiber optics km 10gbase er fiber optics km single mode fiber 10gbase cx4 pairs twinax twinaxial copper 10gbase pairs utp category 6a utp single mode fiber gigabit ethernet cabling first copper version defined 10gbase cx4 uses cable four pairs twinaxial copper wiring pair uses 8b 10b coding runs 125 gsymbols second reach gbps version cheaper fiber early market remains seen whether beat long run gigabit ethernet garden variety twisted pair wiring 10gbase version uses utp cables calls category 6a wiring shorter runs use lower categories including category allow reuse installed cabling surprisingly physical layer quite involved reach gbps twisted pair sketch high level details four twisted pairs used send mbps directions speed reached using signaling rate msymbols sec symbols use voltage levels symbols produced scrambling data protecting ldpc low density parity check code coding error correction gigabit ethernet still shaking market committee already moved end ieee created group standardize ethernet operating gbps gbps upgrade let ethernet compete high performance settings including long distance connections backbone networks short connections equipment backplanes standard yet complete proprietary products already available 298 medium access control sublayer retrospective ethernet ethernet around years serious competitors sight likely around many years come cpu architectures operating systems programming languages king mountain three decades going strong clearly ethernet something right probably main reason longevity ethernet simple flexible practice simple translates reliable cheap easy maintain hub switch architecture adopted failures became extremely rare people hesitate replace something works perfectly time especially know awful lot things computer industry work poorly many called upgrades worse replaced simple also translates cheap twisted pair wiring relatively inexpensive hardware components may start expensive transition example new gigabit ethernet nics switches merely additions well established network replacement prices fall quickly sales volume picks ethernet easy maintain software install drivers much way configuration tables manage get wrong also adding new hosts simple plugging another point ethernet interworks easily tcp ip become dominant ip connectionless protocol fits perfectly ethernet also connectionless ip fits much less well connection oriented alternatives atm mismatch definitely hurt atm chances lastly perhaps importantly ethernet able evolve certain crucial ways speeds gone several orders magnitude hubs switches introduced changes required changing software often allowed existing cabling reused time network salesman shows large installation says fantastic new network throw hardware rewrite software problem many alternative technologies probably even heard faster ethernet introduced well atm list includes fddi fiber distributed data interface fibre channel two ringbased optical lans incompatible ethernet neither one made complicated led complex chips high prices lesson learned kiss keep simple stupid eventually ethernet caught terms speed often borrowing technology example 4b 5b coding fddi 8b 10b coding fibre channel advantages left quietly died fell specialized roles called fibre channel fiber channel document editor british sec ethernet looks like ethernet continue expand applications time gigabit ethernet freed distance constraints csma cd much effort put carrier grade ethernet let network providers offer ethernet based services customers metropolitan wide area networks fouli maler application carries ethernet frames long distances fiber calls better management features help operators offer reliable high quality services high speed networks also finding uses backplanes connecting components large routers servers uses addition sending frames computers offices wireless lans wireless lans increasingly popular homes offices cafes libraries airports zoos public places outfitted connect computers pdas smart phones internet wireless lans also used let two nearby computers communicate without using internet main wireless lan standard 11 gave background information sec time take closer look technology following sections look protocol stack physical layer radio transmission techniques mac sublayer protocol frame structure services provided information 11 see gast get truth mouth horse consult published standard ieee 11 11 architecture protocol stack 11 networks used two modes popular mode connect clients laptops smart phones another network company intranet internet mode shown infrastructure mode client associated ap access point turn connected network client sends receives packets via ap several access points may connected together typically wired network called distribution system form extended 11 network case clients send frames clients via aps mode shown b ad hoc network mode collection computers associated directly send frames access point since internet access killer application wireless ad hoc networks popular look protocols protocols including 11 ethernet certain commonality structure partial view 11 protocol stack given stack clients 300 medium access control sublayer access point network client b 11 architecture infrastructure mode b ad hoc mode aps physical layer corresponds fairly well osi physical layer data link layer protocols split two sublayers 11 mac medium access control sublayer determines channel allocated gets transmit next llc logical link control sublayer whose job hide differences different variants make indistinguishable far network layer concerned could significant responsibility days llc glue layer identifies protocol e g ip carried within 11 frame upper layers logical link layer data link layer mac sublayer release date 11 legacy frequency hopping infrared 11a ofdm 11b spread spectrum 11g ofdm 11n mimo ofdm 1999 physical layer part 11 protocol stack several transmission techniques added physical layer 11 evolved since first appeared two initial techniques infrared manner television remote controls frequency hopping ghz band defunct third initial technique direct sequence spread spectrum mbps ghz band extended run rates mbps quickly became hit known 11b sec wireless lans give wireless junkies much wanted speed boost new transmission techniques based ofdm orthogonal frequency division multiplexing scheme described sec introduced first called 11a uses different frequency band ghz second stuck ghz compatibility called 11g give rates mbps recently transmission techniques simultaneously use multiple antennas transmitter receiver speed boost finalized 11n oct four antennas wider channels 11 standard defines rates startling mbps examine transmission techniques briefly cover use however skipping legacy 11 transmission methods technically belong physical layer examined chap since closely tied lans general 11 lan particular treat instead 11 physical layer transmission techniques makes possible send mac frame air one station another differ however technology used speeds achievable detailed discussion technologies far beyond scope book words one relate techniques material covered sec provide interested readers key terms search elsewhere information 11 techniques use short range radios transmit signals either ghz ghz ism frequency bands described sec bands advantage unlicensed hence freely available transmitter willing meet restrictions radiated power w though mw typical wireless lan radios unfortunately fact also known manufacturers garage door openers cordless phones microwave ovens countless devices compete laptops spectrum ghz band tends crowded ghz band ghz better applications even though shorter range due higher frequency transmission methods also define multiple rates idea different rates used depending current conditions wireless signal weak low rate used signal clear highest rate used adjustment called rate adaptation since rates vary factor good rate adaptation important good performance course since needed interoperability standards say rate adaptation done first transmission method shall look 11b spread spectrum method supports rates mbps though practice operating rate nearly always mbps similar cdma system 302 medium access control sublayer examined sec except one spreading code shared users spreading used satisfy fcc requirement power spread ism band spreading sequence used 11b barker sequence property autocorrelation low except sequences aligned property allows receiver lock onto start transmission send rate mbps barker sequence used bpsk modulation send bit per chips chips transmitted rate mchips sec send mbps used qpsk modulation send bits per chips higher rates different rates use technique called cck complementary code keying construct codes instead barker sequence mbps rate sends bits every chip code mbps rate sends bits every chip code next come 11a supports rates mbps ghz ism band might expected 11a come 11b case although 11a group set first 11b standard approved first product got market well ahead 11a products partly difficulty operating higher ghz band 11a method based ofdm orthogonal frequency division multiplexing ofdm uses spectrum efficiently resists wireless signal degradations multipath bits sent subcarriers parallel carrying data used synchronization symbol lasts sends bits bits coded error correction binary convolutional code first bits redundant different combinations 11a run eight different rates ranging mbps rates significantly faster 11b rates less interference ghz band however 11b range seven times greater 11a important many situations even greater range 11b people intention letting upstart win speed championship fortunately may fcc dropped long standing rule requiring wireless communications equipment operating ism bands u use spread spectrum got work 11g approved ieee copies ofdm modulation methods 11a operates narrow ghz ism band along 11b offers rates 11a mbps plus course compatibility 11b devices happen nearby different choices confusing customers common products support 11a b g single nic content stop ieee committee began work high throughput physical layer called 11n ratified goal 11n throughput least mbps wireless overheads removed goal called raw speed increase least factor four make happen committee doubled channels mhz mhz sec wireless lans reduced framing overheads allowing group frames sent together significantly however 11n uses four antennas transmit four streams information time signals streams interfere receiver separated using mimo multiple input multiple output communications techniques use multiple antennas gives large speed boost better range reliability instead mimo like ofdm one clever communications ideas changing wireless designs likely hear lot future brief introduction multiple antennas 11 see halperin et al 11 mac sublayer protocol let us return land electrical engineering land computer science 11 mac sublayer protocol quite different ethernet due two factors fundamental wireless communication first radios nearly always half duplex meaning transmit listen noise bursts time single frequency received signal easily million times weaker transmitted signal heard time ethernet station waits ether goes silent starts transmitting receive noise burst back transmitting first bytes frame almost assuredly delivered correctly wireless collision detection mechanism work instead 11 tries avoid collisions protocol called csma ca csma collision avoidance protocol conceptually similar ethernet csma cd channel sensing sending exponential back collisions however station frame send starts random backoff except case used channel recently channel idle wait collision number slots backoff chosen range say case ofdm physical layer station waits channel idle sensing signal short period time called difs explain counts idle slots pausing frames sent sends frame counter reaches frame gets destination immediately sends short acknowledgement lack acknowledgement inferred indicate error whether collision otherwise case sender doubles backoff period tries continuing exponential backoff ethernet frame successfully transmitted maximum number retransmissions reached example timeline shown station first send frame sending stations b c become ready send see channel busy wait become idle shortly receives acknowledgement channel goes idle however rather sending frame right away colliding b c perform backoff c picks short backoff 304 medium access control sublayer thus sends first b pauses countdown senses c using channel resumes c received acknowledgement b soon completes backoff sends frame station sends data acks ack b ready send b sends data b wait idle backoff c ready send c wait idle c sends data acks b ack rest backoff acks c ack wait idle backoff time sending frame csma ca compared ethernet two main differences first starting backoffs early helps avoid collisions avoidance worthwhile collisions expensive entire frame transmitted even one occurs second acknowledgements used infer collisions collisions detected mode operation called dcf distributed coordination function station acts independently without kind central control standard also includes optional mode operation called pcf point coordination function access point controls activity cell like cellular base station however pcf used practice normally way prevent stations another nearby network transmitting competing traffic second problem transmission ranges different stations may different wire system engineered stations hear complexities rf propagation situation hold wireless stations consequently situations hidden terminal problem mentioned earlier illustrated arise since stations within radio range transmissions going one part cell may received elsewhere cell example station c transmitting station b senses channel hear anything falsely conclude may start transmitting b decision leads collision inverse situation exposed terminal problem illustrated fig b b wants send c listens channel hears sec wireless lans b wants send c mistakenly thinks transmission fail wants send b hear b busy range c radio b range radio c c transmitting transmitting b c b hidden terminal problem b exposed terminal problem transmission falsely concludes may send c even though may fact transmitting shown decision wastes transmission opportunity reduce ambiguities station sending 11 defines channel sensing consist physical sensing virtual sensing physical sensing simply checks medium see valid signal virtual sensing station keeps logical record channel use tracking nav network allocation vector frame carries nav field says long sequence frame part take complete stations overhear frame know channel busy period indicated nav regardless whether sense physical signal example nav data frame includes time needed send acknowledgement stations hear data frame defer acknowledgement period whether hear acknowledgement optional rts cts mechanism uses nav prevent terminals sending frames time hidden terminals shown example wants send b c station within range possibly within range b matter station within range b within range protocol starts decides wants send data b begins sending rts frame b request permission send frame b receives request answers cts frame indicate channel clear send upon receipt cts sends frame starts ack timer upon correct receipt data frame b responds ack frame completing exchange ack timer expires ack gets back treated collision whole protocol run backoff 306 b c medium access control sublayer rts data cts ack nav nav time virtual channel sensing using csma ca let us consider exchange viewpoints c c within range may receive rts frame realizes someone going send data soon information provided rts request estimate long sequence take including final ack good desists transmitting anything exchange completed updating record nav indicate channel busy shown hear rts hear cts also updates nav note nav signals transmitted internal reminders keep quiet certain period time however rts cts sounds good theory one designs proved little value practice several reasons seldom used known help short frames sent place rts ap everyone hear definition situations slows operation rts cts 11 little different maca protocol saw sec everyone hearing rts cts remains quiet duration allow ack get without collision help exposed terminals maca hidden terminals often hidden terminals csma ca already helps slowing stations transmit unsuccessfully whatever cause make likely transmissions succeed csma ca physical virtual sensing core 11 protocol however several mechanisms developed go mechanisms driven needs real operation look briefly first need look reliability contrast wired networks wireless networks noisy unreliable small part due interference kinds devices microwave ovens also use unlicensed ism bands use acknowledgements retransmissions little help probability getting frame small first place sec wireless lans main strategy used increase successful transmissions lower transmission rate slower rates use robust modulations likely received correctly given signal noise ratio many frames lost station lower rate frames delivered little loss station occasionally test higher rate see used another strategy improve chance frame getting undamaged send shorter frames probability bit error p probability n bit frame received entirely correctly p n example p probability receiving full ethernet frame 144 bits correctly less frames lost frames third long bits two thirds received correctly frames get fewer retransmissions needed shorter frames implemented reducing maximum size message accepted network layer alternatively 11 allows frames split smaller pieces called fragments checksum fragment size fixed standard parameter adjusted ap fragments individually numbered acknowledged using stop wait protocol e sender may transmit fragment k received acknowledgement fragment k channel acquired multiple fragments sent burst go one acknowledgement possibly retransmissions either whole frame successfully sent transmission time reaches maximum allowed nav mechanism keeps stations quiet next acknowledgement another mechanism see used allow burst fragments sent without stations sending frame middle second need discuss saving power battery life always issue mobile wireless devices 11 standard pays attention issue power management clients need waste power neither information send receive basic mechanism saving power builds beacon frames beacons periodic broadcasts ap e g every msec frames advertise presence ap clients carry system parameters identifier ap time long next beacon security settings clients set power management bit frames send ap tell entering power save mode mode client doze ap buffer traffic intended check incoming traffic client wakes every beacon checks traffic map sent part beacon map tells client buffered traffic client sends poll message ap sends buffered traffic client go back sleep next beacon sent another power saving mechanism called apsd automatic power save delivery also added 11 new mechanism ap buffers frames sends client client sends frames 308 medium access control sublayer ap client go sleep traffic send receive mechanism works well applications voip frequent traffic directions example voip wireless phone might use send receive frames every msec much frequently beacon interval msec dozing third last need examine quality service voip traffic preceding example competes peer peer traffic voip traffic suffer delayed due contention high bandwidth peer peer traffic even though voip bandwidth low delays likely degrade voice calls prevent degradation would like let voip traffic go ahead peer peer traffic higher priority ieee 11 clever mechanism provide kind quality service introduced set extensions name 11e works extending csma ca carefully defined intervals frames frame sent certain amount idle time required station may send frame check channel longer use trick define different time intervals different kinds frames five intervals depicted interval regular data frames called difs dcf interframe spacing station may attempt acquire channel send new frame medium idle difs usual contention rules apply binary exponential backoff may needed collision occurs shortest interval sifs short interframe spacing used allow parties single dialog chance go first examples include letting receiver send ack control frame sequences like rts cts letting sender transmit burst fragments sending next fragment waiting sifs prevents another station jumping frame middle exchange control frame next fragment may sent sifs high priority frame aifs1 regular dcf frame difs low priority frame aifs4 bad frame recovery done eifs ack time interframe spacing 11 two aifs arbitration interframe space intervals show examples two different priority levels short interval aifs1 smaller difs longer sifs used ap move voice high priority sec wireless lans traffic head line ap wait shorter interval sends voice traffic thus send regular traffic long interval aifs4 larger difs used background traffic deferred regular traffic ap wait longer interval sends traffic giving regular traffic opportunity transmit first complete quality service mechanism defines four different priority levels different backoff parameters well different idle parameters last time interval eifs extended interframe spacing used station received bad unknown frame report problem idea since receiver may idea going wait avoid interfering ongoing dialog two stations part quality service extensions notion txop transmission opportunity original csma ca mechanism let stations send one frame time design fine range rates increased 11a g one station might sending mbps another station sending mbps get send one frame mbps station takes nine times long ignoring fixed overheads mbps station send frame disparity unfortunate side effect slowing fast sender competing slow sender roughly rate slow sender example ignoring fixed overheads sending alone mbps mbps senders get rates sending together get mbps average stiff penalty fast sender issue known rate anomaly heusse et al transmission opportunities station gets equal amount airtime equal number frames stations send higher rate airtime get higher throughput example sending together mbps mbps senders get mbps mbps respectively 11 frame structure 11 standard defines three different classes frames air data control management header variety fields used within mac sublayer addition headers used physical layer mostly deal modulation techniques used discuss look format data frame example shown first comes frame control field made subfields first protocol version set allow future versions 11 operate time cell come type data control management subtype fields e g rts cts regular data frame without quality service set binary ds ds bits set indicate whether frame going coming network connected aps called distribution 310 medium access control sublayer system fragments bit means fragments follow retry bit marks retransmission frame sent earlier power management bit indicates sender going power save mode data bit indicates sender additional frames receiver protected frame bit indicates frame body encrypted security discuss security briefly next section finally order bit tells receiver higher layer expects sequence frames arrive strictly order bytes frame address address address sequence duration control recipient transmitter version type bits subtype 2312 data check sequence pwr retry protected order ds ds frag mgt data format 11 data frame second field data frame duration field tells long frame acknowledgement occupy channel measured microseconds present types frames including control frames stations use manage nav mechanism next come addresses data frames sent ap three addresses standard ieee format first address receiver second address transmitter obviously needed third address remember ap simply relay point frames travel client another point network perhaps distant client portal internet third address gives distant endpoint sequence field numbers frames duplicates detected bits available identify fragment carry number advanced new transmission data field contains payload bytes first bytes payload format known llc logical link control layer glue identifies higher layer protocol e g ip payloads passed last comes frame check sequence bit crc saw sec elsewhere management frames format data frames plus format data portion varies subtype e g parameters beacon frames control frames short like frames frame control duration frame check sequence fields however may one address data portion key information conveyed subtype field e g ack rts cts sec wireless lans services 11 standard defines services clients access points network connecting must conformant wireless lan services cluster several groups association service used mobile stations connect aps typically used station moves within radio range ap upon arrival station learns identity capabilities ap either beacon frames directly asking ap capabilities include data rates supported security arrangements power saving capabilities quality service support station sends request associate ap ap may accept reject request reassociation lets station change preferred ap facility useful mobile stations moving one ap another ap extended 11 lan like handover cellular network used correctly data lost consequence handover 11 like ethernet best effort service either station ap may also disassociate breaking relationship station use service shutting leaving network ap may use going maintenance stations must also authenticate send frames via ap authentication handled different ways depending choice security scheme 11 network open anyone allowed use otherwise credentials needed authenticate recommended scheme called wpa2 wifi protected access implements security defined 11i standard plain wpa interim scheme implements subset 11i skip go straight complete scheme wpa2 ap talk authentication server username password database determine station allowed access network alternatively pre shared key fancy name network password may configured several frames exchanged station ap challenge response lets station prove right credentials exchange happens association scheme used wpa called wep wired equivalent privacy scheme authentication preshared key happens association however use discouraged design flaws make wep easy compromise first practical demonstration wep broken came adam stubblefield summer intern stubblefield et al able code test attack one week much spent getting permission management buy wifi cards needed experiments software crack wep passwords freely available frames reach ap distribution service determines route destination local ap frames sent directly air otherwise forwarded wired network 312 medium access control sublayer integration service handles translation needed frame sent outside 11 lan arrive outside 11 lan common case connecting wireless lan internet data transmission 11 naturally provides data delivery service service lets stations transmit receive data using protocols described earlier chapter since 11 modeled ethernet transmission ethernet guaranteed reliable transmission 11 guaranteed reliable either higher layers must deal detecting correcting errors wireless broadcast signal information sent wireless lan kept confidential must encrypted goal accomplished privacy service manages details encryption decryption encryption algorithm wpa2 based aes advanced encryption standard u government standard approved keys used encryption determined authentication procedure handle traffic different priorities qos traffic scheduling service uses protocols described give voice video traffic preferential treatment compared best effort background traffic companion service also provides higher layer timer synchronization lets stations coordinate actions may useful media processing finally two services help stations manage use spectrum transmit power control service gives stations information need meet regulatory limits transmit power vary region region dynamic frequency selection service give stations information need avoid transmitting frequencies ghz band used radar proximity services 11 provides rich set functionality connecting nearby mobile clients internet huge success standard repeatedly amended add functionality perspective standard heading see hiertz et al broadband wireless indoors long let us go outdoors quite bit interesting networking called last mile deregulation telephone systems many countries competitors entrenched telephone companies often allowed offer local voice high speed internet service certainly plenty demand problem running fiber coax millions homes businesses prohibitively expensive competitor answer broadband wireless erecting big antenna hill outside town much easier cheaper digging many trenches stringing sec broadband wireless cables thus companies begun experiment providing multimegabit wireless communication services voice internet movies demand etc stimulate market ieee formed group standardize broadband wireless metropolitan area network next number available numbering space 16 standard got number informally technology called wimax worldwide interoperability microwave access use terms 16 wimax interchangeably first 16 standard approved december early versions provided wireless local loop fixed points line sight design soon changed make wimax competitive alternative cable dsl internet access january 16 revised support non line sight links using ofdm technology frequencies ghz ghz change made deployment much easier though stations still fixed locations rise 3g cellular networks posed threat promising high data rates mobility response 16 enhanced allow mobility vehicular speeds december mobile broadband internet access target current standard ieee 16 like standards 16 heavily influenced osi model including sub layers terminology service primitives unfortunately also like osi fairly complicated fact wimax forum created define interoperable subsets standard commercial offerings following sections give brief description highlights common forms 16 air interface treatment far complete leaves many details additional information wimax broadband wireless general see andrews et al comparison 16 11 3g point may thinking devise new standard use 11 3g fact wimax combines aspects 11 3g making like 4g technology like 11 wimax wirelessly connecting devices internet megabit sec speeds instead using cable dsl devices may mobile least portable wimax start adding low rate data side voice like cellular networks 16 designed carry ip packets air connect ip based wired network minimum fuss packets may carry peer peer traffic voip calls streaming media support range applications also like 11 based ofdm technology ensure good performance spite wireless signal degradations multipath fading mimo technology achieve high levels throughput however wimax like 3g thus unlike 11 several key respects key technical problem achieve high capacity efficient use spectrum large number subscribers coverage area get 314 medium access control sublayer high throughput typical distances least times larger 11 network consequently wimax base stations powerful 11 access points aps handle weaker signals larger distances base station uses power better antennas performs processing handle errors maximize throughput transmissions carefully scheduled base station particular subscriber spectrum use left chance csma ca may waste capacity collisions licensed spectrum expected case wimax typically around ghz u whole system substantially optimized 11 complexity worth considering large amount money involved licensed spectrum unlike 11 result managed reliable service good support quality service features 16 closely resembles 4g cellular networks standardized name lte long term evolution 3g cellular networks based cdma support voice data 4g cellular networks based ofdm mimo target data voice one application looks like wimax 4g collision course terms technology applications perhaps convergence unsurprising given internet killer application ofdm mimo best known technologies efficiently using spectrum 16 architecture protocol stack 16 architecture shown base stations connect directly provider backbone network turn connected internet base stations communicate stations wireless air interface two kinds stations exist subscriber stations remain fixed location example broadband internet access homes mobile stations receive service moving example car equipped wimax 16 protocol stack used across air interface shown general structure similar networks sublayers bottom layer deals transmission shown popular offerings 16 fixed mobile wimax different physical layer offering layers operate licensed spectrum ghz use ofdm different ways physical layer data link layer consists three sublayers bottom one deals privacy security far crucial public outdoor networks private indoor networks manages encryption decryption key management next comes mac common sublayer part part main protocols channel management located model base station completely controls system schedule downlink e base subscriber channels efficiently plays major role managing sec broadband wireless air interface mobile stations backbone network internet base station subscriber stations 16 architecture upper layers ip example service specific convergence sublayer data link layer mac common sublayer security sublayer release date fixed wimax ofdm 16a mobile wimax scalable ofdma 16e physical layer 16 protocol stack uplink e subscriber base channels well unusual feature mac sublayer unlike protocols completely connection oriented order provide quality service guarantees telephony multimedia communication service specific convergence sublayer takes place logical link sublayer protocols function provide interface network layer different convergence layers defined integrate seamlessly different upper layers important choice ip though standard defines mappings protocols ethernet atm since ip connectionless 16 mac sublayer connection oriented layer must map addresses connections 316 medium access control sublayer 16 physical layer wimax deployments use licensed spectrum around either ghz ghz 3g finding available spectrum key problem help 16 standard designed flexibility allows operation ghz ghz channels different sizes supported example mhz fixed wimax 25 mhz mhz mobile wimax transmissions sent channels ofdm technique described sec compared 11 16 ofdm design optimized make licensed spectrum wide area transmissions channel divided subcarriers longer symbol duration tolerate larger wireless signal degradations wimax parameters around times larger comparable 11 parameters example mobile wimax subcarriers mhz channel time send symbol subcarrier roughly sec symbols subcarrier sent qpsk qam qam modulation schemes described sec mobile subscriber station near base station received signal high signal noise ratio snr qam used send bits per symbol reach distant stations low snr qpsk used deliver bits per symbol data first coded error correction convolutional coding better schemes described sec coding common noisy channels tolerate bit errors without needing send retransmissions fact modulation coding methods sound familiar used many networks studied including 11 cable dsl net result base station support mbps downlink traffic mbps uplink traffic per mhz channel pair antennas one thing designers 16 like certain aspect way gsm damps work systems use equal frequency bands upstream downstream traffic implicitly assume much upstream traffic downstream traffic voice traffic symmetric part internet access certainly web surfing often downstream traffic upstream traffic ratio often designers chose flexible scheme dividing channel stations called ofdma orthogonal frequency division multiple access ofdma different sets subcarriers assigned different stations one station send receive 11 subcarriers would used one station send given moment added flexibility bandwidth assigned increase performance given subcarrier might faded one receiver due multipath effects clear another subcarriers assigned stations use best well asymmetric traffic stations usually alternate sending receiving method called tdd time division duplex sec broadband wireless alternative method station sends receives time different subcarrier frequencies called fdd frequency division duplex wimax allows methods tdd preferred easier implement flexible downlink uplink burst burst burst burst next frame burst uplink map preamble downlink map last frame subcarrier burst burst burst ranging guard time frame structure ofdma time division duplexing shows example frame structure repeated time starts preamble synchronize stations followed downlink transmissions base station first base station sends maps tell stations downlink uplink subcarriers assigned frame base station controls maps allocate different amounts bandwidth stations frame frame depending needs station next base station sends bursts traffic different subscriber mobile stations subcarriers times given map downlink transmissions end guard time stations switch receiving transmitting finally subscriber mobile stations send bursts traffic base station uplink positions reserved map one uplink bursts reserved ranging process new stations adjust timing request initial bandwidth connect base station since connection set stage new stations transmit hope collision 16 mac sublayer protocol data link layer divided three sublayers saw since study cryptography chap difficult explain security sublayer works suffice say encryption used keep secret data transmitted frame payloads encrypted headers 318 medium access control sublayer property means snooper see talking tell saying already know something cryptography follows oneparagraph explanation security sublayer know nothing cryptography likely find next paragraph terribly enlightening might consider rereading finishing chap subscriber connects base station perform mutual authentication rsa public key cryptography using x certificates payloads encrypted using symmetric key system either aes rijndael des cipher block chaining integrity checking uses sha bad let us look mac common sublayer part mac sublayer connection oriented point multipoint means one base station communicates multiple subscriber stations much design borrowed cable modems one cable headend controls transmissions multiple cable modems customer premises downlink direction fairly straightforward base station controls physical layer bursts used send information different subscriber stations mac sublayer simply packs frames structure reduce overhead several different options example mac frames may sent individually packed back back group uplink channel complicated since competing subscribers need access allocation tied closely quality service issue four classes service defined follows constant bit rate service real time variable bit rate service non real time variable bit rate service best effort service service 16 connection oriented connection gets one service classes determined connection set design different 11 ethernet connectionless mac sublayer constant bit rate service intended transmitting uncompressed voice service needs send predetermined amount data predetermined time intervals accommodated dedicating certain bursts connection type bandwidth allocated bursts available automatically without need ask one real time variable bit rate service compressed multimedia soft real time applications amount bandwidth needed instant may vary accommodated base station polling subscriber fixed interval ask much bandwidth needed time sec broadband wireless non real time variable bit rate service heavy transmissions real time large file transfers service base station polls subscriber often rigidly prescribed time intervals connections service also use best effort service described next request bandwidth best effort service everything else polling done subscriber must contend bandwidth best effort subscribers requests bandwidth sent bursts marked uplink map available contention request successful success noted next downlink map successful unsuccessful subscriber try later minimize collisions ethernet binary exponential backoff algorithm used 16 frame structure mac frames begin generic header header followed optional payload optional checksum crc illustrated payload needed control frames example requesting channel slots checksum surprisingly also optional due error correction physical layer fact attempt ever made retransmit realtime frames retransmissions attempted even bother checksum checksum standard ieee crc acknowledgements retransmissions used reliability bits e c type c ek length connection id header crc bits b type bytes needed connection id header crc data crc generic frame b bandwidth request frame quick rundown header fields follows ec bit tells whether payload encrypted type field identifies frame type mostly telling whether packing fragmentation present ci field indicates presence absence final checksum ek field tells encryption keys used length field gives complete length frame including header connection identifier tells connection frame belongs finally header crc field checksum header using polynomial x x x 16 protocol many kinds frames example different type frame one used request bandwidth shown b 320 medium access control sublayer starts bit instead bit otherwise similar generic header except second third bytes form bit number telling much bandwidth needed carry specified number bytes bandwidth request frames carry payload full frame crc great deal could said 16 place say information please consult ieee 16 standard bluetooth l ericsson company became interested connecting mobile phones devices e g laptops without cables together four companies ibm intel nokia toshiba formed sig special interest group e consortium develop wireless standard interconnecting computing communication devices accessories using short range low power inexpensive wireless radios project named bluetooth harald blaatand bluetooth ii 981 viking king unified e conquered denmark norway also without cables bluetooth released july since sig never looked back manner consumer electronic devices use bluetooth mobile phones laptops headsets printers keyboards mice gameboxes watches music players navigation units bluetooth protocols let devices find connect act called pairing securely transfer data protocols evolved past decade initial protocols stabilized higher data rates added bluetooth release bluetooth used device pairing combination 11 high throughput data transfer release december specified low power operation handy people want change batteries regularly devices around house cover main aspects bluetooth bluetooth architecture let us start study bluetooth system quick overview contains intended basic unit bluetooth system piconet consists master node seven active slave nodes within distance meters multiple piconets exist large room even connected via bridge node takes part multiple piconets interconnected collection piconets called scatternet addition seven active slave nodes piconet parked nodes net devices master switched lowpower state reduce drain batteries parked state device sec bluetooth piconet piconet active slave parked slave bridge slave two piconets connected form scatternet anything except respond activation beacon signal master two intermediate power states hold sniff also exist concern us reason master slave design designers intended facilitate implementation complete bluetooth chips consequence decision slaves fairly dumb basically whatever master tells heart piconet centralized tdm system master controlling clock determining device gets communicate time slot communication master slave direct slave slave communication possible bluetooth applications network protocols provide channels communicating entities let application designers figure want use example 11 specify whether users use notebook computers reading email surfing web something else contrast bluetooth sig specifies particular applications supported provides different protocol stacks one time writing applications called profiles unfortunately approach leads large amount complexity omit complexity briefly look profiles see clearly bluetooth sig trying accomplish six profiles different uses audio video example intercom profile allows two telephones connect walkie talkies headset hands free profiles provide voice communication headset base station might used hands free telephony driving car 322 medium access control sublayer profiles streaming stereo quality audio video say portable music player headphones digital camera tv human interface device profile connecting keyboards mice computers profiles let mobile phone computer receive images camera send images printer perhaps interest profile use mobile phone remote control bluetooth enabled tv still profiles enable networking personal area network profile lets bluetooth devices form ad hoc network remotely access another network 11 lan via access point dial networking profile actually original motivation whole project allows notebook computer connect mobile phone containing built modem without using wires profiles higher layer information exchange also defined synchronization profile intended loading data mobile phone leaves home collecting data returns skip rest profiles except mention profiles serve building blocks profiles built generic access profile profiles built provides way establish maintain secure links channels master slaves generic profiles define basics object exchange audio video transport utility profiles used widely functions emulating serial line especially useful many legacy applications really necessary spell applications detail provide different protocol stacks one probably number different working groups devised different parts standard one focused specific problem generated profile think conway law action april issue datamation magazine melvin conway observed assign n people write compiler get n pass compiler generally software structure mirrors structure group produced would probably possible get away two protocol stacks instead one file transfer one streaming real time communication bluetooth protocol stack bluetooth standard many protocols grouped loosely layers shown first observation make structure follow osi model tcp ip model model model bottom layer physical radio layer corresponds fairly well physical layer osi models deals radio transmission modulation many concerns goal making system inexpensive become mass market item sec bluetooth applications profile profile profile rfcomm service discovery upper layers l2cap host controller interface link manager datalink layer link control baseband radio physical layer bluetooth protocol architecture link control baseband layer somewhat analogous mac sublayer also includes elements physical layer deals master controls time slots slots grouped frames next come two protocols use link control protocol link manager handles establishment logical channels devices including power management pairing encryption quality service lies host controller interface line interface convenience implementation typically protocols line implemented bluetooth chip protocols line implemented bluetooth device hosts chip link protocol line l2cap logical link control adaptation protocol frames variable length messages provides reliability needed many protocols use l2cap two utility protocols shown service discovery protocol used locate services within network rfcomm radio frequency communication protocol emulates standard serial port found pcs connecting keyboard mouse modem among devices top layer applications located profiles represented vertical boxes define slice protocol stack particular purpose specific profiles headset profile usually contain protocols needed application others example profiles may include l2cap packets send skip l2cap steady flow audio samples following sections examine bluetooth radio layer various link protocols since roughly correspond physical mac sublayers procotol stacks studied 324 medium access control sublayer bluetooth radio layer radio layer moves bits master slave vice versa low power system range meters operating ghz ism band 11 band divided channels mhz coexist networks using ism band frequency hopping spread spectrum used hops sec slots dwell time sec nodes piconet hop frequencies simultaneously following slot timing pseudorandom hop sequence dictated master unfortunately turned early versions bluetooth 11 interfered enough ruin transmissions companies responded banning bluetooth altogether eventually technical solution devised solution bluetooth adapt hop sequence exclude channels rf signals process reduces harmful interference called adaptive frequency hopping three forms modulation used send bits channel basic scheme use frequency shift keying send bit symbol every microsecond giving gross data rate mbps enhanced rates introduced version bluetooth rates use phase shift keying send either bits per symbol gross data rates mbps enhanced rates used data portion frames bluetooth link layers link control baseband layer closest thing bluetooth mac sublayer turns raw bit stream frames defines key formats simplest form master piconet defines series sec time slots master transmissions starting even slots slaves transmissions starting odd ones scheme traditional time division multiplexing master getting half slots slaves sharing half frames slots long frame overhead bits access code header plus settling time 260 sec per hop allow inexpensive radio circuits become stable payload frame encrypted confidentiality key chosen master slave connect hops happen frames frame result slot frame much efficient slot frame overhead constant data sent link manager protocol sets logical channels called links carry frames master slave device discovered pairing procedure followed make sure two devices allowed communicate link used old pairing method devices must configured four digit pin personal identification number matching pin device would know connecting sec bluetooth right remote device however unimaginative users devices default pins meant method provided little security practice new secure simple pairing method enables users confirm devices displaying passkey observe passkey one device enter second device method secure users choose set pin merely confirm longer device generated passkey course used devices limited input output hands free headset pairing complete link manager protocol sets links two main kinds links exist carry user data first sco synchronous connection oriented link used real time data telephone connections type link allocated fixed slot direction slave may three sco links master sco link transmit one 000 bps pcm audio channel due time critical nature sco links frames sent never retransmitted instead forward error correction used increase reliability kind acl asynchronous connectionless link type link used packet switched data available irregular intervals acl traffic delivered best effort basis guarantees given frames lost may retransmitted slave may one acl link master data sent acl links come l2cap layer layer four major functions first accepts packets kb upper layers breaks frames transmission far end frames reassembled packets second handles multiplexing demultiplexing multiple packet sources packet reassembled l2cap layer determines upper layer protocol hand example rfcomm service discovery third l2cap handles error control retransmission detects errors resends packets acknowledged finally l2cap enforces quality service requirements multiple links bluetooth frame structure bluetooth defines several frame formats important shown two forms begins access code usually identifies master slaves within radio range two masters tell traffic next comes bit header containing typical mac sublayer fields frame sent basic rate data field comes next bits five slot transmission single time slot format except data field bits frame sent enhanced rate data portion may two three times many bits symbol carries bits instead 326 bits medium access control sublayer 2744 access code header data 1x rate addr type f crc repeated times bits 8184 access code header guard sync data 2x 3x rate trailer x microsec slots basic rate data frame top b enhanced rate data frame bottom typical bluetooth data frame basic b enhanced data rates bit data preceded guard field synchronization pattern used switch faster data rate access code header carried basic rate data portion carried faster rate enhanced rate frames end short trailer let us take quick look common header address field identifies eight active devices frame intended type field identifies frame type acl sco poll null type error correction used data field many slots long frame flow bit asserted slave buffer full receive data bit enables primitive form flow control acknowledgement bit used piggyback ack onto frame sequence bit used number frames detect retransmissions protocol stop wait bit enough comes bit header checksum entire bit header repeated three times form bit header shown receiving side simple circuit examines three copies bit three bit accepted majority opinion wins thus bits transmission capacity used send bits header reason reliably send data noisy environment using cheap low powered mw devices little computing capacity great deal redundancy needed various formats used data field acl sco frames basic rate sco frames simple example study data field always bits three variants defined permitting bits actual payload rest used error correction reliable version bit payload contents repeated three times header work capacity frame follows since slave may use odd slots gets slots sec master bit sec bluetooth payload channel capacity slave 000 bps channel capacity master capacity exactly enough single full duplex pcm voice channel hop rate hops sec chosen despite raw bandwidth mbps single full duplex uncompressed voice channel completely saturate piconet efficiency result spending capacity settling time headers repetition coding shortcoming highlights value enhanced rates frames single slot much said bluetooth space say curious bluetooth specification contains details rfid looked mac designs lans mans pans last example study category low end wireless devices people may recognize forming computer network rfid radio frequency identification tags readers described sec rfid technology takes many forms used smartcards implants pets passports library books form look developed quest epc electronic product code started auto id center massachusetts institute technology epc replacement barcode carry larger amount information electronically readable distances even visible different technology example rfid used passports must placed quite close reader perform transaction ability communicate distance makes epcs relevant studies epcglobal formed commercialize rfid technology developed auto id center effort got boost walmart required top suppliers label shipments rfid tags widespread deployment hampered difficulty competing cheap printed barcodes new uses drivers licenses growing describe second generation technology informally called epc gen epcglobal epc gen architecture architecture epc gen rfid network shown two key components tags readers rfid tags small inexpensive devices unique bit epc identifier small amount memory read written rfid reader memory might used record location history item example moves supply chain 328 medium access control sublayer often tags look like stickers placed example pairs jeans shelves store sticker taken antenna printed onto tiny dot middle rfid integrated circuit alternatively rfid tags integrated object driver license cases tags battery must gather power radio transmissions nearby rfid reader run kind tag called class tag distinguish capable tags batteries reader signal rfid reader backscatter signal rfid tag rfid architecture readers intelligence system analogous base stations access points cellular wifi networks readers much powerful tags power sources often multiple antennas charge tags send receive messages commonly multiple tags within reading range readers must solve multiple access problem may multiple readers contend area main job reader inventory tags neighborhood discover identifiers nearby tags inventory accomplished physical layer protocol tag identification protocol outlined following sections epc gen physical layer physical layer defines bits sent rfid reader tags much uses methods sending wireless signals seen previously u transmissions sent unlicensed 928 mhz ism band band falls uhf ultra high frequency range tags referred uhf rfid tags reader performs frequency hopping least every msec spread signal across channel limit interference satisfy regulatory requirements reader tags use forms ask amplitude shift keying modulation described sec encode bits take turns send bits link half duplex sec rfid two main differences physical layers studied first reader always transmitting signal regardless whether reader tag communicating naturally reader transmits signal send bits tags tags send bits reader reader transmits fixed carrier signal carries bits tags harvest signal get power need run otherwise tag would able transmit first place send data tag changes whether reflecting signal reader like radar signal bouncing target absorbing method called backscatter differs wireless situations seen far sender receiver never transmit time backscatter low energy way tag create weak signal shows reader reader decode incoming signal must filter outgoing signal transmitting tag signal weak tags send bits reader low rate tags receive even sense transmissions tags second difference simple forms modulation used implemented tag runs little power costs cents make send data tags reader uses two amplitude levels bits determined either depending long reader waits low power period tag measures time low power periods compares time reference measured preamble shown 1s longer 0s tag responses consist tag alternating backscatter state fixed intervals create series pulses signal anywhere one eight pulse periods used encode depending need reliability 1s fewer transitions 0s shown example two pulse period coding reader backscatter reader tag tag power time reader tag backscatter signals epc gen tag identification layer inventory nearby tags reader needs receive message tag gives identifier tag situation multiple access problem number tags unknown general case reader might 330 medium access control sublayer broadcast query ask tags send identifiers however tags replied right away would collide much way stations classic ethernet seen many ways tackling multiple access problem chapter closest protocol current situation tags hear others transmissions slotted aloha one earliest protocols studied protocol adapted use gen rfid sequence messages used identify tag shown first slot slot reader sends query message start process qrepeat message advances next slot reader also tells tags range slots randomize transmissions using range necessary reader synchronizes tags starts process unlike stations ethernet tags wake message time choosing rfid reader rfid tag query slot qrepeat slot1 qrepeat slot rn16 slot time ack epc identifier qrepeat slot qrepeat slot n example message exchange identify tag tags pick random slot reply tag replies slot however tags send identifiers first reply instead tag sends short bit random number rn16 message collision reader receives message sends ack message stage tag acquired slot sends epc identifier reason exchange epc identifiers long collisions messages would expensive instead short exchange used test whether tag safely use slot send identifier identifier successfully transmitted tag temporarily stops responding new query messages remaining tags identified sec rfid key problem reader adjust number slots avoid collisions without using many slots performance suffers adjustment analogous binary exponential backoff ethernet reader sees many slots responses many slots collisions send qadjust message decrease increase range slots tags responding rfid reader perform operations tags example select subset tags running inventory allowing collect responses say tagged jeans tagged shirts reader also write data tags identified feature could used record point sale relevant information tag identification message formats format query message shown example reader tag message message compact downlink rates limited kbps kbps command field carries code identify message query bits command dr tr sel session target q crc physical parameters tag selection format query message next flags dr tr determine physical layer parameters reader transmissions tag responses example response rate may set kbps kbps skip details flags come three fields sel session target select tags respond well readers able select subset identifiers tags keep track four concurrent sessions whether identified sessions way multiple readers operate overlapping coverage areas using different sessions next important parameter command q field defines range slots tags respond 2q finally crc protect message fields bits shorter crcs seen query message much shorter packets tag reader messages simpler since reader control knows message expect response transmissions tag responses simply carry data epc identifier 332 medium access control sublayer originally tags identification purposes however grown time resemble small computers research tags sensors able run small programs gather process data sample et al one vision technology internet things connects objects physical world internet welbourne et al gershenfeld et al data link layer switching many organizations multiple lans wish connect would convenient could join lans together make larger lan fact connections made devices called bridges ethernet switches described sec modern name bridges provide functionality goes beyond classic ethernet ethernet hubs make easy join multiple lans larger faster network shall use terms bridge switch interchangeably bridges operate data link layer examine data link layer addresses forward frames since supposed examine payload field frames forward handle ip packets well kinds packets appletalk packets contrast routers examine addresses packets route based work protocols designed handle section look bridges work used join multiple physical lans single logical lan also look reverse treat one physical lan multiple logical lans called vlans virtual lans technologies provide useful flexibility managing networks comprehensive treatment bridges switches related topics see seifert edwards perlman uses bridges getting technology bridges let us take look common situations bridges used mention three reasons single organization may end multiple lans first many university corporate departments lans connect personal computers servers devices printers since goals various departments differ different departments may set different lans without regard departments sooner later though need interaction bridges needed example multiple lans come existence due autonomy owners sec data link layer switching second organization may geographically spread several buildings separated considerable distances may cheaper separate lans building connect bridges long distance fiber optic links run cables single central switch even laying cables easy limits lengths e g twisted pair gigabit ethernet network would work longer cables due excessive signal attenuation round trip delay solution partition lan install bridges join pieces increase total physical distance covered third may necessary split logically single lan separate lans connected bridges accommodate load many large universities example thousands workstations available student faculty computing companies may also thousands employees scale system precludes putting workstations single lan computers ports ethernet hub stations allowed single classic ethernet even possible wire workstations together putting stations ethernet hub classic ethernet would add capacity stations share fixed amount bandwidth stations less average bandwidth per station however two separate lans twice capacity single lan bridges let lans joined together keeping capacity key send traffic onto ports needed lan run full speed behavior also increases reliability since single lan defective node keeps outputting continuous stream garbage clog entire lan deciding forward forward bridges act like fire doors building preventing single node gone berserk bringing entire system make benefits easily available ideally bridges completely transparent possible go buy bridges plug lan cables bridges everything work perfectly instantly hardware changes required software changes required setting address switches downloading routing tables parameters nothing plug cables walk away furthermore operation existing lans affected bridges far stations concerned observable difference whether part bridged lan easy move stations around bridged lan move around single lan surprisingly enough actually possible create bridges transparent two algorithms used backward learning algorithm stop traffic sent needed spanning tree algorithm break loops may formed switches cabled together willy nilly let us take look algorithms turn learn magic accomplished 334 medium access control sublayer learning bridges topology two lans bridged together shown two cases left hand side two multidrop lans classic ethernets joined special station bridge sits lans right hand side lans point point cables including one hub joined together bridges devices stations hub attached lan technology ethernet bridges better known ethernet switches port b b1 e b port b1 f b2 e h1 c hub f g bridge bridge g c b bridge connecting two multidrop lans b bridges hub connecting seven point point stations bridges developed classic ethernets use often shown topologies multidrop cables however topologies encountered today comprised point point cables switches bridges work way settings stations attached port bridge belong collision domain different collision domain ports one station classic ethernet hub half duplex link csma cd protocol used send frames difference however bridged lans built bridge multidrop lans bridge added new station multidrop lans bridge point point lans hubs either connected bridge preferably replaced bridge increase performance b bridges replaced one hub different kinds cables also attached one bridge example cable connecting bridge b1 bridge b2 b might long distance fiber optic link cable connecting bridges stations might short haul twisted pair line arrangement useful bridging lans different buildings let us consider happens inside bridges bridge operates promiscuous mode accepts every frame transmitted stations sec data link layer switching attached ports bridge must decide whether forward discard frame former port output frame decision made using destination address example consider topology station sends frame station b bridge b1 receive frame port frame immediately discarded without ado already correct port however topology b suppose sends frame bridge b1 receive frame port output port bridge b2 receive frame port output port simple way implement scheme big hash table inside bridge table list possible destination output port belongs example b table b1 would list belonging port since b1 know port put frames reach fact forwarding happen later frame hits b2 interest b1 bridges first plugged hash tables empty none bridges know destinations use flooding algorithm every incoming frame unknown destination output ports bridge connected except one arrived time goes bridges learn destinations destination known frames destined put proper port flooded algorithm used bridges backward learning mentioned bridges operate promiscuous mode see every frame sent ports looking source addresses tell machines accessible ports example bridge b1 b sees frame port coming c knows c must reachable via port makes entry hash table subsequent frame addressed c coming b1 port forwarded port topology change machines bridges powered moved around handle dynamic topologies whenever hash table entry made arrival time frame noted entry whenever frame whose source already table arrives entry updated current time thus time associated every entry tells last time frame machine seen periodically process bridge scans hash table purges entries minutes old way computer unplugged lan moved around building plugged somewhere else within minutes back normal operation without manual intervention algorithm also means machine quiet minutes traffic sent flooded next sends frame routing procedure incoming frame depends port arrives source port address destined destination address procedure follows 336 medium access control sublayer port destination address source port discard frame port destination address source port different forward frame destination port destination port unknown use flooding send frame ports except source port might wonder whether first case occur point point links answer occur hubs used connect group computers bridge example shown b stations e f connected hub h turn connected bridge b2 e sends frame f hub relay b2 well f hubs wire ports together frame input one port simply output ports frame arrive b2 port already right output port reach destination bridge b2 need discard frame frame arrives algorithm must applied usually implemented special purpose vlsi chips chips lookup update table entry microseconds bridges look mac addresses decide forward frames possible start forwarding soon destination header field come rest frame arrived provided output line available course design reduces latency passing bridge well number frames bridge must able buffer referred cut switching wormhole routing usually handled hardware look operation bridge terms protocol stacks understand means link layer device consider frame sent station station configuration lans ethernet frame pass one bridge protocol stack view processing shown packet comes higher layer descends ethernet mac layer acquires ethernet header also trailer shown figure unit passed physical layer goes cable picked bridge bridge frame passed physical layer ethernet mac layer layer extended processing compared ethernet mac layer station passes frame relay still within mac layer bridge relay function uses ethernet mac header determine handle frame case passes frame ethernet mac layer port used reach station frame continues way general case relays given layer rewrite headers layer vlans provide example shortly case bridge look inside frame learn carrying ip packet irrelevant sec data link layer switching station station network packet ethernet mac eth packet eth packet physical eth packet eth packet packet bridge relay eth packet eth packet eth packet eth packet wire wire protocol processing bridge bridge processing would violate protocol layering also note bridge k ports k instances mac physical layers value k simple example spanning tree bridges increase reliability redundant links used bridges example two links parallel pair bridges design ensures one link cut network partitioned two sets computers talk frame f0 f1 b1 bridge f2 f3 b2 f4 redundant links bridges two parallel links however redundancy introduces additional problems creates loops topology example problems seen looking frame sent previously unobserved destination handled bridge follows normal rule handling unknown destinations flood frame call frame reaches bridge b1 frame f bridge sends copies frame ports 338 medium access control sublayer consider bridge ports connect b1 b2 though frame sent ports since two links b1 b2 two copies frame reach b2 shown f f shortly thereafter bridge b2 receives frames however know copies frame rather two different frames sent one bridge b2 takes f sends copies ports also takes f sends copies ports produces frames f f sent along two links back b1 bridge b1 sees two new frames unknown destinations copies cycle goes forever solution difficulty bridges communicate overlay actual topology spanning tree reaches every bridge effect potential connections bridges ignored interest constructing fictitious loop free topology subset actual topology example see five bridges interconnected also stations connected station connects one bridge redundant connections bridges frames forwarded loops links used topology thought graph bridges nodes point point links edges graph reduced spanning tree cycles definition dropping links shown dashed lines using spanning tree exactly one path every station every station bridges agreed spanning tree forwarding stations follows spanning tree since unique path source destination loops impossible station root bridge b1 b3 b5 bridge b2 b4 link part spanning tree spanning tree connecting five bridges dashed lines links part spanning tree build spanning tree bridges run distributed algorithm bridge periodically broadcasts configuration message ports sec data link layer switching neighbors processes messages receives bridges described next messages forwarded since purpose build tree used forwarding bridges must first choose one bridge root spanning tree make choice include identifier based mac address configuration message well identifier bridge believe root mac addresses installed manufacturer guaranteed unique worldwide makes identifiers convenient unique bridges choose bridge lowest identifier root enough messages exchanged spread news bridges agree bridge root bridge b1 lowest identifier becomes root next tree shortest paths root every bridge constructed bridges b2 b3 reached bridge b1 directly one hop shortest path bridge b4 reached two hops via either b2 b3 break tie path via bridge lowest identifier chosen b4 reached via b2 bridge b5 reached two hops via b3 find shortest paths bridges include distance root configuration messages bridge remembers shortest path finds root bridges turn ports part shortest path although tree spans bridges links even bridges necessarily present tree happens turning ports prunes links network prevent loops even spanning tree established algorithm continues run normal operation automatically detect topology changes update tree algorithm constructing spanning tree invented radia perlman job solve problem joining lans without loops given week came idea spanning tree algorithm day fortunately left enough time write poem perlman think shall never see graph lovely tree tree whose crucial property loop free connectivity tree must sure span packets reach every lan first root must selected id elected least cost paths root traced tree paths placed mesh made folks like bridges find spanning tree 340 medium access control sublayer spanning tree algorithm standardized ieee 1d used many years revised rapidly find new spanning tree topology change detailed treatment bridges see perlman repeaters hubs bridges switches routers gateways far book looked variety ways get frames packets one computer another mentioned repeaters hubs bridges switches routers gateways devices common use differ subtle subtle ways since many probably worth taking look together see similarities differences key understanding devices realize operate different layers illustrated layer matters different devices use different pieces information decide switch typical scenario user generates data sent remote machine data passed transport layer adds header example tcp header passes resulting unit network layer network layer adds header form network layer packet e g ip packet b see ip packet shaded gray packet goes data link layer adds header checksum crc gives resulting frame physical layer transmission example lan application layer application gateway transport layer transport gateway network layer router data link layer bridge switch physical layer repeater hub packet supplied network layer frame packet tcp header header header user data crc frame built data link layer b device layer b frames packets headers let us look switching devices see relate packets frames bottom physical layer find repeaters analog devices work signals cables connected signal appearing one cable cleaned amplified put another cable repeaters understand frames packets headers understand symbols encode bits volts classic ethernet example sec data link layer switching designed allow four repeaters would boost signal extend maximum cable length meters meters next come hubs hub number input lines joins electrically frames arriving lines sent others two frames arrive time collide coaxial cable lines coming hub must operate speed hubs differ repeaters usually amplify incoming signals designed multiple input lines differences slight like repeaters hubs physical layer devices examine link layer addresses use way let us move data link layer find bridges switches studied bridges length bridge connects two lans like hub modern bridge multiple ports usually enough input lines certain type unlike hub port isolated collision domain port full duplex point point line csma cd algorithm needed frame arrives bridge extracts destination address frame header looks table see send frame ethernet address bit destination address shown bridge outputs frame port needed forward multiple frames time bridges offer much better performance hubs isolation bridge ports also means input lines may run different speeds possibly even different network types common example bridge ports connect mbps ethernet buffering within bridge needed accept frame one port transmit frame different port frames come faster retransmitted bridge may run buffer space start discarding frames example gigabit ethernet pouring bits mbps ethernet top speed bridge buffer hoping run memory problem still exists even ports run speed one port may sending frames given destination port bridges originally intended able join different kinds lans example ethernet token ring lan however never worked well differences lans different frame formats require copying reformatting takes cpu time requires new checksum calculation introduces possibility undetected errors due bad bits bridge memory different maximum frame lengths also serious problem good solution basically frames large forwarded must discarded much transparency two areas lans differ security quality service lans link layer encryption example 11 example ethernet lans quality service features priorities example 11 example ethernet consequently 342 medium access control sublayer frame must travel lans security quality service expected sender may able provided reasons modern bridges usually work one network type routers come soon used instead join networks different types switches modern bridges another name differences marketing technical issues points worth knowing bridges developed classic ethernet use tend join relatively lans thus relatively ports term switch popular nowadays also modern installations use point point links twisted pair cables individual computers plug directly switch thus switch tend many ports finally switch also used general term bridge functionality clear hand switch may refer ethernet switch completely different kind device makes forwarding decisions telephone switch far seen repeaters hubs actually quite similar well bridges switches even similar move routers different packet comes router frame header trailer stripped packet located frame payload field shaded passed routing software software uses packet header choose output line ip packet packet header contain bit ipv4 bit ipv6 address bit ieee address routing software see frame addresses even know whether packet came lan point point line study routers routing chap another layer find transport gateways connect two computers use different connection oriented transport protocols example suppose computer using connection oriented tcp ip protocol needs talk computer using different connection oriented transport protocol called sctp transport gateway copy packets one connection reformatting need finally application gateways understand format contents data translate messages one format another email gateway could translate internet messages sms messages mobile phones example like switch gateway somewhat general term refers forwarding process runs high layer virtual lans early days local area networking thick yellow cables snaked cable ducts many office buildings every computer passed plugged thought given computer belonged lan people adjacent offices put lan whether belonged together geography trumped corporate organization charts sec data link layer switching advent twisted pair hubs 1990s changed buildings rewired considerable expense rip yellow garden hoses install twisted pairs every office central wiring closets end corridor central machine room illustrated vice president charge wiring visionary category twisted pairs installed bean counter existing category telephone wiring used replaced years later fast ethernet emerged cable duct hub co rrid r switch hub twisted pair hub office building centralized wiring using hubs switch today cables changed hubs become switches wiring pattern still pattern makes possible configure lans logically rather physically example company wants k lans could buy k switches carefully choosing connectors plug switches occupants lan chosen way makes organizational sense without much regard geography matter lan nearly organizations lans interconnected short yes often matters network administrators like group users lans reflect organizational structure rather physical layout building variety reasons one issue security one lan might host web servers computers intended public use another lan might host computers containing records human resources department passed outside department situation putting computers single lan letting servers accessed lan makes sense management tends frown hearing arrangement impossible 344 medium access control sublayer second issue load lans heavily used others may desirable separate example folks research running kinds nifty experiments sometimes get hand saturate lan folks management may enthusiastic donating capacity using videoconferencing help might impress management need install faster network third issue broadcast traffic bridges broadcast traffic location destination unknown upper layer protocols use broadcasting well example user wants send packet ip address x know mac address put frame study question chap briefly summarized answer broadcasts frame containing question owns ip address x waits answer number computers lan grows number broadcasts broadcast consumes lan capacity regular frame delivered every computer lan keeping lans larger need impact broadcast traffic reduced related broadcasts problem network interface break misconfigured begin generating endless stream broadcast frames network really unlucky frames elicit responses lead ever traffic result broadcast storm entire lan capacity occupied frames machines interconnected lans crippled processing discarding frames broadcast first might appear broadcast storms could limited scope separating lans bridges switches goal achieve transparency e machine moved different lan across bridge without anyone noticing bridges forward broadcast frames seen companies might want multiple lans restricted scopes let us get back problem decoupling logical topology physical topology building physical topology reflect organizational structure add work cost even centralized wiring switches example two people department work different buildings may easier wire different switches part different lans even case user might shifted within company one department another without changing offices might change offices without changing departments might result user wrong lan administrator changes user connector one switch another furthermore number computers belong different departments may good match number ports switches departments may small others big require multiple switches results wasted switch ports used many companies organizational changes occur time meaning system administrators spend lot time pulling plugs pushing back sec data link layer switching somewhere else also cases change made twisted pair user machine far correct switch e g wrong building available switch ports wrong lan response customer requests flexibility network vendors began working way rewire buildings entirely software resulting concept called vlan virtual lan standardized ieee committee widely deployed many organizations let us take look additional information vlans see seifert edwards vlans based vlan aware switches set vlan based network network administrator decides many vlans computers vlan vlans called often vlans informally named colors since possible print color diagrams showing physical layout machines members red lan red members green lan green way physical logical layouts visible single view example consider bridged lan nine machines belong g gray vlan five belong w white vlan machines gray vlan spread across two switches including two machines connect switch via hub gray station g g gray white port g gray port gw hub w g b1 bridge w gw b2 white port g g g g w w white station two vlans gray white bridged lan make vlans function correctly configuration tables set bridges tables tell vlans accessible via ports frame comes say gray vlan must forwarded ports marked g holds ordinary e unicast traffic bridges learned location destination well multicast broadcast traffic note port may labeled multiple vlan colors example suppose one gray stations plugged bridge b1 sends frame destination observed beforehand bridge b1 receive frame see came machine gray 346 medium access control sublayer vlan flood frame ports labeled g except incoming port frame sent five gray stations attached b1 well link b1 bridge b2 bridge b2 frame similarly forwarded ports labeled g sends frame one station hub transmit frame stations hub labels connects machines vlans frame sent ports without g label bridge knows machines gray vlan reached via ports example frame sent bridge b1 bridge b2 machines gray vlan connected b2 looking white vlan see bridge b2 port connects bridge b1 labeled w means frame white vlan forwarded bridge b2 bridge b1 behavior correct stations white vlan connected b1 ieee 1q standard implement scheme bridges need know vlan incoming frame belongs without information example bridge b2 gets frame bridge b1 know whether forward frame gray white vlan designing new type lan would easy enough add vlan field header ethernet dominant lan spare fields lying around vlan identifier ieee committee problem thrown lap much discussion unthinkable changed ethernet header new format published ieee standard 1q issued new format contains vlan tag examine shortly surprisingly changing something well established ethernet header entirely trivial questions come mind need throw several hundred million existing ethernet cards generates new fields happens frames already maximum size course committee painfully aware problems come solutions key solution realize vlan fields actually used bridges switches user machines thus fig really essential present lines going end stations long line bridges also use vlans bridges vlan aware fact makes design feasible sec data link layer switching throwing existing ethernet cards answer remember committee could even get people change type field length field imagine reaction announcement existing ethernet cards thrown however new ethernet cards 1q compliant correctly fill vlan fields computers switches vlan aware first vlan aware bridge touch frame adds vlan fields last one road removes example mixed topology shown figure vlan aware computers generate tagged e 1q frames directly switching uses tags shaded symbols vlan aware empty ones legacy frame b3 tagged frame b1 b5 b2 b4 b6 vlan aware host bridge legacy bridge host bridged lan partly vlan aware shaded symbols vlan aware empty ones 1q frames colored depending port received method work machines port must belong vlan reduces flexibility example property holds ports individual computer connects bridge port hub connects bridge b2 additionally bridge use higher layer protocol select color way frames arriving port might placed different vlans depending whether carry ip packets ppp frames methods possible supported 1q one example mac address used select vlan color might useful frames coming nearby 11 lan laptops send frames via different ports move one mac address would mapped fixed vlan regardless port entered lan problem frames longer bytes 1q raised limit bytes luckily vlan aware computers switches must support longer frames let us take look 1q frame format shown change addition pair byte fields first one 348 medium access control sublayer vlan protocol id always value 0x8100 since number greater ethernet cards interpret type rather length legacy card frame moot since frames supposed sent legacy cards 1q destination source length address address destination source address address vlan protocol id 0x8100 data tag length pri c f vlan identifier pad data checksum pad checksum legacy 1q ethernet frame formats second byte field contains three subfields main one vlan identifier occupying low order bits whole thing color vlan frame belongs bit priority field nothing vlans since changing ethernet header decade event taking three years featuring hundred people put good things field makes possible distinguish hard real time traffic soft real time traffic timeinsensitive traffic order provide better quality service ethernet needed voice ethernet although fairness ip similar field quarter century nobody ever used last field cfi canonical format indicator called cei corporate ego indicator originally intended indicate order bits mac addresses little endian versus big endian use got lost controversies presence indicates payload contains freeze dried frame hoping find another lan destination carried ethernet whole arrangement course nothing whatsoever vlans standards committee politics unlike regular politics vote bit vote bit mentioned tagged frame arrives vlan aware switch switch uses vlan identifier index table find ports send table come manually constructed back square zero manual configuration bridges beauty transparent bridge plug play require manual configuration would terrible shame lose property fortunately vlan aware bridges also autoconfigure based observing tags come frame tagged vlan comes port sec data link layer switching apparently machine port vlan 1q standard explains build tables dynamically mostly referencing appropriate portions 1d standard leaving subject vlan routing worth making one last observation many people internet ethernet worlds fanatically favor connectionless networking violently opposed anything smacking connections data link network layers yet vlans introduce something surprisingly similar connection use vlans properly frame carries new special identifier used index table inside switch look frame supposed sent precisely happens connection oriented networks connectionless networks destination address used routing kind connection identifier see creeping connectionism chap summary networks single channel used communication networks key design issue allocation channel among competing stations wishing use fdm tdm simple efficient allocation schemes number stations small fixed traffic continuous widely used circumstances example dividing bandwidth telephone trunks however number stations large variable traffic fairly bursty common case computer networks fdm tdm poor choices numerous dynamic channel allocation algorithms devised aloha protocol without slotting used many derivatives real systems example cable modems rfid improvement state channel sensed stations avoid starting transmission another station transmitting technique carrier sensing led variety csma protocols lans mans basis classic ethernet 11 networks class protocols eliminates contention altogether least reduces considerably well known bitmap protocol topologies rings binary countdown protocol completely eliminate contention tree walk protocol reduces dynamically dividing stations two disjoint groups different sizes allowing contention within one group ideally group chosen one station ready send permitted wireless lans added problems difficult sense colliding transmissions coverage regions stations may differ dominant wireless lan ieee 11 stations use csma ca mitigate first problem leaving small gaps avoid collisions stations also use rts cts protocol combat hidden terminals arise second 350 medium access control sublayer problem ieee 11 commonly used connect laptops devices wireless access points also used devices several physical layers used including multichannel fdm without multiple antennas spread spectrum like 11 rfid readers tags use random access protocol communicate identifiers wireless pans mans different designs bluetooth system connects headsets many kinds peripherals computers without wires ieee 16 provides wide area wireless internet data service stationary mobile computers networks use centralized connection oriented design bluetooth master wimax base station decide station may send receive data 16 design supports different quality service real time traffic like telephone calls interactive traffic like web browsing bluetooth placing complexity master leads inexpensive slave devices ethernet dominant form wired lan classic ethernet used csma cd channel allocation yellow cable size garden hose snaked machine machine architecture changed speeds risen mbps gbps continue climb point point links twisted pair attached hubs switches modern switches full duplex links contention links switch forward frames different ports parallel buildings full lans way needed interconnect plugand play bridges used purpose bridges built backward learning algorithm spanning tree algorithm since functionality built modern switches terms bridge switch used interchangeably help management bridged lans vlans let physical topology divided different logical topologies vlan standard ieee 1q introduces new format ethernet frames problems problem use formula chapter first state formula frames arrive randomly mbps channel transmission channel busy frame arrives waits turn queue frame length exponentially distributed mean 000 bits frame following frame arrival rates give delay experienced average frame including queueing time transmission time frames sec b frames sec c frames sec chap problems group n stations share kbps pure aloha channel station outputs bit frame average every sec even previous one yet sent e g stations buffer outgoing frames maximum value n consider delay pure aloha versus slotted aloha low load one less explain answer large population aloha users manages generate requests sec including originals retransmissions time slotted units msec chance success first attempt b probability exactly k collisions success c expected number transmission attempts needed infinite population slotted aloha system mean number slots station waits collision retransmission plot delay versus throughput curve system length contention slot csma cd km twin lead cable signal propagation speed signal propagation speed vacuum b km multimode fiber optic cable signal propagation speed signal propagation speed vacuum long station wait worst case start transmitting frame lan uses basic bit map protocol binary countdown protocol explain lower numbered station may starved sending packet sixteen stations numbered contending use shared channel using adaptive tree walk protocol stations whose addresses prime numbers suddenly become ready many bit slots needed resolve contention consider five wireless stations b c e station communicate stations b communicate c e c communicate b communicate c e e communicate b sending b communications possible b b sending communications possible c b sending c communications possible six stations f communicate using maca protocol possible two transmissions take place simultaneously explain answer seven story office building adjacent offices per floor office contains wall socket terminal front wall sockets form rectangular grid vertical plane separation sockets horizontally vertically assuming feasible run straight cable pair sockets horizontally vertically diagonally many meters cable needed connect sockets using star configuration single router middle b classic lan 352 medium access control sublayer baud rate classic mbps ethernet sketch manchester encoding classic ethernet bit stream km long mbps csma cd lan propagation speed sec repeaters allowed system data frames bits long including bits header checksum overhead first bit slot successful transmission reserved receiver capture channel order send bit acknowledgement frame effective data rate excluding overhead assuming collisions two csma cd stations trying transmit long multiframe files frame sent contend channel using binary exponential backoff algorithm probability contention ends round k mean number rounds per contention period ip packet transmitted ethernet bytes long including headers llc use padding needed ethernet frame many bytes ethernet frames must least bytes long ensure transmitter still going event collision far end cable fast ethernet byte minimum frame size get bits ten times faster possible maintain minimum frame size books quote maximum size ethernet frame bytes instead bytes wrong explain answer many frames per second gigabit ethernet handle think carefully take account relevant cases hint fact gigabit ethernet matters name two networks allow frames packed back back feature worth four stations b c shown last two stations think closest give example show rts cts 11 protocol little different maca protocol wireless lan one ap client stations four stations data rates mbps four stations data rates mbps last two stations data rates mbps data rate experienced station ten stations sending data together txop used b txop used suppose mbps 11b lan transmitting byte frames back back radio channel bit error rate many frames per second damaged average 16 network channel width mhz many bits sec sent subscriber station chap problems give two reasons networks might use error correcting code instead error detection retransmission list two ways wimax similar 11 two ways different 11 see bluetooth device two piconets time reason one device master time maximum size data field slot bluetooth frame basic rate explain answer shows several physical layer protocols closest bluetooth physical layer protocol biggest difference two mentioned section efficiency slot frame repetition encoding basic data rate efficiency slot frame repetition encoding used basic data rate instead beacon frames frequency hopping spread spectrum variant 11 contain dwell time think analogous beacon frames bluetooth also contain dwell time discuss answer suppose rfid tags around rfid reader best value q likely one tag responds collision given slot list security concerns rfid system switch designed use fast ethernet backplane move gbps many frames sec handle worst case briefly describe difference store forward cut switches consider extended lan connected using bridges b1 b2 b suppose hash tables two bridges empty list ports packet forwarded following sequence data transmissions sends packet c b e sends packet f c f sends packet e g sends packet e e sends packet f b sends packet f store forward switches advantage cut switches respect damaged frames explain mentioned section bridges may even present spanning tree outline scenario bridge may present spanning tree make vlans work configuration tables needed bridges vlans used hubs rather switches hubs need configuration tables 354 medium access control sublayer switch legacy end domain right vlan aware switch would possible use legacy switch would work write program simulate behavior csma cd protocol ethernet n stations ready transmit frame transmitted program report times station successfully starts sending frame assume clock tick occurs every slot time sec collision detection sending jamming sequence takes one slot time frames maximum length allowed 5 network layer network layer concerned getting packets source way destination getting destination may require making many hops intermediate routers along way function clearly contrasts data link layer modest goal moving frames one end wire thus network layer lowest layer deals end end transmission achieve goals network layer must know topology network e set routers links choose appropriate paths even large networks must also take care choosing routes avoid overloading communication lines routers leaving others idle finally source destination different networks new problems occur network layer deal chapter study issues illustrate primarily using internet network layer protocol ip network layer design issues following sections give introduction issues designers network layer must grapple issues include service provided transport layer internal design network 356 network layer store forward packet switching starting explain details network layer worth restating context network layer protocols operate context seen major components network isp equipment routers connected transmission lines shown inside shaded oval customers equipment shown outside oval host h1 directly connected one isp routers perhaps home computer plugged dsl modem contrast h2 lan might office ethernet router f owned operated customer router leased line isp equipment shown f outside oval belong isp purposes chapter however routers customer premises considered part isp network run algorithms isp routers main concern algorithms router isp equipment process p1 p2 b e host h1 f lan h2 c packet environment network layer protocols equipment used follows host packet send transmits nearest router either lan point point link isp packet stored fully arrived link finished processing verifying checksum forwarded next router along path reaches destination host delivered mechanism store forward packet switching seen previous chapters services provided transport layer network layer provides services transport layer network layer transport layer interface important question precisely kind services network layer provides transport layer services need carefully designed following goals mind sec network layer design issues services independent router technology transport layer shielded number type topology routers present network addresses made available transport layer use uniform numbering plan even across lans wans given goals designers network layer lot freedom writing detailed specifications services offered transport layer freedom often degenerates raging battle two warring factions discussion centers whether network layer provide connectionoriented service connectionless service one camp represented internet community argues routers job moving packets around nothing else view based years experience real computer network network inherently unreliable matter designed therefore hosts accept fact error control e error detection correction flow control viewpoint leads conclusion network service connectionless primitives send packet receive packet little else particular packet ordering flow control done hosts going anyway usually little gained twice reasoning example end end argument design principle influential shaping internet saltzer et al furthermore packet must carry full destination address packet sent carried independently predecessors camp represented telephone companies argues network provide reliable connection oriented service claim years successful experience worldwide telephone system excellent guide view quality service dominant factor without connections network quality service difficult achieve especially real time traffic voice video even several decades controversy still much alive early widely used data networks x 1970s successor frame relay 1980s connection oriented however since days arpanet early internet connectionless network layers grown tremendously popularity ip protocol ever present symbol success undeterred connection oriented technology called atm developed overthrow 1980s instead atm found niche uses ip taking telephone networks covers however internet evolving connection oriented features quality service becomes important two examples connection oriented technologies mpls multiprotocol label switching describe chapter vlans saw chap technologies widely used 358 network layer implementation connectionless service looked two classes service network layer provide users time see layer works inside two different organizations possible depending type service offered connectionless service offered packets injected network individually routed independently advance setup needed context packets frequently called datagrams analogy telegrams network called datagram network connection oriented service used path source router way destination router must established data packets sent connection called vc virtual circuit analogy physical circuits set telephone system network called virtual circuit network section examine datagram networks next one examine virtual circuit networks let us see datagram network works suppose process p1 long message p2 hands message transport layer instructions deliver process p2 host h2 transport layer code runs h1 typically within operating system prepends transport header front message hands result network layer probably another procedure within operating system isp equipment router process p1 p2 b e f host h1 lan h2 c packet table initially table later b c e f b c b c c b c e f b c b b b c table e table b c e f b c e f e e e c c f dest line routing within datagram network let us assume example message four times longer maximum packet size network layer break four packets sec network layer design issues send turn router using point point protocol example ppp point isp takes every router internal table telling send packets possible destinations table entry pair consisting destination outgoing line use destination directly connected lines used example two outgoing lines b c every incoming packet must sent one routers even ultimate destination router initial routing table shown figure label initially packets stored briefly arrived incoming link checksums verified packet forwarded according table onto outgoing link c within new frame packet forwarded e f gets f sent within frame lan h2 packets follow route however something different happens packet gets sent router b even though also destined f reason decided send packet via different route first three packets perhaps learned traffic jam somewhere along ace path updated routing table shown label later algorithm manages tables makes routing decisions called routing algorithm routing algorithms one main topics study chapter several different kinds see ip internet protocol basis entire internet dominant example connectionless network service packet carries destination ip address routers use individually forward packet addresses bits ipv4 packets bits ipv6 packets describe ip much detail later chapter implementation connection oriented service connection oriented service need virtual circuit network let us see works idea behind virtual circuits avoid choose new route every packet sent instead connection established route source machine destination machine chosen part connection setup stored tables inside routers route used traffic flowing connection exactly way telephone system works connection released virtual circuit also terminated connection oriented service packet carries identifier telling virtual circuit belongs example consider situation shown host h1 established connection host h2 connection remembered first entry routing tables first line table says packet 360 network layer bearing connection identifier comes h1 sent router c given connection identifier similarly first entry c routes packet e also connection identifier p3 router isp equipment p2 b h3 process p1 e f lan h2 c packet host h1 table h1 h3 c c c table e e e table c c f f routing within virtual circuit network let us consider happens h3 also wants establish connection h2 chooses connection identifier initiating connection connection tells network establish virtual circuit leads second row tables note conflict although easily distinguish connection packets h1 connection packets h3 c reason assigns different connection identifier outgoing traffic second connection avoiding conflicts kind routers need ability replace connection identifiers outgoing packets contexts process called label switching example connection oriented network service mpls multiprotocol label switching used within isp networks internet ip packets wrapped mpls header bit connection identifier label mpls often hidden customers isp establishing long term connections large amounts traffic increasingly used help quality service important also isp traffic management tasks say mpls later chapter sec network layer design issues comparison virtual circuit datagram networks virtual circuits datagrams supporters detractors attempt summarize sets arguments major issues listed although purists could probably find counterexample everything figure issue datagram network virtual circuit network circuit setup needed required addressing packet contains full source destination address packet contains short vc number state information routers hold state information connections vc requires router table space per connection routing packet routed independently route chosen vc set packets follow effect router failures none except packets lost crash vcs passed failed router terminated quality service difficult easy enough resources allocated advance vc congestion control difficult easy enough resources allocated advance vc comparison datagram virtual circuit networks inside network several trade offs exist virtual circuits datagrams one trade setup time versus address parsing time using virtual circuits requires setup phase takes time consumes resources however price paid figuring data packet virtual circuit network easy router uses circuit number index table find packet goes datagram network setup needed complicated lookup procedure required locate entry destination related issue destination addresses used datagram networks longer circuit numbers used virtual circuit networks global meaning packets tend fairly short including full destination address every packet may represent significant amount overhead hence waste bandwidth yet another issue amount table space required router memory datagram network needs entry every possible destination whereas virtual circuit network needs entry virtual circuit however 362 network layer advantage somewhat illusory since connection setup packets routed use destination addresses datagrams virtual circuits advantages guaranteeing quality service avoiding congestion within network resources e g buffers bandwidth cpu cycles reserved advance connection established packets start arriving necessary bandwidth router capacity datagram network congestion avoidance difficult transaction processing systems e g stores calling verify credit card purchases overhead required set clear virtual circuit may easily dwarf use circuit majority traffic expected kind use virtual circuits inside network makes little sense hand long running uses vpn traffic two corporate offices permanent virtual circuits set manually last months years may useful virtual circuits also vulnerability problem router crashes loses memory even comes back second later virtual circuits passing aborted contrast datagram router goes users whose packets queued router time need suffer probably even since sender likely retransmit shortly loss communication line fatal virtual circuits using easily compensated datagrams used datagrams also allow routers balance traffic throughout network since routes changed partway long sequence packet transmissions routing algorithms main function network layer routing packets source machine destination machine networks packets require multiple hops make journey notable exception broadcast networks even routing issue source destination network segment algorithms choose routes data structures use major area network layer design routing algorithm part network layer software responsible deciding output line incoming packet transmitted network uses datagrams internally decision must made anew every arriving data packet since best route may changed since last time network uses virtual circuits internally routing decisions made new virtual circuit set thereafter data packets follow already established route latter case sometimes called session routing route remains force entire session e g logged vpn sec routing algorithms sometimes useful make distinction routing making decision routes use forwarding happens packet arrives one think router two processes inside one handles packet arrives looking outgoing line use routing tables process forwarding process responsible filling updating routing tables routing algorithm comes play regardless whether routes chosen independently packet sent new connections established certain properties desirable routing algorithm correctness simplicity robustness stability fairness efficiency correctness simplicity hardly require comment need robustness may less obvious first major network comes air may expected run continuously years without system wide failures period hardware software failures kinds hosts routers lines fail repeatedly topology change many times routing algorithm able cope changes topology traffic without requiring jobs hosts aborted imagine havoc network needed rebooted every time router crashed stability also important goal routing algorithm exist routing algorithms never converge fixed set paths matter long run stable algorithm reaches equilibrium stays converge quickly since communication may disrupted routing algorithm reached equilibrium fairness efficiency may sound obvious surely reasonable person would oppose turns often contradictory goals simple example conflict look suppose enough traffic b b c c saturate horizontal links maximize total flow x x traffic shut altogether unfortunately x x may see way evidently compromise global efficiency fairness individual connections needed even attempt find trade offs fairness efficiency must decide seek optimize minimizing mean packet delay obvious candidate send traffic network effectively maximizing total network throughput furthermore two goals also conflict since operating queueing system near capacity implies long queueing delay compromise many networks attempt minimize distance packet must travel simply reduce number hops packet must make either choice tends improve delay also reduce amount bandwidth consumed per packet tends improve overall network throughput well routing algorithms grouped two major classes nonadaptive adaptive nonadaptive algorithms base routing decisions 364 network layer b c x x b c network conflict fairness efficiency measurements estimates current topology traffic instead choice route use get j j computed advance offline downloaded routers network booted procedure sometimes called static routing respond failures static routing mostly useful situations routing choice clear example router f send packets headed network router e regardless ultimate destination adaptive algorithms contrast change routing decisions reflect changes topology sometimes changes traffic well dynamic routing algorithms differ get information e g locally adjacent routers routers change routes e g topology changes every seconds load changes metric used optimization e g distance number hops estimated transit time following sections discuss variety routing algorithms algorithms cover delivery models besides sending packet source destination sometimes goal send packet multiple one set destinations routing algorithms describe make decisions based topology defer possibility decisions based traffic levels sec optimality principle get specific algorithms may helpful note one make general statement optimal routes without regard network topology traffic statement known optimality principle bellman states router j optimal path router router k sec routing algorithms optimal path j k also falls along route see call part route j r rest route r route better r existed j k could concatenated r improve route k contradicting statement r r optimal direct consequence optimality principle see set optimal routes sources given destination form tree rooted destination tree called sink tree illustrated b distance metric number hops goal routing algorithms discover use sink trees routers b b g f j c c e g f j h e h n n l l k k b network b sink tree router b note sink tree necessarily unique trees path lengths may exist allow possible paths chosen tree becomes general structure called dag directed acyclic graph dags loops use sink trees convenient shorthand cases cases also depend technical assumption paths interfere example traffic jam one path cause another path divert since sink tree indeed tree contain loops packet delivered within finite bounded number hops practice life quite easy links routers go come back operation different routers may different ideas current topology also quietly finessed issue whether router individually acquire information base sink tree computation whether information collected means come back issues shortly nevertheless optimality principle sink tree provide benchmark routing algorithms measured 366 network layer shortest path algorithm let us begin study routing algorithms simple technique computing optimal paths given complete picture network paths ones want distributed routing algorithm find even though routers may know details network idea build graph network node graph representing router edge graph representing communication line link choose route given pair routers algorithm finds shortest path graph concept shortest path deserves explanation one way measuring path length number hops using metric paths abc abe equally long another metric geographic distance kilometers case abc clearly much longer abe assuming figure drawn scale b e f e g h b g c b b c b e b f b h h e b f e h e b f e h g e c b g e c b g e f g c b c b c b e b f e g e h f f first six steps used computing shortest path arrows indicate working node sec routing algorithms however many metrics besides hops physical distance also possible example edge could labeled mean delay standard test packet measured hourly runs graph labeling shortest path fastest path rather path fewest edges kilometers general case labels edges could computed function distance bandwidth average traffic communication cost measured delay factors changing weighting function algorithm would compute shortest path measured according one number criteria combination criteria several algorithms computing shortest path two nodes graph known one due dijkstra finds shortest paths source destinations network node labeled parentheses distance source node along best known path distances must non negative based real quantities like bandwidth delay initially paths known nodes labeled infinity algorithm proceeds paths found labels may change reflecting better paths label may either tentative permanent initially labels tentative discovered label represents shortest possible path source node made permanent never changed thereafter illustrate labeling algorithm works look weighted undirected graph weights represent example distance want find shortest path start marking node permanent indicated filled circle examine turn nodes adjacent working node relabeling one distance whenever node relabeled also label node probe made reconstruct final path later network one shortest path wanted find would need remember probe nodes could reach node distance examined nodes adjacent examine tentatively labeled nodes whole graph make one smallest label permanent shown b one becomes new working node start b examine nodes adjacent sum label b distance b node considered less label node shorter path node relabeled nodes adjacent working node inspected tentative labels changed possible entire graph searched tentatively labeled node smallest value node made permanent becomes working node next round shows first six steps algorithm see algorithm works look c point made e permanent suppose shorter path abe say 368 network layer axyze x two possibilities either node z already made permanent e already probed round following one z made permanent axyze path escaped attention thus shorter path consider case z still tentatively labeled label z greater equal e axyze shorter path abe label less e z e become permanent first allowing e probed z algorithm given global variables n dist describe graph initialized shortest path called difference program algorithm described compute shortest path starting terminal node rather source node since shortest paths undirected graph shortest paths matter end begin reason searching backward node labeled predecessor rather successor final path copied output variable path path thus reversed two reversal effects cancel answer produced correct order flooding routing algorithm implemented router must make decisions based local knowledge complete picture network simple local technique flooding every incoming packet sent every outgoing line except one arrived flooding obviously generates vast numbers duplicate packets fact infinite number unless measures taken damp process one measure hop counter contained header packet decremented hop packet discarded counter reaches zero ideally hop counter initialized length path source destination sender know long path initialize counter worst case namely full diameter network flooding hop count produce exponential number duplicate packets hop count grows routers duplicate packets seen better technique damming flood routers keep track packets flooded avoid sending second time one way achieve goal source router put sequence number packet receives hosts router needs list per source router telling sequence numbers originating source already seen incoming packet list flooded sec routing algorithms define max nodes define infinity int n dist max nodes max nodes maximum number nodes number larger every maximum path dist j distance j void shortest path int int int path struct state int predecessor int length enum permanent tentative label state max nodes path worked previous node length source node label state int k min struct state p p state p state n p initialize state p predecessor p length infinity p label tentative state length state label permanent k k initial working node better path k n graph n nodes dist k state label tentative state k length dist k state length state predecessor k state length state k length dist k find tentatively labeled node smallest label k min infinity n state label tentative state length min min state length k state k label permanent k copy path output array k path k k state k predecessor k dijkstra algorithm compute shortest path graph prevent list growing without bound list augmented counter k meaning sequence numbers k seen packet comes easy check packet already 370 network layer flooded comparing sequence number k discarded furthermore full list k needed since k effectively summarizes flooding practical sending packets important uses first ensures packet delivered every node network may wasteful single destination needs packet effective broadcasting information wireless networks messages transmitted station received stations within radio range fact flooding algorithms utilize property second flooding tremendously robust even large numbers routers blown bits e g military network located war zone flooding find path one exists get packet destination flooding also requires little way setup routers need know neighbors means flooding used building block routing algorithms efficient need way setup flooding also used metric routing algorithms compared flooding always chooses shortest path chooses every possible path parallel consequently algorithm produce shorter delay ignore overhead generated flooding process distance vector routing computer networks generally use dynamic routing algorithms complex flooding efficient find shortest paths current topology two dynamic algorithms particular distance vector routing link state routing popular section look former algorithm following section study latter algorithm distance vector routing algorithm operates router maintain table e vector giving best known distance destination link use get tables updated exchanging information neighbors eventually every router knows best link reach destination distance vector routing algorithm sometimes called names commonly distributed bellman ford routing algorithm researchers developed bellman ford fulkerson original arpanet routing algorithm also used internet name rip distance vector routing router maintains routing table indexed containing one entry router network entry two parts preferred outgoing line use destination estimate distance destination distance might measured number hops using another metric discussed computing shortest paths router assumed know distance neighbors metric hops distance one hop metric propagation delay sec routing algorithms router measure directly special echo packets receiver timestamps sends back fast example assume delay used metric router knows delay neighbors every msec router sends neighbor list estimated delays destination also receives similar list neighbor imagine one tables come neighbor x xi x estimate long takes get router router knows delay x msec also knows reach router via x xi msec performing calculation neighbor router find estimate seems best use estimate corresponding link new routing table note old routing table used calculation updating process illustrated part shows network first four columns part b show delay vectors received neighbors router j claims msec delay b msec delay c 40msec delay etc suppose j measured estimated delay neighbors h k msec respectively router e b c f g j k h l new estimated delay j h k line 20 b 31 c 19 20 h e 30 f 19 g h h h 14 j k 22 k l k ja ji jh jk delay delay delay delay new routing table j vectors received j four neighbors b network b input h k new routing table j consider j computes new route router g knows get msec furthermore claims able get g msec j knows count delay msec g forwards packets bound g 372 network layer similarly computes delay g via h k msec respectively best values makes entry routing table delay g msec route use via h calculation performed destinations new routing table shown last column figure count infinity problem settling routes best paths across network called convergence distance vector routing useful simple technique routers collectively compute shortest paths serious drawback practice although converges correct answer may slowly particular reacts rapidly good news leisurely bad news consider router whose best route destination x long next exchange neighbor suddenly reports short delay x router switches using line send traffic x one vector exchange good news processed see fast good news propagates consider five node linear network delay metric number hops suppose initially routers know words recorded delay infinity b c e initially exchange exchanges exchanges exchanges b c e initially exchange exchanges exchanges exchanges exchanges exchanges b count infinity problem comes routers learn via vector exchanges simplicity assume gigantic gong somewhere struck periodically initiate vector exchange routers simultaneously time first exchange b learns left hand neighbor zero delay b makes entry routing table indicating one hop away left routers still think point routing table entries shown second row next sec routing algorithms exchange c learns b path length updates routing table indicate path length e hear good news later clearly good news spreading rate one hop per exchange network whose longest path length n hops within n exchanges everyone know newly revived links routers let us consider situation b links routers initially routers b c e distances hops respectively suddenly either goes link b cut effectively thing b point view first packet exchange b hear anything fortunately c says worry path length little b suspect c path runs b b knows c might ten links separate paths length result b thinks reach via c path length e update entries first exchange second exchange c notices neighbors claims path length picks one random makes new distance shown third row b subsequent exchanges produce history shown rest b figure clear bad news travels slowly router ever value one higher minimum neighbors gradually routers work way infinity number exchanges required depends numerical value used infinity reason wise set infinity longest path plus entirely surprisingly problem known count infinity problem many attempts solve example preventing routers advertising best paths back neighbors heard split horizon poisoned reverse rule discussed rfc however none heuristics work well practice despite colorful names core problem x tells path somewhere way knowing whether path link state routing distance vector routing used arpanet replaced link state routing primary problem caused demise algorithm often took long converge network topology changed due count infinity problem consequently replaced entirely new algorithm called link state routing variants link state routing called ospf routing algorithms widely used inside large networks internet today idea behind link state routing fairly simple stated five parts router must following things make work 374 network layer discover neighbors learn network addresses set distance cost metric neighbors construct packet telling learned send packet receive packets routers compute shortest path every router effect complete topology distributed every router dijkstra algorithm run router find shortest path every router consider five steps detail learning neighbors router booted first task learn neighbors accomplishes goal sending special hello packet point point line router end expected send back reply giving name names must globally unique distant router later hears three routers connected f essential determine whether three mean f two routers connected broadcast link e g switch ring classic ethernet situation slightly complicated illustrates broadcast lan three routers c f directly connected routers connected one additional routers shown h router b e g e g h f b c c f lan n b nine routers broadcast lan b graph model broadcast lan provides connectivity pair attached routers however modeling lan many point point links increases size sec routing algorithms topology leads wasteful messages better way model lan consider node shown b introduced new artificial node n c f connected one designated router lan selected play role n routing protocol fact possible go c lan represented path anc setting link costs link state routing algorithm requires link distance cost metric finding shortest paths cost reach neighbors set automatically configured network operator common choice make cost inversely proportional bandwidth link example gbps ethernet may cost mbps ethernet cost makes higher capacity paths better choices network geographically spread delay links may factored cost paths shorter links better choices direct way determine delay send line special echo packet side required send back immediately measuring round trip time dividing two sending router get reasonable estimate delay building link state packets information needed exchange collected next step router build packet containing data packet starts identity sender followed sequence number age described later list neighbors cost neighbor also given example network presented costs shown labels lines corresponding link state packets six routers shown fig b b e link b c packets e f seq age seq age seq age seq age seq age seq age b e c b c f c b f e f e c f state b network b link state packets network 376 network layer building link state packets easy hard part determining build one possibility build periodically regular intervals another possibility build significant event occurs line neighbor going coming back changing properties appreciably distributing link state packets trickiest part algorithm distributing link state packets routers must get link state packets quickly reliably different routers using different versions topology routes compute inconsistencies loops unreachable machines problems first describe basic distribution algorithm give refinements fundamental idea use flooding distribute link state packets routers keep flood check packet contains sequence number incremented new packet sent routers keep track source router sequence pairs see new link state packet comes checked list packets already seen new forwarded lines except one arrived duplicate discarded packet sequence number lower highest one seen far ever arrives rejected obsolete router recent data algorithm problems manageable first sequence numbers wrap around confusion reign solution use bit sequence number one link state packet per second would take years wrap around possibility ignored second router ever crashes lose track sequence number starts next packet sends rejected duplicate third sequence number ever corrupted 540 received instead bit error packets 540 rejected obsolete since current sequence number thought 540 solution problems include age packet sequence number decrement per second age hits zero information router discarded normally new packet comes say every sec router information times router six consecutive packets lost unlikely event age field also decremented router initial flooding process make sure packet get lost live indefinite period time packet whose age zero discarded refinements algorithm make robust link state packet comes router flooding queued transmission immediately instead put holding area wait short case links coming going another link state packet source comes first packet transmitted sequence numbers sec routing algorithms compared equal duplicate discarded different older one thrown guard errors links link state packets acknowledged data structure used router b network shown depicted row corresponds recently arrived yet fully processed link state packet table records packet originated sequence number age data addition send acknowledgement flags b three links c f respectively send flags mean packet must sent indicated link acknowledgement flags mean must acknowledged send flags ack flags source seq age c f c f f e c data packet buffer router b link state packet arrives directly must sent c f acknowledged indicated flag bits similarly packet f forwarded c acknowledged f however situation third packet e different arrives twice via eab via efb consequently sent c must acknowledged f indicated bits duplicate arrives original still buffer bits changed example copy c state arrives f fourth entry table forwarded six bits changed indicate packet must acknowledged f sent computing new routes router accumulated full set link state packets construct entire network graph every link represented every link fact represented twice direction different directions may even different costs shortest path computations may find different paths router b router b dijkstra algorithm run locally construct shortest paths possible destinations results algorithm tell router link 378 network layer use reach destination information installed routing tables normal operation resumed compared distance vector routing link state routing requires memory computation network n routers k neighbors memory required store input data proportional kn least large routing table listing destinations also computation time grows faster kn even efficient data structures issue large networks nevertheless many practical situations link state routing works well suffer slow convergence problems link state routing widely used actual networks words example protocols order many isps use intermediate system intermediate system link state protocol oran designed early network called decnet later adopted iso use osi protocols modified handle protocols well notably ip ospf open shortest path first main link state protocol designed ietf several years adopted many innovations designed innovations include self stabilizing method flooding link state updates concept designated router lan method computing supporting path splitting multiple metrics consequence little difference ospf important difference carry information multiple network layer protocols time e g ip ipx appletalk ospf feature advantage large multiprotocol environments go ospf sec general comment routing algorithms also order link state distance vector algorithms rely processing routers compute routes problems hardware software even small number routers wreak havoc across network example router claims link forgets link network graph incorrect router fails forward packets corrupts forwarding route work expected finally runs memory routing calculation wrong bad things happen network grows range tens hundreds thousands nodes probability router failing occasionally becomes nonnegligible trick try arrange limit damage inevitable happens perlman discusses problems possible solutions detail hierarchical routing networks grow size router routing tables grow proportionally router memory consumed ever increasing tables cpu time needed scan bandwidth needed send status reports certain point network may grow point longer sec routing algorithms feasible every router entry every router routing done hierarchically telephone network hierarchical routing used routers divided call regions router knows details route packets destinations within region knows nothing internal structure regions different networks interconnected natural regard one separate region free routers one network know topological structure ones huge networks two level hierarchy may insufficient may necessary group regions clusters clusters zones zones groups run names aggregations example multilevel hierarchy consider packet might routed berkeley california malindi kenya berkeley router would know detailed topology within california would send state traffic los angeles router los angeles router would able route traffic directly domestic routers would send foreign traffic new york new york router would programmed direct traffic router destination country responsible handling foreign traffic say nairobi finally packet would work way tree kenya got malindi gives quantitative example routing two level hierarchy five regions full routing table router 1a entries shown b routing done hierarchically c entries local routers regions condensed single router traffic region goes via 1b 2a line rest remote traffic goes via 1c 3b line hierarchical routing reduced table entries ratio number regions number routers per region grows savings table space increase unfortunately gains space free penalty paid increased path length example best route 1a 5c via region hierarchical routing traffic region goes via region better destinations region single network becomes large interesting question many levels hierarchy example consider network routers hierarchy router needs routing table entries network partitioned regions routers router needs local entries plus remote entries total entries three level hierarchy chosen clusters containing regions routers router needs entries local routers entries routing regions within cluster entries distant clusters total entries kamoun kleinrock discovered optimal number levels n router network ln n requiring total e ln n entries per router also shown increase effective mean path length caused hierarchical routing sufficiently small usually acceptable 380 network layer full table 1a hierarchical table 1a dest region region 1b 2a 2b 1a 1c 2c 5b 4a 3a 3b region 4b 2d 5c 5a 4c region 5d 5e region 1a hops dest 1a line hops 1b 1b 1b 1b 1c 2a 1c 1c 1b 2b 2c 1b 1b 1c 1b 1c 2d 1b 1c 1c 3a 3b 4a 1c 1c 1c 1c 1c 1c 1c 1b 1c 4b 4c 5a 5b 5c 5d 5e line 1c b c hierarchical routing broadcast routing applications hosts need send messages many hosts example service distributing weather reports stock market updates live radio programs might work best sending machines letting interested read data sending packet destinations simultaneously called broadcasting various methods proposed one broadcasting method requires special features network source simply send distinct packet destination method wasteful bandwidth slow also requires source complete list destinations method desirable practice even though widely applicable improvement multidestination routing packet contains either list destinations bit map indicating desired destinations packet arrives router router checks destinations determine set output lines needed output line needed best route least one destinations router generates new copy packet output line used includes packet destinations use line effect destination set partitioned among sec routing algorithms output lines sufficient number hops packet carry one destination like normal packet multidestination routing like using separately addressed packets except several packets must follow route one pays full fare rest ride free network bandwidth therefore used efficiently however scheme still requires source know destinations plus much work router determine send one multidestination packet multiple distinct packets already seen better broadcast routing technique flooding implemented sequence number per source flooding uses links efficiently decision rule routers relatively simple although flooding illsuited ordinary point point communication rates serious consideration broadcasting however turns better still shortest path routes regular packets computed idea reverse path forwarding elegant remarkably simple pointed dalal metcalfe broadcast packet arrives router router checks see packet arrived link normally used sending packets toward source broadcast excellent chance broadcast packet followed best route router therefore first copy arrive router case router forwards copies onto links except one arrived however broadcast packet arrived link preferred one reaching source packet discarded likely duplicate b c f e j l k f f g n e h c b h g h e j k n g e c n k h b l l b j l n g k h b c reverse path forwarding network b sink tree c tree built reverse path forwarding example reverse path forwarding shown part shows network part b shows sink tree router network part c shows reverse path algorithm works first hop sends packets f h j n indicated second row tree packets arrives preferred path assuming preferred path falls along sink tree indicated circle around letter second hop 382 network layer eight packets generated two routers received packet first hop turns eight arrive previously unvisited routers five arrive along preferred line six packets generated third hop three arrive preferred path c e k others duplicates five hops packets broadcasting terminates compared four hops packets sink tree followed exactly principal advantage reverse path forwarding efficient easy implement sends broadcast packet link direction flooding yet requires routers know reach destinations without needing remember sequence numbers use mechanisms stop flood list destinations packet last broadcast algorithm improves behavior reverse path forwarding makes explicit use sink tree convenient spanning tree router initiating broadcast spanning tree subset network includes routers contains loops sink trees spanning trees router knows lines belong spanning tree copy incoming broadcast packet onto spanning tree lines except one arrived method makes excellent use bandwidth generating absolute minimum number packets necessary job example sink tree part b used spanning tree broadcast packet sent minimum packets problem router must knowledge spanning tree method applicable sometimes information available e g link state routing routers know complete topology compute spanning tree sometimes e g distance vector routing multicast routing applications multiplayer game live video sports event streamed many viewing locations send packets multiple receivers unless group small sending distinct packet receiver expensive hand broadcasting packet wasteful group consists say machines million node network receivers interested message worse yet definitely interested supposed see thus need way send messages well defined groups numerically large size small compared network whole sending message group called multicasting routing algorithm used called multicast routing multicasting schemes require way create destroy groups identify routers members group tasks accomplished concern routing algorithm assume group identified multicast address routers know groups belong revisit group membership describe network layer internet sec sec routing algorithms multicast routing schemes build broadcast routing schemes already studied sending packets along spanning trees deliver packets members group making efficient use bandwidth however best spanning tree use depends whether group dense receivers scattered network sparse much network belonging group section consider cases group dense broadcast good start efficiently gets packet parts network broadcast reach routers members group wasteful solution explored deering cheriton prune broadcast spanning tree removing links lead members result efficient multicast spanning tree example consider two groups network shown routers attached hosts belong one groups indicated figure spanning tree leftmost router shown b tree used broadcast overkill multicast seen two pruned versions shown next c links lead hosts members group removed result multicast spanning tree leftmost router send group packets forwarded along spanning tree efficient broadcast tree links instead shows multicast spanning tree pruning group efficient five links time also shows different multicast groups different spanning trees various ways pruning spanning tree possible simplest one used link state routing used router aware complete topology including hosts belong groups router construct pruned spanning tree sender group question constructing sink tree sender usual removing links connect group members sink node mospf multicast ospf example link state protocol works way moy distance vector routing different pruning strategy followed basic algorithm reverse path forwarding however whenever router hosts interested particular group connections routers receives multicast message group responds prune message telling neighbor sent message send multicasts sender group router group members among hosts received messages lines sends multicast respond prune message way spanning tree recursively pruned dvmrp distance vector multicast routing protocol example multicast routing protocol works way waitzman et al pruning results efficient spanning trees use links actually needed reach members group one potential disadvantage lots work routers especially large networks suppose network 384 network layer b c network b spanning tree leftmost router c multicast tree group multicast tree group n groups average nodes router group pruned spanning trees must stored total mn trees example c gives spanning tree leftmost router send group spanning tree rightmost router send group shown look quite different packets head directly group members rather via left side graph turn means routers must forward packets destined group different directions depending node sending group many large groups many senders exist considerable storage needed store trees alternative design uses core based trees compute single spanning tree group ballardie et al routers agree root called core rendezvous point build tree sending packet member root tree union paths traced packets shows core based tree group send group sender sends packet core packet reaches core forwarded tree shown b sender righthand side network performance optimization packets destined group need reach core multicast soon packet reaches sec routing algorithms tree forwarded toward root well branches case sender top b sender core sender core b core based tree group b sending group shared tree optimal sources example fig b packet sender righthand side reaches top right group member via core three hops instead directly inefficiency depends core senders located often reasonable core middle senders single sender video streamed group using sender core optimal also note shared trees major savings storage costs messages sent computation router keep one tree per group instead trees routers part tree work support group reason shared tree approaches like core based trees used multicasting sparse groups internet part popular protocols pim protocol independent multicast fenner et al anycast routing far covered delivery models source sends single destination called unicast destinations called broadcast group destinations called multicast another delivery model called anycast sometimes also useful anycast packet delivered nearest member group partridge et al schemes find paths called anycast routing would want anycast sometimes nodes provide service time day content distribution getting right information matters node contacted node example anycast used internet part dns see chap luckily devise new routing schemes anycast regular distance vector link state routing produce anycast routes suppose 386 network layer want anycast members group given address instead different addresses distance vector routing distribute vectors usual nodes choose shortest path destination result nodes sending nearest instance destination routes shown procedure works routing protocol realize multiple instances destination believes instances node node topology shown b b anycast routes group b topology seen routing protocol procedure works link state routing well although added consideration routing protocol must find seemingly short paths pass node would result jumps hyperspace since instances node really nodes located different parts network however link state protocols already make distinction routers hosts glossed fact earlier needed discussion routing mobile hosts millions people use computers go truly mobile situations wireless devices moving cars nomadic situations laptop computers used series different locations use term mobile hosts mean either category distinct stationary hosts never move increasingly people want stay connected wherever world may easily home mobile hosts introduce new complication route packet mobile host network first find model world consider one hosts assumed permanent home location never changes hosts also permanent home address used determine home location analogous way telephone number 212 indicates united states country code manhattan routing goal systems sec routing algorithms mobile hosts make possible send packets mobile hosts using fixed home addresses packets efficiently reach wherever may trick course find discussion model order different model would recompute routes mobile host moves topology changes could simply use routing schemes described earlier section however growing number mobile hosts model would soon lead entire network endlessly computing new routes using home addresses greatly reduces burden another alternative would provide mobility network layer typically happens laptops today moved new internet locations laptops acquire new network addresses association old new addresses network know belonged laptop model laptop used browse web hosts send packets example incoming call without building higher layer location service example signing skype moving moreover connections maintained host moving new connections must started instead network layer mobility useful fix problems basic idea used mobile routing internet cellular networks mobile host tell host home location host acts behalf mobile host called home agent knows mobile host currently located forward packets delivered shows mobile routing action sender northwest city seattle wants send packet host normally located across united states new york case interest us mobile host home instead temporarily san diego mobile host san diego must acquire local network address use network happens normal way hosts obtain network addresses cover works internet later chapter local address called care address mobile host address tell home agent sending registration message home agent step care address message shown dashed line indicate control message data message next sender sends data packet mobile host using permanent address step packet routed network host home location home address belongs new york home agent intercepts packet mobile host away home wraps encapsulates packet new header sends bundle care address step mechanism called tunneling important internet look detail later 388 network layer sen ho sender tunnel care address ad dress reply sender ister reg ss f addre care care unnel ress add home agent home address mobile host care address packet routing mobile hosts encapsulated packet arrives care address mobile host unwraps retrieves packet sender mobile host sends reply packet directly sender step overall route called triangle routing may circuitous remote location far home location part step sender may learn current care address subsequent packets routed directly mobile host tunneling care address step bypassing home location entirely connectivity lost reason mobile moves home address always used reach mobile important aspect omitted description security general host router gets message form starting right please send stephany mail might couple questions talking whether good idea security information included messages validity checked cryptographic protocols study chap many variations mobile routing scheme modeled ipv6 mobility form mobility used internet johnson et al part ip based cellular networks umts showed sender stationary node simplicity designs let nodes mobile hosts alternatively host may part mobile network example computer plane extensions basic scheme support mobile networks work part hosts devarapalli et al schemes make use foreign e remote agent similar home agent foreign location analogous vlr visitor location register cellular networks however recent schemes foreign agent needed mobile hosts act foreign agents either case knowledge temporary location mobile host limited small number sec routing algorithms hosts e g mobile home agent senders many routers large network need recompute routes information mobile routing see also perkins snoeren balakrishnan routing ad hoc networks seen routing hosts mobile routers fixed even extreme case one routers mobile among possibilities emergency workers earthquake site military vehicles battlefield fleet ships sea gathering people laptop computers area lacking 11 cases others node communicates wirelessly acts host router networks nodes happen near called ad hoc networks manets mobile ad hoc networks let us examine briefly information found perkins makes ad hoc networks different wired networks topology suddenly tossed window nodes come go appear new places drop bit wired network router valid path destination path continues valid barring failures hopefully rare ad hoc network topology may changing time desirability even validity paths change spontaneously without warning needless say circumstances make routing ad hoc networks challenging routing fixed counterparts many many routing algorithms ad hoc networks proposed however since ad hoc networks little used practice compared mobile networks unclear protocols useful example look one popular routing algorithms aodv ad hoc demand distance vector perkins royer relative distance vector algorithm adapted work mobile environment nodes often limited bandwidth battery lifetimes let us see discovers maintains routes route discovery aodv routes destination discovered demand somebody wants send packet destination saves much work would otherwise wasted topology changes route used instant topology ad hoc network described graph connected nodes two nodes connected e arc graph communicate directly using radios basic adequate model sufficient purposes node communicate nodes lie within coverage circle real networks 390 network layer complicated buildings hills obstacles block communication nodes connected b b connected powerful transmitter b however simplicity assume connections symmetric describe algorithm consider newly formed ad hoc network suppose process node wants send packet node aodv algorithm maintains distance vector table node keyed destination giving information destination including neighbor send packets reach destination first looks table find entry discover route property discovering routes needed makes algorithm demand range broadcast b b c e f f b b f h e f g c c g h c e g b e g h c h range broadcast b b receive c c f g receive e h receive shaded nodes new recipients dashed lines show possible reverse routes solid lines show discovered route locate constructs route request packet broadcasts using flooding described sec transmission reaches b illustrated node rebroadcasts request continues reach nodes f g c c nodes h e sequence number set source used weed duplicates flood example discards transmission b c already forwarded request eventually request reaches node constructs route reply packet packet unicast sender along reverse path followed request work intermediate node must remember node sent request arrows b show reverse route information stored intermediate node also increments hop count forwards reply tells nodes far destination replies tell intermediate node neighbor use reach destination node sent reply intermediate nodes g put sec routing algorithms best route hear routing tables process reply reply reaches new route adgi created large network algorithm generates many broadcasts even destinations close reduce overhead scope broadcasts limited using ip packet time live field field initialized sender decremented hop hits packet discarded instead broadcast route discovery process modified follows locate destination sender broadcasts route request packet time live set response comes back within reasonable time another one sent time time live set subsequent attempts use etc way search first attempted locally increasingly wider rings route maintenance nodes move switched topology change spontaneously example g switched realize route using adgi longer valid algorithm needs able deal periodically node broadcasts hello message neighbors expected respond response forthcoming broadcaster knows neighbor moved range failed longer connected similarly tries send packet neighbor respond learns neighbor longer available information used purge routes longer work possible destination node n keeps track active neighbors fed packet destination last seconds n neighbors becomes unreachable checks routing table see destinations routes using gone neighbor routes active neighbors informed route via n invalid must purged routing tables example purges entries g routing table notifies purges entry general case active neighbors tell active neighbors recursively routes depending gone node purged routing tables stage invalid routes purged network senders find new valid routes using discovery mechanism described however complication recall distance vector protocols suffer slow convergence count infinity problems topology change confuse old invalid routes new valid routes ensure rapid convergence routes include sequence number controlled destination destination sequence number like logical clock destination increments every time sends fresh route reply senders ask fresh route including route request destination sequence number last route used either sequence number route purged initial value 392 network layer request broadcast route higher sequence number found intermediate nodes store routes higher sequence number fewest hops current sequence number spirit demand protocol intermediate nodes store routes use route information learned broadcasts timed short delay discovering storing routes used helps save bandwidth battery life compared standard distance vector protocol periodically broadcasts updates far considered single route save resources route discovery maintenance shared routes overlap instance b also wants send packets perform route discovery however case request first reach already route node generate reply tell b route without additional work required many ad hoc routing schemes another well known demand scheme dsr dynamic source routing johnson et al different strategy based geography explored gpsr greedy perimeter stateless routing karp kung nodes know geographic positions forwarding destination proceed without route computation simply heading right direction circling back escape dead ends protocols win depend kinds ad hoc networks prove useful practice congestion control algorithms many packets present part network causes packet delay loss degrades performance situation called congestion network transport layers share responsibility handling congestion since congestion occurs within network network layer directly experiences must ultimately determine excess packets however effective way control congestion reduce load transport layer placing network requires network transport layers work together chapter look network aspects congestion chap complete topic covering transport aspects congestion depicts onset congestion number packets hosts send network well within carrying capacity number delivered proportional number sent twice many sent twice many delivered however offered load approaches carrying capacity bursts traffic occasionally fill buffers inside routers packets lost lost packets consume capacity number delivered packets falls ideal curve network congested sec congestion control algorithms goodput packets sec ideal capacity network desirable response onset congestion congestion collapse offered load packet sec much traffic performance drops sharply unless network well designed may experience congestion collapse performance plummets offered load increases beyond capacity happen packets sufficiently delayed inside network longer useful leave network example early internet time packet spent waiting backlog packets ahead sent slow kbps link could reach maximum time allowed remain network thrown away different failure mode occurs senders retransmit packets greatly delayed thinking lost case copies packet delivered network wasting capacity capture factors axis given goodput rate useful packets delivered network would like design networks avoid congestion possible suffer congestion collapse become congested unfortunately congestion wholly avoided sudden streams packets begin arriving three four input lines need output line queue build insufficient memory hold packets lost adding memory may help point nagle realized routers infinite amount memory congestion gets worse better time packets get front queue already timed repeatedly duplicates sent makes matters worse better leads congestion collapse low bandwidth links routers process packets slowly line rate also become congested case situation improved directing traffic away bottleneck parts network eventually however regions network congested situation alternative shed load build faster network worth pointing difference congestion control flow control relationship subtle one congestion control 394 network layer making sure network able carry offered traffic global issue involving behavior hosts routers flow control contrast relates traffic particular sender particular receiver job make sure fast sender continually transmit data faster receiver able absorb see difference two concepts consider network made gbps fiber optic links supercomputer trying force feed large file personal computer capable handling gbps although congestion network trouble flow control needed force supercomputer stop frequently give personal computer chance breathe extreme consider network mbps lines large computers half trying transfer files kbps half problem fast senders overpowering slow receivers total offered traffic exceeds network handle reason congestion control flow control often confused best way handle problems get host slow thus host get slow message either receiver handle load network handle come back point chap start study congestion control looking approaches used different time scales look approaches preventing congestion occurring first place followed approaches coping set approaches congestion control presence congestion means load temporarily greater resources part network handle two solutions come mind increase resources decrease load shown solutions usually applied different time scales either prevent congestion react occurred network provisioning traffic aware routing admission control traffic throttling load shedding slower preventative faster reactive timescales approaches congestion control basic way avoid congestion build network well matched traffic carries low bandwidth link path along traffic directed congestion likely sometimes resources sec congestion control algorithms added dynamically serious congestion example turning spare routers enabling lines normally used backups make system fault tolerant purchasing bandwidth open market often links routers regularly heavily utilized upgraded earliest opportunity called provisioning happens time scale months driven long term traffic trends make existing network capacity routes tailored traffic patterns change day network users wake sleep different time zones example routes may changed shift traffic away heavily used paths changing shortest path weights local radio stations helicopters flying around cities report road congestion make possible mobile listeners route packets cars around hotspots called traffic aware routing splitting traffic across multiple paths also helpful however sometimes possible increase capacity way beat back congestion decrease load virtual circuit network new connections refused would cause network become congested called admission control finer granularity congestion imminent network deliver feedback sources whose traffic flows responsible problem network request sources throttle traffic slow traffic two difficulties approach identify onset congestion inform source needs slow tackle first issue routers monitor average load queueing delay packet loss cases rising numbers indicate growing congestion tackle second issue routers must participate feedback loop sources scheme work correctly time scale must adjusted carefully every time two packets arrive row router yells stop every time router idle sec yells go system oscillate wildly never converge hand waits minutes make sure saying anything congestion control mechanism react sluggishly use delivering timely feedback nontrivial matter added concern routers send messages network already congested finally else fails network forced discard packets deliver general name load shedding good policy choosing packets discard help prevent congestion collapse traffic aware routing first approach examine traffic aware routing routing schemes looked sec used fixed link weights schemes adapted changes topology changes load goal taking load 396 network layer account computing routes shift traffic away hotspots first places network experience congestion direct way set link weight function fixed link bandwidth propagation delay plus variable measured load average queuing delay least weight paths favor paths lightly loaded else equal traffic aware routing used early internet according model khanna zinky however peril consider network divided two parts east west connected two links cf ei suppose traffic east west using link cf result link heavily loaded long delays including queueing delay weight used shortest path calculation make ei attractive new routing tables installed east west traffic go ei loading link consequently next update cf appear shortest path result routing tables may oscillate wildly leading erratic routing many potential problems west east g b c f h e j network east west parts connected two links load ignored bandwidth propagation delay considered problem occur attempts include load change weights within narrow range slow routing oscillations two techniques contribute successful solution first multipath routing multiple paths source destination example means traffic spread across east west links second one routing scheme shift traffic across routes slowly enough able converge scheme gallagher given difficulties internet routing protocols generally adjust routes depending load instead adjustments made outside routing protocol slowly changing inputs called traffic engineering sec congestion control algorithms admission control one technique widely used virtual circuit networks keep congestion bay admission control idea simple set new virtual circuit unless network carry added traffic without becoming congested thus attempts set virtual circuit may fail better alternative letting people network busy makes matters worse analogy telephone system switch gets overloaded practices admission control giving dial tones trick approach working new virtual circuit lead congestion task straightforward telephone network fixed bandwidth calls kbps uncompressed audio however virtual circuits computer networks come shapes sizes thus circuit must come characterization traffic apply admission control traffic often described terms rate shape problem describe simple yet meaningful way difficult traffic typically bursty average rate half story example traffic varies browsing web difficult handle streaming movie long term throughput bursts web traffic likely congest routers network commonly used descriptor captures effect leaky bucket token bucket leaky bucket two parameters bound average rate instantaneous burst size traffic since leaky buckets widely used quality service go detail sec armed traffic descriptions network decide whether admit new virtual circuit one possibility network reserve enough capacity along paths virtual circuits congestion occur case traffic description service agreement network guarantee users prevented congestion veered related topic quality service little early return next section even without making guarantees network use traffic descriptions admission control task estimate many circuits fit within carrying capacity network without congestion suppose virtual circuits may blast traffic rates mbps pass 100mbps physical link many circuits admitted clearly circuits admitted without risking congestion wasteful normal case since may rarely happen transmitting full blast time real networks measurements past behavior capture statistics transmissions used estimate number circuits admit trade better performance acceptable risk admission control also combined traffic aware routing considering routes around traffic hotspots part setup procedure example 398 network layer consider network illustrated two routers congested indicated congestion b b virtual circuit congestion b congested network b portion network congested virtual circuit b also shown suppose host attached router wants set connection host attached router b normally connection would pass one congested routers avoid situation redraw network shown b omitting congested routers lines dashed line shows possible route virtual circuit avoids congested routers shaikh et al give design kind load sensitive routing traffic throttling internet many computer networks senders adjust transmissions send much traffic network readily deliver setting network aims operate onset congestion congestion imminent must tell senders throttle back transmissions slow feedback business usual rather exceptional situation term congestion avoidance sometimes used contrast operating point one network become overly congested let us look approaches throttling traffic used datagram networks virtual circuit networks approach must solve two problems first routers must determine congestion approaching ideally arrived router continuously monitor resources using three possibilities utilization output links buffering queued packets inside router number packets lost due insufficient buffering possibilities second one useful averages utilization directly account burstiness sec congestion control algorithms traffic utilization may low smooth traffic high highly variable traffic counts packet losses come late congestion already set time packets lost queueing delay inside routers directly captures congestion experienced packets low time jump burst traffic generates backlog maintain good estimate queueing delay sample instantaneous queue length made periodically updated according new old constant determines fast router forgets recent history called ewma exponentially weighted moving average smoothes fluctuations equivalent low pass filter whenever moves threshold router notes onset congestion second problem routers must deliver timely feedback senders causing congestion congestion experienced network relieving congestion requires action behalf senders using network deliver feedback router must identify appropriate senders must warn carefully without sending many packets already congested network different schemes use different feedback mechanisms describe choke packets direct way notify sender congestion tell directly approach router selects congested packet sends choke packet back source host giving destination found packet original packet may tagged header bit turned generate choke packets farther along path forwarded usual way avoid increasing load network time congestion router may send choke packets low rate source host gets choke packet required reduce traffic sent specified destination example datagram network simply picking packets random congestion likely cause choke packets sent fast senders packets queue feedback implicit protocol help prevent congestion yet throttle sender unless causes trouble reason likely multiple choke packets sent given host destination host ignore additional chokes fixed time interval reduction traffic takes effect period choke packets indicate network still congested example choke packet used early internet sourcequench message postel never caught though partly 400 network layer circumstances generated effect clearly specified modern internet uses alternative notification design describe next explicit congestion notification instead generating additional packets warn congestion router tag packet forwards setting bit packet header signal experiencing congestion network delivers packet destination note congestion inform sender sends reply packet sender throttle transmissions design called ecn explicit congestion notification used internet ramakrishnan et al refinement early congestion signaling protocols notably binary feedback scheme ramakrishnan jain used decnet architecture two bits ip packet header used record whether packet experienced congestion packets unmarked sent illustrated routers pass congested router mark packet experienced congestion forwarded destination echo marks back sender explicit congestion signal next reply packet shown dashed line figure indicate happens ip level e g tcp sender must throttle transmissions case choke packets packet host congested router congestion signal marked packet host explicit congestion notification hop hop backpressure high speeds long distances many new packets may transmitted congestion signaled delay signal takes effect consider example host san francisco router sending traffic host new york router oc speed mbps new york host begins run buffers take msec choke packet get back san francisco tell slow ecn indication take even longer delivered via destination choke packet propagation illustrated second third fourth steps sec congestion control algorithms msec another megabits sent even host san francisco completely shuts immediately megabits pipe continue pour dealt seventh diagram new york router notice slower flow alternative approach choke packet take effect every hop passes shown sequence b soon choke packet reaches f f required reduce flow require f devote buffers connection since source still sending away full blast gives immediate relief like headache remedy television commercial next step choke packet reaches e tells e reduce flow f action puts greater demand e buffers gives f immediate relief finally choke packet reaches flow genuinely slows net effect hop hop scheme provide quick relief point congestion price using buffers upstream way congestion nipped bud without losing packets idea discussed detail mishra et al load shedding none methods make congestion disappear routers bring heavy artillery load shedding load shedding fancy way saying routers inundated packets handle throw away term comes world electrical power generation refers practice utilities intentionally blacking certain areas save entire grid collapsing hot summer days demand electricity greatly exceeds supply key question router drowning packets packets drop preferred choice may depend type applications use network file transfer old packet worth new one dropping packet keeping packets example force receiver work buffer data yet use contrast real time media new packet worth old one packets become useless delayed miss time must played user former policy old better new often called wine latter new better old often called milk people would rather drink new milk old wine alternative intelligent load shedding requires cooperation senders example packets carry routing information packets important regular data packets establish routes lost network may lose connectivity another example algorithms compressing video like mpeg periodically transmit entire frame send subsequent 402 network layer b c b c heavy flow e f ok ch ch ok e f e e choke choke reduced flow e ok ch e ok ch reduced flow flow still maximum rate flow reduced b choke packet affects source b choke packet affects hop passes sec congestion control algorithms frames differences last full frame case dropping packet part difference preferable dropping one part full frame future packets depend full frame implement intelligent discard policy applications must mark packets indicate network important packets discarded routers first drop packets least important class next important class course unless significant incentive avoid marking every packet important never ever discard nobody often accounting money used discourage frivolous marking example network might let senders send faster service purchased allows mark excess packets low priority strategy actually bad idea makes efficient use idle resources allowing hosts use long nobody else interested without establishing right times get tough random early detection dealing congestion first starts effective letting gum works trying deal observation leads interesting twist load shedding discard packets buffer space really exhausted motivation idea internet hosts yet get congestion signals routers form ecn instead reliable indication congestion hosts get network packet loss difficult build router drop packets overloaded transport protocols tcp thus hardwired react loss congestion slowing source response reasoning behind logic tcp designed wired networks wired networks reliable lost packets mostly due buffer overruns rather transmission errors wireless links must recover transmission errors link layer seen network layer work well tcp situation exploited help reduce congestion routers drop packets early situation become hopeless time source take action late popular algorithm called red random early detection floyd jacobson determine start discarding routers maintain running average queue lengths average queue length link exceeds threshold link said congested small fraction packets dropped random picking packets random makes likely fastest senders see packet drop best option since router tell source causing trouble datagram network affected sender notice loss acknowledgement transport protocol 404 network layer slow lost packet thus delivering message choke packet implicitly without router sending explicit signal red routers improve performance compared routers drop packets buffers full though may require tuning work well example ideal number packets drop depends many senders need notified congestion however ecn preferred option available works exactly manner delivers congestion signal explicitly rather loss red used hosts receive explicit signals quality service techniques looked previous sections designed reduce congestion improve network performance however applications customers demand stronger performance guarantees network best could done circumstances multimedia applications particular often need minimum throughput maximum latency work section continue study network performance sharper focus ways provide quality service matched application needs area internet undergoing long term upgrade easy solution provide good quality service build network enough capacity whatever traffic thrown name solution overprovisioning resulting network carry application traffic without significant loss assuming decent routing scheme deliver packets low latency performance get better extent telephone system overprovisioned rare pick telephone get dial tone instantly simply much capacity available demand almost always met trouble solution expensive basically solving problem throwing money quality service mechanisms let network less capacity meet application requirements well lower cost moreover overprovisioning based expected traffic bets traffic pattern changes much quality service mechanisms network honor performance guarantees makes even traffic spikes cost turning requests four issues must addressed ensure quality service applications need network regulate traffic enters network reserve resources routers guarantee performance whether network safely accept traffic sec quality service single technique deals efficiently issues instead variety techniques developed use network transport layer practical quality service solutions combine multiple techniques end describe two versions quality service internet called integrated services differentiated services application requirements stream packets source destination called flow clark flow might packets connection connection oriented network packets sent one process another process connectionless network needs flow characterized four primary parameters bandwidth delay jitter loss together determine qos quality service flow requires several common applications stringency network requirements listed note network requirements less demanding application requirements cases application improve service provided network particular networks need lossless reliable file transfer need deliver packets identical delays audio video playout amount loss repaired retransmissions amount jitter smoothed buffering packets receiver however nothing applications remedy situation network provides little bandwidth much delay application bandwidth delay jitter loss email low low low medium file sharing high low low medium web access medium medium low medium remote login low medium medium medium audio demand low low high low video demand high low high low telephony low high high low videoconferencing high high high low stringency applications quality service requirements applications differ bandwidth needs email audio forms remote login needing much file sharing video forms needing great deal interesting delay requirements file transfer applications including email video delay sensitive packets delayed uniformly seconds harm done interactive applications web 406 network layer surfing remote login delay sensitive real time applications telephony videoconferencing strict delay requirements words telephone call delayed long users find connection unacceptable hand playing audio video files server require low delay variation e standard deviation delay packet arrival times called jitter first three applications sensitive packets arriving irregular time intervals remote login somewhat sensitive since updates screen appear little bursts connection suffers much jitter video especially audio extremely sensitive jitter user watching video network frames delayed exactly 000 seconds harm done transmission time varies randomly seconds result terrible unless application hides jitter audio jitter even milliseconds clearly audible first four applications stringent requirements loss audio video bits must delivered correctly goal usually achieved retransmissions packets lost network transport layer wasted work would better network refused packets likely lose first place audio video applications tolerate lost packets without retransmission people notice short pauses occasional skipped frames accommodate variety applications networks may support different categories qos influential example comes atm networks part grand vision networking since become niche technology support constant bit rate e g telephony real time variable bit rate e g compressed videoconferencing non real time variable bit rate e g watching movie demand available bit rate e g file transfer categories also useful purposes networks constant bit rate attempt simulate wire providing uniform bandwidth uniform delay variable bit rate occurs video compressed frames compressing others sending frame lot detail may require sending many bits whereas shot white wall may compress extremely well movies demand actually real time seconds video easily buffered receiver playback starts jitter network merely causes amount stored played video vary available bit rate applications email sensitive delay jitter take bandwidth get sec quality service traffic shaping network make qos guarantees must know traffic guaranteed telephone network characterization simple example voice call uncompressed format needs kbps consists one bit sample every sec however traffic data networks bursty typically arrives nonuniform rates traffic rate varies e g videoconferencing compression users interact applications e g browsing new web page computers switch tasks bursts traffic difficult handle constant rate traffic fill buffers cause packets lost traffic shaping technique regulating average rate burstiness flow data enters network goal allow applications transmit wide variety traffic suits needs including bursts yet simple useful way describe possible traffic patterns network flow set user network e customer provider agree certain traffic pattern e shape flow effect customer says provider transmission pattern look like handle sometimes agreement called sla service level agreement especially made aggregate flows long periods time traffic given customer long customer fulfills part bargain sends packets according agreed contract provider promises deliver timely fashion traffic shaping reduces congestion thus helps network live promise however make work also issue provider tell customer following agreement customer packets excess agreed pattern might dropped network might marked lower priority monitoring traffic flow called traffic policing shaping policing important peer peer transfers consume available bandwidth great importance real time data audio video connections stringent quality service requirements leaky token buckets already seen one way limit amount data application sends sliding window uses one parameter limit much data transit given time indirectly limits rate look general way characterize traffic leaky bucket token bucket algorithms formulations slightly different give equivalent result 408 network layer try imagine bucket small hole bottom illustrated b matter rate water enters bucket outflow constant rate r water bucket zero bucket empty also bucket full capacity b additional water entering spills sides lost host rate r put water packets b check bucket take water tokens b rate r network b c shaping packets b leaky bucket c token bucket bucket used shape police packets entering network shown conceptually host connected network interface containing leaky bucket send packet network must possible put water bucket packet arrives bucket full packet must either queued enough water leaks hold discarded former might happen host shaping traffic network part operating system latter might happen hardware provider network interface policing traffic entering network technique proposed turner called leaky bucket algorithm different equivalent formulation imagine network interface bucket filled shown c tap running rate r bucket capacity b send packet must able take water tokens contents commonly called bucket rather putting water bucket fixed number tokens b accumulate bucket bucket empty must wait tokens arrive send another packet algorithm called token bucket algorithm leaky token buckets limit long term rate flow allow shortterm bursts maximum regulated length pass unaltered without suffering artificial delays large bursts smoothed leaky bucket traffic shaper reduce congestion network example imagine computer produce data mbps million bytes sec first link network also runs speed pattern traffic host generates shown pattern bursty average sec quality service rate one second mbps even though host sends burst 000 kb top speed mbps second rate mbps mb msec mb msec bucket kb r mb b kb bucket empties traffic delayed b e r mb b bucket always empty time msec c time msec f traffic host output shaped token bucket rate mbps capacity b kb c kb token bucket level shaping rate mbps capacity 000 kb e kb f kb suppose routers accept data top speed short intervals buffers fill buffer size kb smaller traffic burst long intervals routers work best rates exceeding mbps say bandwidth given customer implication traffic sent pattern dropped network fit buffers routers avoid packet loss shape traffic host token bucket use rate r mbps capacity b kb traffic fall within network handle output token bucket shown b host send full throttle mbps short drained bucket cut back mbps burst sent effect spread burst time large handle level token bucket shown fig e starts full depleted initial burst reaches zero new packets sent rate buffer filling bursts bucket recovered bucket fills traffic sent stays flat traffic sent fill rate also shape traffic less bursty c shows output token bucket r mbps capacity extreme case 410 network layer traffic completely smoothed bursts allowed traffic enters network steady rate corresponding bucket level shown f always empty traffic queued host release network always packet waiting sent allowed finally shows bucket level token bucket r mbps capacity b 000 kb smallest token bucket traffic passes unaltered might used router network police traffic host sends host sending traffic conforms token bucket agreed network traffic fit token bucket run router edge network host sends faster burstier rate token bucket run water happens traffic policer know traffic described either drop excess packets lower priority depending design network example bucket empties momentarily end initial burst recovers enough next burst leaky token buckets easy implement describe operation token bucket even though described water flowing continuously bucket real implementations must work discrete quantities token bucket implemented counter level bucket counter advanced r units every clock tick seconds would kbit every msec example every time unit traffic sent network counter decremented traffic may sent counter reaches zero packets size bucket level counted packets e g mbit packets bytes however often variablesized packets used case bucket level counted bytes residual byte count low send large packet packet must wait next tick even longer fill rate small calculating length maximum burst bucket empties slightly tricky longer kb divided mb sec burst output tokens arrive call burst length sec maximum output rate bytes sec token bucket capacity b bytes token arrival rate r bytes sec see output burst contains maximum b rs bytes also know number bytes maximumspeed burst length seconds ms hence b rs ms solve equation get b r parameters b kb mb sec r mb sec get burst time msec potential problem token bucket algorithm reduces large bursts long term rate r frequently desirable reduce peak rate without going long term rate also without raising sec quality service long term rate allow traffic network one way get smoother traffic insert second token bucket first one rate second bucket much higher first one basically first bucket characterizes traffic fixing average rate allowing bursts second bucket reduces peak rate bursts sent network example rate second token bucket set mbps capacity set initial burst enter network peak rate mbps lower mbps rate previously using buckets bit tricky token buckets used traffic shaping hosts packets queued delayed buckets permit sent token buckets used traffic policing routers network algorithm simulated make sure packets sent permitted nevertheless tools provide ways shape network traffic manageable forms assist meeting quality service requirements packet scheduling able regulate shape offered traffic good start however provide performance guarantee must reserve sufficient resources along route packets take network assuming packets flow follow route spraying routers random makes hard guarantee anything consequence something similar virtual circuit set source destination packets belong flow must follow route algorithms allocate router resources among packets flow competing flows called packet scheduling algorithms three different kinds resources potentially reserved different flows bandwidth buffer space cpu cycles first one bandwidth obvious flow requires mbps outgoing line capacity mbps trying direct three flows line going work thus reserving bandwidth means oversubscribing output line second resource often short supply buffer space packet arrives buffered inside router transmitted chosen outgoing line purpose buffer absorb small bursts traffic flows contend buffer available packet discarded since place put good quality service buffers might reserved specific flow flow compete 412 network layer buffers flows maximum value always buffer available flow needs one finally cpu cycles may also scarce resource takes router cpu time process packet router process certain number packets per second modern routers able process packets quickly kinds packets require greater cpu processing icmp packets describe sec making sure cpu overloaded needed ensure timely processing packets packet scheduling algorithms allocate bandwidth router resources determining buffered packets send output line next already described straightforward scheduler explaining routers work router buffers packets queue output line sent sent order arrived algorithm known fifo first first equivalently fcfs first come first serve fifo routers usually drop newly arriving packets queue full since newly arrived packet would placed end queue behavior called tail drop intuitive may wondering alternatives exist fact red algorithm described sec chose newly arriving packet drop random average queue length grew large scheduling algorithms describe also create opportunities deciding packet drop buffers full fifo scheduling simple implement suited providing good quality service multiple flows one flow easily affect performance flows first flow aggressive sends large bursts packets lodge queue processing packets order arrival means aggressive sender hog capacity routers packets traverse starving flows reducing quality service add insult injury packets flows get likely delayed sit queue behind many packets aggressive sender many packet scheduling algorithms devised provide stronger isolation flows thwart attempts interference bhatti crowcroft one first ones fair queueing algorithm devised nagle essence algorithm routers separate queues one flow given output line line becomes idle router scans queues round robin shown takes first packet next queue way n hosts competing output line host gets send one every n packets fair sense flows get send packets rate sending packets improve rate although start algorithm flaw gives bandwidth hosts use large packets hosts use small packets demers et al suggested improvement round robin done way sec quality service round robin service output line input queues round robin fair queueing simulate byte byte round robin instead packet packet round robin trick compute virtual time number round packet would finish sent round drains byte queues data send packets sorted order finishing times sent order algorithm example finish times packets arriving three flows illustrated packet length l round finish simply l rounds start time start time either finish time previous packet arrival time packet queue empty arrives arrives late arrives goes first h g e f b c fair queueing 2x weight input queues packet arrival length time b c e f g h finish time 20 28 output order 8 b weighted fair queueing b finishing times packets table b looking first two packets top two queues packets arrive order b f packet arrives round bytes long finish time round similarly finish time packet b packet arrives b sent finish time byte rounds starts b finishes similarly finish time f absence new arrivals relative sending order b f even though f arrived possible another small packet arrive top flow obtain finish time jump ahead 414 network layer transmission packet started fair queueing preempt packets currently transmitted packets sent entirety fair queueing approximation ideal byte byte scheme good approximation staying within one packet transmission ideal scheme times one shortcoming algorithm practice gives hosts priority many situations desirable give example video servers bandwidth say file servers easily possible giving video server two bytes per round modified algorithm called wfq weighted fair queueing letting number bytes per round weight flow w give formula computing finish time fi max ai fi li w ai arrival time fi finish time li length packet bottom queue weight packets sent quickly see finish times given b another practical consideration implementation complexity wfq requires packets inserted finish time sorted queue n flows best logn operation per packet difficult achieve many flows high speed routers shreedhar varghese describe approximation called deficit round robin implemented efficiently operations per packet wfq widely used given approximation kinds scheduling algorithms exist simple example priority scheduling packet marked priority high priority packets always sent low priority packets buffered within priority packets sent fifo order however priority scheduling disadvantage burst high priority packets starve low priority packets may wait indefinitely wfq often provides better alternative giving high priority queue large weight say high priority packets often go short line relatively packets high priority yet fraction low priority packets continue sent even high priority traffic high low priority system essentially two queue wfq system high priority infinite weight final example scheduler packets might carry timestamps sent timestamp order clark et al describe design timestamp records far packet behind ahead schedule sent sequence routers path packets queued behind packets router tend behind schedule packets serviced first tend ahead schedule sending packets order timestamps beneficial effect speeding slow packets time slowing fast packets result packets delivered network consistent delay sec quality service admission control seen necessary elements qos time put together actually provide qos guarantees established process admission control first saw admission control used control congestion performance guarantee albeit weak one guarantees considering stronger model user offers flow accompanying qos requirement network network decides whether accept reject flow based capacity commitments made flows accepts network reserves capacity advance routers guarantee qos traffic sent new flow reservations must made routers along route packets take network routers path without reservations might become congested single congested router break qos guarantee many routing algorithms find single best path source destination send traffic best path may cause flows rejected enough spare capacity along best path qos guarantees new flows may still accommodated choosing different route flow excess capacity called qos routing chen nahrstedt give overview techniques also possible split traffic destination multiple paths easily find excess capacity simple method routers choose equal cost paths divide traffic equally proportion capacity outgoing links however sophisticated algorithms also available nelakuditi zhang given path decision accept reject flow simple matter comparing resources bandwidth buffers cycles requested flow router excess capacity three dimensions little complicated start although applications may know bandwidth requirements know buffers cpu cycles minimum different way needed describe flows translate description router resources get shortly next applications far tolerant occasional missed deadline others applications must choose type guarantees network make whether hard guarantees behavior hold time else equal everyone would like hard guarantees difficulty expensive constrain worst case behavior guarantees packets often sufficient applications flows guarantee supported fixed capacity finally applications may willing haggle flow parameters others may example movie viewer normally runs frames sec may willing drop back frames sec enough free bandwidth support frames sec similarly number pixels per frame audio bandwidth properties may adjustable 416 network layer many parties may involved flow negotiation sender receiver routers along path flows must described accurately terms specific parameters negotiated set parameters called flow specification typically sender e g video server produces flow specification proposing parameters would like use specification propagates along route router examines modifies parameters need modifications reduce flow increase e g lower data rate higher one gets end parameters established example flow specification consider example based rfcs integrated services qos design cover next section five parameters first two parameters token bucket rate token bucket size use token bucket give maximum sustained rate sender may transmit averaged long time interval largest burst send short time interval parameter unit token bucket rate bytes sec token bucket size bytes peak data rate bytes sec minimum packet size bytes maximum packet size bytes example flow specification third parameter peak data rate maximum transmission rate tolerated even brief time intervals sender must never exceed rate even short bursts last two parameters specify minimum maximum packet sizes including transport network layer headers e g tcp ip minimum size useful processing packet takes fixed time matter short router may prepared handle 000 packets sec kb prepared handle 000 packets sec bytes even though represents lower data rate maximum packet size important due internal network limitations may exceeded example part path goes ethernet maximum packet size restricted bytes matter rest network handle interesting question router turns flow specification set specific resource reservations first glance might appear router link runs say gbps average packet bits process million packets sec observation case though always idle periods link due statistical fluctuations load sec quality service link needs every bit capacity get work done idling even bits creates backlog never get rid even load slightly theoretical capacity queues build delays occur consider situation packets arrive random mean arrival rate packets sec packets random lengths sent link mean service rate packets sec assumption arrival service distributions poisson distributions called queueing system stands markov e poisson proven using queueing theory mean delay experienced packet cpu utilization first factor service time would absence competition second factor slowdown due competition flows example 000 packets sec 000 packets sec 95 mean delay experienced packet sec instead sec time accounts queueing time service time seen load low say routers along flow route queueing delay alone account sec delay one method relating flow specifications router resources correspond bandwidth delay performance guarantees given parekh gallagher based traffic sources shaped r b token buckets wfq routers flow given wfq weight w large enough drain token bucket rate r shown example flow rate mbps router output link capacity gbps weight flow must greater 1000th total weights flows router output link guarantees flow minimum bandwidth given large enough rate flow admitted r wi w wxc weights capacity c wi r b traffic source router weighted fair queue bandwidth delay guarantees token buckets wfq largest queueing delay flow see function burst size token bucket consider two extreme cases traffic smooth without 418 network layer bursts packets drained router quickly arrive queueing delay ignoring packetization effects hand traffic saved bursts maximum size burst b may arrive router case maximum queueing delay time taken drain burst guaranteed bandwidth b r ignoring packetization effects delay large flow must request bandwidth network guarantees hard token buckets bound burstiness source fair queueing isolates bandwidth given different flows means flow meet bandwidth delay guarantees regardless competing flows behave router flows break guarantee even saving traffic sending moreover result holds path multiple routers network topology flow gets minimum bandwidth bandwidth guaranteed router reason flow gets maximum delay subtle worst case burst traffic hits first router competes traffic flows delayed maximum delay however delay also smooth burst turn means burst incur queueing delays later routers overall queueing delay integrated services ietf put lot effort devising architecture streaming multimedia work resulted two dozen rfcs starting rfcs 2212 generic name work integrated services aimed unicast multicast applications example former single user streaming video clip news site example latter collection digital television stations broadcasting programs streams ip packets many receivers various locations concentrate multicast since unicast special case multicast many multicast applications groups change membership dynamically example people enter video conference get bored switch soap opera croquet channel conditions approach senders reserve bandwidth advance work well since would require sender track entries exits audience system designed transmit television millions subscribers would work rsvp resource reservation protocol main part integrated services architecture visible users network rsvp described rfcs 2210 protocol used making reservations protocols used sending data sec quality service rsvp allows multiple senders transmit multiple groups receivers permits individual receivers switch channels freely optimizes bandwidth use time eliminating congestion simplest form protocol uses multicast routing using spanning trees discussed earlier group assigned group address send group sender puts group address packets standard multicast routing algorithm builds spanning tree covering group members routing algorithm part rsvp difference normal multicasting little extra information multicast group periodically tell routers along tree maintain certain data structures memories example consider network hosts multicast senders hosts multicast receivers example senders receivers disjoint general two sets may overlap multicast trees hosts shown b c respectively senders b e h g k j c f g l j e h k b b c f g l j c f e h k l receivers b c network b multicast spanning tree host c multicast spanning tree host get better reception eliminate congestion receivers group send reservation message tree sender message propagated using reverse path forwarding algorithm discussed earlier 420 network layer hop router notes reservation reserves necessary bandwidth saw previous section weighted fair queueing scheduler used make reservation insufficient bandwidth available reports back failure time message gets back source bandwidth reserved way sender receiver making reservation request along spanning tree example reservation shown host requested channel host established packets flow without congestion consider happens host next reserves channel sender host user watch two television programs second path reserved illustrated b note two separate channels needed host router e two independent streams transmitted b e c f g l j b b c e c bandwidth reserved source f e f h g h l j bandwidth reserved source h g k j k b k l c host requests channel host b host requests second channel host c host requests channel host finally c host decides watch program transmitted host also makes reservation first dedicated bandwidth reserved far router h however router sees already feed host necessary bandwidth already reserved reserve note hosts might asked different amounts bandwidth e g host playing small screen wants lowresolution information capacity reserved must large enough satisfy greediest receiver making reservation receiver optionally specify one sources wants receive also specify whether choices sec quality service fixed duration reservation whether receiver wants keep open option changing sources later routers use information optimize bandwidth planning particular two receivers set share path agree change sources later reason strategy fully dynamic case reserved bandwidth decoupled choice source receiver reserved bandwidth switch another source keep portion existing path valid new source host transmitting several video streams real time example tv broadcaster multiple channels host may switch without changing reservation routers care program receiver watching differentiated services flow based algorithms potential offer good quality service one flows reserve whatever resources needed along route however also downside require advance setup establish flow something scale well thousands millions flows also maintain internal per flow state routers making vulnerable router crashes finally changes required router code substantial involve complex router router exchanges setting flows consequence work continues advance integrated services deployments anything like exist yet reasons ietf also devised simpler approach quality service one largely implemented locally router without advance setup without whole path involved approach known class based opposed flow based quality service ietf standardized architecture called differentiated services described rfcs numerous others describe differentiated services offered set routers forming administrative domain e g isp telco administration defines set service classes corresponding forwarding rules customer subscribes differentiated services customer packets entering domain marked class belong information carried differentiated services field ipv4 ipv6 packets described sec classes defined per hop behaviors correspond treatment packet receive router guarantee across network better service provided packets per hop behaviors e g premium service others e g regular service traffic within class may required conform specific shape leaky bucket specified drain rate operator nose business might charge extra premium packet transported might allow n premium packets per month fixed additional monthly fee note scheme requires advance setup resource 422 network layer reservation time consuming end end negotiation flow integrated services makes differentiated services relatively easy implement class based service also occurs industries example package delivery companies often offer overnight two day three day service airlines offer first class business class cattle class service long distance trains often multiple service classes even paris subway two different service classes packets classes may differ terms delay jitter probability discarded event congestion among possibilities probably roomier ethernet frames make difference flow based quality service class based quality service clearer consider example internet telephony flowbased scheme telephone call gets resources guarantees class based scheme telephone calls together get resources reserved class telephony resources taken away packets web browsing class classes telephone call gets private resources reserved alone expedited forwarding choice service classes operator since packets often forwarded networks run different operators ietf defined network independent service classes simplest class expedited forwarding let us start one described rfc idea behind expedited forwarding simple two classes service available regular expedited vast majority traffic expected regular limited fraction packets expedited expedited packets able transit network though packets present way get low loss low delay low jitter service needed voip symbolic representation two tube system given note still one physical line two logical pipes shown figure represent way reserve bandwidth different classes service second physical line one way implement strategy follows packets classified expedited regular marked accordingly step might done sending host ingress first router advantage classification sending host information available packets belong flows task may performed networking software even operating system avoid change existing applications example becoming common voip packets marked expedited service hosts packets pass corporate network isp supports expedited service receive preferential treatment network support expedited service harm done sec quality service expedited packets regular packets expedited packets experience traffic free network course marking done host ingress router likely police traffic make sure customers sending expedited traffic paid within network routers may two output queues outgoing line one expedited packets one regular packets packet arrives queued accordingly expedited queue given priority regular one example using priority scheduler way expedited packets see unloaded network even fact heavy load regular traffic assured forwarding somewhat elaborate scheme managing service classes called assured forwarding described rfc assured forwarding specifies shall four priority classes class resources top three classes might called gold silver bronze addition defines three discard classes packets experiencing congestion low medium high taken together two factors define service classes shows one way packets might processed assured forwarding first step classify packets one four priority classes step might done sending host shown figure ingress router rate higher priority packets may limited operator part service offering next step determine discard class packet done passing packets priority class traffic policer token bucket policer lets traffic identifies packets fit within small bursts low discard packets exceed small bursts medium discard packets exceed large bursts high discard combination priority discard class encoded packet finally packets processed routers network packet scheduler distinguishes different classes common choice use 424 network layer packets diffserv mark gold silver policer classifier bronze packet source four priority classes twelve priority drop classes weighted fair queues router possible implementation assured forwarding weighted fair queueing four priority classes higher classes given higher weights way higher classes get bandwidth lower classes starved bandwidth entirely example weights double one class next higher class higher class get twice bandwidth within priority class packets higher discard class preferentially dropped running algorithm red random early detection saw sec red start drop packets congestion builds router run buffer space stage still buffer space accept low discard packets dropping high discard packets internetworking implicitly assumed single homogeneous network machine using protocol layer unfortunately assumption wildly optimistic many different networks exist including pans lans mans wans described ethernet internet cable fixed mobile telephone networks 11 16 numerous protocols widespread use across networks every layer following sections take careful look issues arise two networks connected form internetwork simply internet would much simpler join networks together everyone used single networking technology often case dominant kind network ethernet pundits speculate multiplicity technologies go away soon everyone realizes wonderful fill favorite network count history shows wishful thinking different kinds networks grapple different problems example ethernet satellite networks always likely differ reusing existing systems running data networks top cable telephone network power sec internetworking lines adds constraints cause features networks diverge heterogeneity stay always different networks would simpler need interconnect also unlikely bob metcalfe postulated value network n nodes number connections may made nodes n gilder means large networks much valuable small networks allow many connections always incentive combine smaller networks internet prime example interconnection write internet capital distinguish internets connected networks purpose joining networks allow users communicate users ones pay isp internet service may charged depending bandwidth line really paying ability exchange packets host also connected internet internet would popular could send packets hosts city since networks often differ important ways getting packets one network another always easy must address problems heterogeneity also problems scale resulting internet grows large begin looking networks differ see shall see approach used successfully ip internet protocol network layer protocol internet including techniques tunneling networks routing internetworks packet fragmentation networks differ networks differ many ways differences different modulation techniques frame formats internal physical data link layers differences concern us instead list differences exposed network layer papering differences makes internetworking difficult operating within single network packets sent source one network must transit one foreign networks reaching destination network many problems occur interfaces networks start source needs able address destination source ethernet network destination wimax network assuming even specify wimax destination ethernet network packets would cross connectionless network connection oriented one may require new connection set short notice injects delay much overhead connection used many packets many specific differences may accommodated well multicast packet group members network 426 network layer item possibilities service offered connectionless versus connection oriented addressing different sizes flat hierarchical broadcasting present absent also multicast packet size every network maximum ordering ordered unordered delivery quality service present absent many different kinds reliability different levels loss security privacy rules encryption etc parameters different timeouts flow specifications etc accounting connect time packet byte many ways networks differ support multicast differing max packet sizes used different networks major nuisance pass byte packet network whose maximum size bytes packets connection oriented network transit connectionless network may arrive different order sent something sender likely expect might come unpleasant surprise receiver well kinds differences papered effort example gateway joining two networks might generate separate packets destination lieu better network support multicasting large packet might broken sent pieces joined back together receivers might buffer packets deliver order networks also differ large respects difficult reconcile clearest example quality service one network strong qos offers best effort service impossible make bandwidth delay guarantees real time traffic end end fact likely made best effort network operated low utilization hardly used unlikely goal isps security mechanisms problematic least encryption confidentiality data integrity layered top networks already include finally differences accounting lead unwelcome bills normal usage suddenly becomes expensive roaming mobile phone users data plans discovered networks connected two basic choices connecting different networks build devices translate convert packets kind network packets network like good computer scientists try solve sec internetworking problem adding layer indirection building common layer top different networks either case devices placed boundaries networks early cerf kahn argued common layer hide differences existing networks approach tremendously successful layer proposed eventually separated tcp ip protocols almost four decades later ip foundation modern internet accomplishment cerf kahn awarded turing award informally known nobel prize computer science ip provides universal packet format routers recognize passed almost every network ip extended reach computer networks take telephone network also runs sensor networks tiny devices presumed resource constrained support discussed several different devices connect networks including repeaters hubs switches bridges routers gateways repeaters hubs move bits one wire another mostly analog devices understand anything higher layer protocols bridges switches operate link layer used build networks minor protocol translation process example mbps ethernet switches focus section interconnection devices operate network layer namely routers leave gateways higherlayer interconnection devices later let us first explore high level interconnection common network layer used interconnect dissimilar networks internet comprised 11 mpls ethernet networks shown suppose source machine 11 network wants send packet destination machine ethernet network since technologies different separated another kind network mpls added processing needed boundaries networks different networks may general different forms addressing packet carries network layer address identify host across three networks first boundary packet reaches transitions 11 network mpls network 11 provides connectionless service mpls provides connection oriented service means virtual circuit must set cross network packet traveled along virtual circuit reach ethernet network boundary packet may large carried since 11 work larger frames ethernet handle problem packet divided fragments fragment sent separately fragments reach destination reassembled packet completed journey protocol processing journey shown b source accepts data transport layer generates packet common network layer header ip example network header contains 428 network layer packet virtual circuit ethernet mpls 11 router source router destination data transport layer ip 11 ip 11 ip ip ip ip mpls ip mpls ip eth ip eth ip physical b packet crossing different networks b network link layer protocol processing ultimate destination address used determine packet sent via first router packet encapsulated 11 frame whose destination first router transmitted router packet removed frame data field 11 frame header discarded router examines ip address packet looks address routing table based address decides send packet second router next part path mpls virtual circuit must established second router packet must encapsulated mpls headers travel circuit far end mpls header discarded network address consulted find next network layer hop destination since packet long sent ethernet split two portions portions put data field ethernet frame sent ethernet address destination destination ethernet header stripped frames contents reassembled packet finally reached destination observe essential difference routed case switched bridged case router packet extracted frame network address packet used deciding send switch bridge entire frame transported basis mac address switches understand network layer protocol used switch packets routers unfortunately internetworking easy made sound fact bridges introduced intended would join different types networks least different types lans translating frames one lan frames another lan however sec internetworking work well reason internetworking difficult differences features lans different maximum packet sizes lans without priority classes hard mask today bridges predominantly used connect kind network link layer routers connect different networks network layer internetworking successful building large networks works common network layer fact many network protocols time getting everybody agree single format difficult companies perceive commercial advantage proprietary format control examples besides ip near universal network protocol ipx sna appletalk none protocols still widespread use always protocols relevant example probably ipv4 ipv6 versions ip compatible would necessary create ipv6 router handle multiple network protocols called multiprotocol router must either translate protocols leave connection higher protocol layer neither approach entirely satisfactory connection higher layer say using tcp requires networks implement tcp may case limits usage across networks applications use tcp include many real time applications alternative translate packets networks however unless packet formats close relatives information fields conversions always incomplete often doomed failure example ipv6 addresses bits long fit bit ipv4 address field matter hard router tries getting ipv4 ipv6 run network proven major obstacle deployment ipv6 fair getting customers understand want ipv6 first place greater problems expected translating fundamentally different protocols connectionless connection oriented network protocols given difficulties conversion rarely attempted arguably even ip worked well serving kind lowest common denominator requires little networks runs offers best effort service result tunneling handling general case making two different networks interwork exceedingly difficult however common special case manageable even different network protocols case source destination hosts type network different network example think international bank ipv6 network 430 network layer paris ipv6 network london connectivity offices via ipv4 internet situation shown ipv6 paris ipv4 ipv6 router router london tunnel ipv6 packet ipv4 ipv6 packet ipv6 packet tunneling packet paris london solution problem technique called tunneling send ip packet host london office host paris office constructs packet containing ipv6 address london sends multiprotocol router connects paris ipv6 network ipv4 internet router gets ipv6 packet encapsulates packet ipv4 header addressed ipv4 side multiprotocol router connects london ipv6 network router puts ipv6 packet inside ipv4 packet wrapped packet arrives london router removes original ipv6 packet sends onward destination host path ipv4 internet seen big tunnel extending one multiprotocol router ipv6 packet travels one end tunnel snug nice box worry dealing ipv4 neither hosts paris london multiprotocol routers understand ipv4 ipv6 packets effect entire trip one multiprotocol router like hop single link analogy may make tunneling clearer consider person driving car paris london within france car moves power hits english channel loaded onto high speed train transported england chunnel cars permitted drive chunnel effectively car carried freight depicted far end car let loose english roads continues move power tunneling packets foreign network works way tunneling widely used connect isolated hosts networks using networks network results called overlay since effectively overlaid base network deployment network protocol new feature common reason ipv6 ipv4 example shows disadvantage tunneling none hosts network tunneled reached packets escape middle tunnel sec internetworking car english channel paris london railroad carriage railroad track tunneling car france england however limitation tunnels turned advantage vpns virtual private networks vpn simply overlay used provide measure security explore vpns get chap internetwork routing routing internet poses basic problem routing within single network added complications start networks may internally use different routing algorithms example one network may use link state routing another distance vector routing since link state algorithms need know topology distance vector algorithms difference alone would make unclear find shortest paths across internet networks run different operators lead bigger problems first operators may different ideas good path network one operator may want route least delay another may want inexpensive route lead operators use different quantities set shortest path costs e g milliseconds delay vs monetary cost weights comparable across networks shortest paths internet well defined worse yet one operator may want another operator even know details paths network perhaps weights paths may reflect sensitive information monetary cost represents competitive business advantage finally internet may much larger networks comprise may therefore require routing algorithms scale well using hierarchy even none individual networks need use hierarchy considerations lead two level routing algorithm within network intradomain interior gateway protocol used routing gateway older term router might link state protocol kind already described across networks make internet interdomain exterior gateway protocol used networks may use different intradomain protocols must use interdomain protocol 432 network layer internet interdomain routing protocol called bgp border gateway protocol describe next section one important term introduce since network operated independently others often referred autonomous system good mental model isp network fact isp network may comprised one managed acquired multiple networks difference usually significant two levels usually strictly hierarchical highly suboptimal paths might result large international network small regional network abstracted single network however relatively little information routes within networks exposed find routes across internetwork helps address complications improves scaling lets operators freely select routes within networks using protocol choosing also require weights compared across networks expose sensitive information outside networks however said little far routes across networks internet determined internet large determining factor business arrangements isps isp may charge receive money isps carrying traffic another factor internetwork routing requires crossing international boundaries various laws may suddenly come play sweden strict privacy laws exporting personal data swedish citizens sweden nontechnical factors wrapped concept routing policy governs way autonomous networks select routes use return routing policies describe bgp packet fragmentation network link imposes maximum size packets limits various causes among hardware e g size ethernet frame operating system e g buffers bytes protocols e g number bits packet length field compliance inter national standard desire reduce error induced retransmissions level desire prevent one packet occupying channel long result factors network designers free choose old maximum packet size wish maximum payloads common sec internetworking technologies bytes ethernet bytes 11 ip generous allows packets big 515 bytes hosts usually prefer transmit large packets reduces packet overheads bandwidth wasted header bytes obvious internetworking problem appears large packet wants travel network whose maximum packet size small nuisance persistent issue solutions evolved along much experience gained internet one solution make sure problem occur first place however easier said done source usually know path packet take network destination certainly know small packets must get packet size called path mtu path maximum transmission unit even source know path mtu packets routed independently connectionless network internet routing means paths may suddenly change unexpectedly change path mtu alternative solution problem allow routers break packets fragments sending fragment separate network layer packet however every parent small child knows converting large object small fragments considerably easier reverse process physicists even given effect name second law thermodynamics packet switching networks trouble putting fragments back together two opposing strategies exist recombining fragments back original packet first strategy make fragmentation caused smallpacket network transparent subsequent networks packet must pass way ultimate destination option shown fig approach oversized packet arrives g1 router breaks fragments fragment addressed exit router g2 pieces recombined way passage small packet network made transparent subsequent networks even aware fragmentation occurred transparent fragmentation straightforward problems one thing exit router must know received pieces either count field end packet bit must provided also packets must exit via router reassembled routes constrained allowing fragments follow one route ultimate destination fragments disjoint route performance may lost significant amount work router may may need buffer fragments arrive decide throw away fragments arrive work may wasteful packet may pass series small packet networks need repeatedly fragmented reassembled fragmentation strategy refrain recombining fragments intermediate routers packet fragmented fragment 434 network layer network network packet g1 g2 g1 fragments large packet g3 g2 reassembles fragments g4 g3 fragments g4 reassembles packet g1 g1 fragments large packet g2 g3 g4 fragments reassembled final destination host reached b transparent fragmentation b nontransparent fragmentation treated though original packet routers pass fragments shown b reassembly performed destination host main advantage nontransparent fragmentation requires routers less work ip works way complete design requires fragments numbered way original data stream reconstructed design used ip give every fragment packet number carried packets absolute byte offset within packet flag indicating whether end packet example shown simple design attractive properties fragments placed buffer destination right place reassembly even arrive order fragments also fragmented pass network yet smaller mtu shown c retransmissions packet fragments received fragmented different pieces finally fragments arbitrary size single byte plus packet header cases destination simply uses packet number fragment offset place data right position end packet flag determine complete packet unfortunately design still problems overhead higher transparent fragmentation fragment headers carried links may needed real problem existence fragments first place kent mogul argued fragmentation detrimental performance well header overheads whole packet lost fragments lost fragmentation burden hosts originally realized sec internetworking number first elementary fragment packet packet number end packet bit b byte c e f f g h g h j header b c e header j header b b c header e f g h header j header c fragmentation elementary data size byte original packet containing data bytes b fragments passing network maximum packet size payload bytes plus header c fragments passing size gateway leads us back original solution getting rid fragmentation network strategy used modern internet process called path mtu discovery mogul deering works follows ip packet sent header bits set indicate fragmentation allowed performed router receives packet large generates error packet returns source drops packet shown source receives error packet uses information inside refragment packet pieces small enough router handle router path even smaller mtu process repeated packet length source try try path mtu discovery destination 436 network layer advantage path mtu discovery source knows length packet send routes path mtu change new error packets triggered source adapt new path however fragmentation still needed source destination unless higher layers learn path mtu pass right amount data ip tcp ip typically implemented together tcp ip able pass sort information even done protocols fragmentation still moved network hosts disadvantage path mtu discovery may added startup delays simply send packet one round trip delay may needed probe path find mtu data delivered destination begs question whether better designs answer probably yes consider design router simply truncates packets exceed mtu would ensure destination learns mtu rapidly possible amount data delivered receives data network layer internet time discuss network layer internet detail getting specifics worth taking look principles drove design past made success today often nowadays people seem forgotten principles enumerated discussed rfc well worth reading mandatory protocol designers final exam end rfc draws heavily ideas put forth clark saltzer et al summarize consider top principles important least important make sure works finalize design standard multiple prototypes successfully communicated often designers first write page standard get approved discover deeply flawed work write version standard way go keep simple doubt use simplest solution william occam stated principle occam razor 14th century put modern terms fight features feature absolutely essential leave especially effect achieved combining features make clear choices several ways thing choose one two ways thing looking trouble standards often multiple options modes sec network layer internet parameters several powerful parties insist way best designers strongly resist tendency say exploit modularity principle leads directly idea protocol stacks whose layers independent ones way circumstances require one module layer changed ones affected expect heterogeneity different types hardware transmission facilities applications occur large network handle network design must simple general flexible avoid static options parameters parameters unavoidable e g maximum packet size best sender receiver negotiate value rather defining fixed choices look good design need perfect often designers good design handle weird special case rather messing design designers go good design put burden working around people strange requirements strict sending tolerant receiving words send packets rigorously comply standards expect incoming packets may fully conformant try deal think scalability system handle millions hosts billions users effectively centralized databases kind tolerable load must spread evenly possible available resources consider performance cost network poor performance outrageous costs nobody use let us leave general principles start looking details internet network layer network layer internet viewed collection networks ases autonomous systems interconnected real structure several major backbones exist constructed high bandwidth lines fast routers biggest backbones everyone else connects reach rest internet called tier networks attached backbones isps internet service providers provide internet access homes businesses data centers colocation facilities full server machines regional mid level networks data centers serve much content sent internet attached 438 network layer regional networks isps lans many universities companies edge networks sketch quasihierarchical organization given leased lines asia u backbone leased transatlantic lines european backbone mobile network regional network national network wimax ip router company network cable home network ethernet internet interconnected collection many networks glue holds whole internet together network layer protocol ip internet protocol unlike older network layer protocols ip designed beginning internetworking mind good way think network layer job provide best effort e guaranteed way transport packets source destination without regard whether machines network whether networks communication internet works follows transport layer takes data streams breaks may sent ip packets theory packets kb practice usually bytes fit one ethernet frame ip routers forward packet internet along path one router next destination reached destination network layer hands data transport layer gives receiving process pieces finally get destination machine reassembled network layer original datagram datagram handed transport layer example packet originating host home network traverse four networks large number ip routers even getting company network destination host located sec network layer internet unusual practice many longer paths also much redundant connectivity internet backbones isps connecting multiple locations means many possible paths two hosts job ip routing protocols decide paths use ip version protocol appropriate place start study network layer internet format ip datagrams ipv4 datagram consists header part body payload part header byte fixed part variable length optional part header format shown bits transmitted left right top bottom high order bit version field going first big endian network byte order littleendian machines intel x86 computers software conversion required transmission reception retrospect little endian would better choice time ip designed one knew would come dominate computing bits version ihl differentiated services identification time live total length f f protocol fragment offset header checksum source address destination address options words ipv4 internet protocol header version field keeps track version protocol datagram belongs version dominates internet today started discussion including version start datagram becomes possible transition versions long period time fact ipv6 next version ip defined decade ago yet beginning deployed describe later section use eventually forced china almost people desktop pc laptop ip phone aside numbering ipv5 experimental real time stream protocol never widely used 440 network layer since header length constant field header ihl provided tell long header bit words minimum value applies options present maximum value bit field limits header bytes thus options field bytes options one records route packet taken bytes far small making options useless differentiated services field one fields changed meaning slightly years originally called type service field still intended distinguish different classes service various combinations reliability speed possible digitized voice fast delivery beats accurate delivery file transfer error free transmission important fast transmission type service field provided bits signal priority bits signal whether host cared delay throughput reliability however one really knew bits routers left unused many years differentiated services designed ietf threw towel reused field top bits used mark packet service class described expedited assured services earlier chapter bottom bits used carry explicit congestion notification information whether packet experienced congestion described explicit congestion notification part congestion control earlier chapter total length includes everything datagram header data maximum length 535 bytes present upper limit tolerable future networks larger datagrams may needed identification field needed allow destination host determine packet newly arrived fragment belongs fragments packet contain identification value next comes unused bit surprising available real estate ip header extremely scarce april fool joke bellovin proposed using bit detect malicious traffic would greatly simplify security packets evil bit set would known sent attackers could discarded unfortunately network security simple come two bit fields related fragmentation df stands fragment order routers fragment packet originally intended support hosts incapable putting pieces back together used part process discover path mtu largest packet travel along path without fragmented marking datagram df bit sender knows either arrive one piece error message returned sender mf stands fragments fragments except last one bit set needed know fragments datagram arrived fragment offset tells current packet fragment belongs fragments except last one datagram must multiple bytes sec network layer internet elementary fragment unit since bits provided maximum fragments per datagram supporting maximum packet length limit total length field working together identification mf fragment offset fields used implement fragmentation described sec ttl time live field counter used limit packet lifetimes originally supposed count time seconds allowing maximum lifetime sec must decremented hop supposed decremented multiple times packet queued long time router practice counts hops hits zero packet discarded warning packet sent back source host feature prevents packets wandering around forever something otherwise might happen routing tables ever become corrupted network layer assembled complete packet needs know protocol field tells transport process give packet tcp one possibility udp others numbering protocols global across entire internet protocols assigned numbers formerly listed rfc nowadays contained online database located www iana org since header carries vital information addresses rates checksum protection header checksum algorithm add bit halfwords header arrive using one complement arithmetic take one complement result purposes algorithm header checksum assumed zero upon arrival checksum useful detecting errors packet travels network note must recomputed hop least one field always changes time live field tricks used speed computation source address destination address indicate ip address source destination network interfaces discuss internet addresses next section options field designed provide escape allow subsequent versions protocol include information present original design permit experimenters try new ideas avoid allocating header bits information rarely needed options variable length begins byte code identifying option options followed byte option length field one data bytes options field padded multiple bytes originally five options listed defined security option tells secret information theory military router might use field specify route packets certain countries military considers bad guys practice routers ignore practical function help spies find good stuff easily strict source routing option gives complete path source destination sequence ip addresses datagram required follow 442 network layer option description security specifies secret datagram strict source routing gives complete path followed loose source routing gives list routers missed record route makes router append ip address timestamp makes router append address timestamp ip options exact route useful system managers need send emergency packets routing tables corrupted making timing measurements loose source routing option requires packet traverse list routers specified order specified allowed pass routers way normally option provide routers force particular path example force packet london sydney go west instead east option might specify routers new york los angeles honolulu option useful political economic considerations dictate passing avoiding certain countries record route option tells router along path append ip address options field allows system managers track bugs routing algorithms packets houston dallas visiting tokyo first arpanet first set packet ever passed nine routers bytes options plenty mentioned small finally timestamp option like record route option except addition recording bit ip address router also records bit timestamp option mostly useful network measurement today ip options fallen favor many routers ignore process efficiently shunting side uncommon case partly supported rarely used ip addresses defining feature ipv4 bit addresses every host router internet ip address used source address destination address fields ip packets important note ip address actually refer host really refers network interface host two networks must two ip addresses however practice hosts one network thus one ip address contrast routers multiple interfaces thus multiple ip addresses sec network layer internet prefixes ip addresses hierarchical unlike ethernet addresses bit address comprised variable length network portion top bits host portion bottom bits network portion value hosts single network ethernet lan means network corresponds contiguous block ip address space block called prefix ip addresses written dotted decimal notation format bytes written decimal example bit hexadecimal address 80d00297 written 208 151 prefixes written giving lowest ip address block size block size determined number bits network portion remaining bits host portion vary means size must power two convention written prefix ip address slash followed length bits network portion example prefix contains addresses leaves bits network portion written 208 since prefix length inferred ip address alone routing protocols must carry prefixes routers sometimes prefixes simply described length pronounced slash length prefix corresponds binary mask 1s network portion written way called subnet mask anded ip address extract network portion example subnet mask 255 shows prefix subnet mask bits prefix length l bits l bits network host subnet mask 1 1 1 1 1 1 0 0 ip prefix subnet mask hierarchical addresses significant advantages disadvantages key advantage prefixes routers forward packets based network portion address long networks unique address block host portion matter routers hosts network sent direction packets reach network destined forwarded correct host makes routing tables much smaller would otherwise consider number hosts internet approaching one billion would large table every router keep however using hierarchy routers need keep routes around 000 prefixes 444 network layer using hierarchy lets internet routing scale two disadvantages first ip address host depends located network ethernet address used anywhere world every ip address belongs specific network routers able deliver packets destined address network designs mobile ip needed support hosts move networks want keep ip addresses second disadvantage hierarchy wasteful addresses unless carefully managed addresses assigned networks large blocks many addresses allocated use allocation would matter much plenty addresses go around however realized two decades ago tremendous growth internet rapidly depleting free address space ipv6 solution shortage widely deployed great pressure allocate ip addresses used efficiently subnets network numbers managed nonprofit corporation called icann internet corporation assigned names numbers avoid conflicts turn icann delegated parts address space various regional authorities dole ip addresses isps companies process company allocated block ip addresses however process start story ip address assignment ongoing companies grow said routing prefix requires hosts network network number property cause problems networks grow example consider university started example prefix use computer science dept computers ethernet year later electrical engineering dept wants get internet art dept soon follows suit ip addresses departments use getting blocks requires going outside university may expensive inconvenient moreover already allocated enough addresses 000 hosts might intended allow significant growth happens wasteful allocate blocks ip addresses university different organization required solution allow block addresses split several parts internal use multiple networks still acting like single network outside world called subnetting networks ethernet lans result dividing larger network called subnets mentioned chap aware new usage term conflicts older usage subnet mean set routers communication lines network shows subnets help example single split pieces split need even piece must sec network layer internet aligned bits used lower host portion case half block allocated computer science dept quarter allocated electrical engineering dept one eighth art dept remaining eighth unallocated different way see block divided look resulting prefixes written binary notation computer science electrical eng art xxxxxxx xxxxxx xxxxx xxxxxxxx xxxxxxxx xxxxxxxx vertical bar shows boundary subnet number host portion ee 208 cs 208 208 internet art 208 splitting ip prefix separate networks subnetting packet comes main router router know subnet give details prefixes come one way would router table 536 entries telling outgoing line use host campus would undermine main scaling benefit get using hierarchy instead routers simply need know subnet masks networks campus packet arrives router looks destination address packet checks subnet belongs router anding destination address mask subnet checking see result corresponding prefix example consider packet destined ip address 208 151 see computer science dept 255 take first bits 208 see match prefix address 208 match checking first bits electrical engineering dept get 208 anding subnet mask match prefix address packet forwarded onto interface leads electrical engineering network 446 network layer subnet divisions changed later necessary updating subnet masks routers inside university outside network subnetting visible allocating new subnet require contacting icann changing external databases cidr classless interdomain routing even blocks ip addresses allocated addresses used efficiently still problem remains routing table explosion routers organizations edge network university need entry subnets telling router line use get network routes destinations outside organization use simple default rule sending packets line toward isp connects organization rest internet destination addresses must somewhere routers isps backbones middle internet luxury must know way go get every network simple default work core routers said default free zone internet one really knows many networks connected internet large number probably least million make large table may sound large computer standards realize routers must perform lookup table forward every packet routers large isps may forward millions packets per second specialized hardware fast memory needed process packets rates generalpurpose computer addition routing algorithms require router exchange information addresses reach routers larger tables information needs communicated processed processing grows least linearly table size greater communication increases likelihood parts get lost least temporarily possibly leading routing instabilities routing table problem could solved going deeper hierarchy like telephone network example ip address contain country state province city network host field might work router would need know get country states provinces country cities state province networks city unfortunately solution would require considerably bits ip addresses would use addresses inefficiently liechtenstein would many bits addresses united states fortunately something reduce routing table sizes apply insight subnetting routers different locations know given ip address belonging prefixes different sizes however instead splitting address block subnets combine multiple small sec network layer internet prefixes single larger prefix process called route aggregation resulting larger prefix sometimes called supernet contrast subnets division blocks addresses aggregation ip addresses contained prefixes varying sizes ip address one router treats part block containing addresses may treated another router part larger contains addresses router corresponding prefix information design works subnetting called cidr classless interdomain routing pronounced cider drink recent version specified rfc fuller li name highlights contrast addresses encode hierarchy classes describe shortly make cidr easier understand let us consider example block ip addresses available starting 24 suppose cambridge university needs addresses assigned addresses 24 24 255 along mask 255 prefix next oxford university asks addresses since block addresses must lie byte boundary oxford given addresses starting 24 instead gets 24 24 255 along subnet mask 255 finally university edinburgh asks addresses assigned addresses 24 24 255 mask 255 assignments summarized university first address last address many prefix cambridge 24 24 255 24 edinburgh 24 24 255 24 available 24 24 255 24 oxford 24 24 255 24 set ip address assignments routers default free zone told ip addresses three networks routers close universities may need send different outgoing line prefixes need entry prefixes routing tables example router london let us look three universities point view distant router new york ip addresses three prefixes sent new york u general london routing process london notices combines three prefixes single aggregate entry prefix 24 passes new york router prefix contains 8k addresses covers three universities otherwise unallocated addresses using aggregation three prefixes reduced one reducing 448 network layer 24 cambridge new york london 24 aggregate prefix prefixes 24 oxford 24 edinburgh aggregation ip prefixes prefixes new york router must told routing table entries new york router aggregation turned automatic process depends prefixes located internet actions administrator assigning addresses networks aggregation heavily used throughout internet reduce size router tables around 000 prefixes twist prefixes allowed overlap rule packets sent direction specific route longest matching prefix fewest ip addresses longest matching prefix routing provides useful degree flexibility seen behavior router new york router still uses single aggregate prefix send traffic three universities london however previously available block addresses within prefix allocated network san francisco one possibility new york router keep four prefixes sending packets three london packets fourth san francisco instead longest matching prefix routing handle forwarding two prefixes shown one overall prefix used direct traffic entire block london one specific prefix also used direct portion larger prefix san francisco longest matching prefix rule ip addresses within san francisco network sent outgoing line san francisco ip addresses larger prefix sent london conceptually cidr works follows packet comes routing table scanned determine destination lies within prefix possible multiple entries different prefix lengths match case entry longest prefix used thus match mask mask entry used look outgoing line packet however process would tedious table really scanned entry entry sec network layer internet 24 san francisco new york london 24 24 24 24 24 longest matching prefix routing new york router instead complex algorithms devised speed address matching process ruiz sanchez et al commercial routers use custom vlsi chips algorithms embedded hardware classful special addressing help better appreciate cidr useful briefly relate design predated ip addresses divided five categories listed allocation come called classful addressing bits range host addresses class network 0 255 255 host b c multicast address 0 255 255 e reserved future use 0 255 255 network 0 255 255 host network host 0 255 255 ip address formats class b c formats allow networks million hosts 384 networks 536 hosts million networks e g lans hosts although special also supported multicast class format datagram directed multiple hosts addresses beginning reserved use future would valuable use given depletion ipv4 address space 450 network layer unfortunately many hosts accept addresses valid limits long hard teach old hosts new tricks hierarchical design unlike cidr sizes address blocks fixed billion addresses exist organizing address space classes wastes millions particular real villain class b network organizations class network million addresses big class c network addresses small class b network 536 right internet folklore situation known three bears problem goldilocks three bears southey reality though class b address far large organizations studies shown half class b networks fewer hosts class c network would done job doubt every organization asked class b address thought one day would outgrow 8bit host field retrospect might better class c networks use bits instead host number allowing hosts per network case organizations would probably settled class c network would half million versus 384 class b networks hard fault internet designers provided smaller class b addresses time decision made create three classes internet research network connecting major research universities u plus small number companies military sites networking research one perceived internet becoming massmarket communication system rivaling telephone network time someone doubt said u colleges universities even connect internet many universities countries join never going hit 000 since many universities whole world furthermore host number integral number bytes speeds packet processing done entirely software perhaps day people look back fault folks designed telephone number scheme say idiots include planet number phone number time seem necessary handle problems subnets introduced flexibly assign blocks addresses within organization later cidr added reduce size global routing table today bits indicate whether ip address belongs class b c network longer used though references classes literature still common see dropping classes made forwarding complicated consider simple old classful system packet arrived router copy ip address shifted right bits yield bit class number way branch sorted packets b c e classes eight cases class four cases class b two cases class c code class masked bit network sec network layer internet number right aligned bit word network number looked b c table usually indexing b networks hashing c networks entry found outgoing line could looked packet forwarded much simpler longest matching prefix operation longer use simple table lookup ip address may length prefix class addresses continue used internet multicast actually might accurate say starting used multicast since internet multicast widely deployed past also several addresses special meanings shown ip address 0 lowest address used hosts booted means network host ip addresses network number refer current network addresses allow machines refer network without knowing number know network mask know many 0s include address consisting 1s 255 255 highest address used mean hosts indicated network allows broadcasting local network typically lan addresses proper network number 1s host field allow machines send broadcast packets distant lans anywhere internet however many network administrators disable feature mostly security hazard finally addresses form xx yy zz reserved loopback testing packets sent address put onto wire processed locally treated incoming packets allows packets sent host without sender knowing number useful testing 0 0 0 0 0 0 0 0 host network host 1 1 1 1 1 1 1 1 network anything host broadcast local network broadcast distant network loopback special ip addresses nat network address translation ip addresses scarce isp might address giving 534 usable host numbers customers problem 452 network layer scarcity led techniques use ip addresses sparingly one approach dynamically assign ip address computer using network take ip address back host becomes inactive ip address assigned another computer becomes active way single address handle 534 active users strategy works well cases example dialup networking mobile computers may temporarily absent powered however work well business customers many pcs businesses expected continuously employee machines backed night servers may serve remote request moment notice businesses access line always provides connectivity rest internet increasingly situation also applies home users subscribing adsl internet cable since connection charge monthly flat rate charge many users two computers home often one family member want online time solution connect computers home network via lan put wireless router router connects isp isp point view family small business handful computers welcome jones inc techniques seen far computer must ip address day long isp many thousands customers particularly business customers families like small businesses demand ip addresses quickly exceed block available problem running ip addresses theoretical one might occur point distant future happening right right long term solution whole internet migrate ipv6 bit addresses transition slowly occurring years process complete get meantime quick fix needed quick fix widely used today came form nat network address translation described rfc summarize additional information see dutcher basic idea behind nat isp assign home business single ip address small number internet traffic within customer network every computer gets unique ip address used routing intramural traffic however packet exits customer network goes isp address translation unique internal ip address shared public ip address takes place translation makes use three ranges ip addresses declared private networks may use internally wish rule packets containing addresses may appear internet three reserved ranges 0 255 255 172 31 255 192 168 255 777 hosts 048 hosts 536 hosts sec network layer internet first range provides 777 addresses except 0s 1s usual usual choice even network large operation nat shown within customer premises every machine unique address form x z however packet leaves customer premises passes nat box converts internal ip source address 1 figure customer true ip address 60 12 example nat box often combined single device firewall provides security carefully controlling goes customer network comes study firewalls chap also possible integrate nat box router adsl modem packet translation ip 1 port customer router lan packet translation ip 60 12 port nat box firewall internet isp router boundary customer premises placement operation nat box far glossed one tiny crucial detail reply comes back e g web server naturally addressed 60 12 nat box know internal address replace herein lies problem nat spare field ip header field could used keep track real sender bit still unused principle new option could created hold true source address would require changing ip code machines entire internet handle new option promising alternative quick fix actually happens follows nat designers observed ip packets carry either tcp udp payloads study tcp udp chap see headers containing source port destination port discuss tcp ports exactly story holds udp ports ports bit integers indicate tcp connection begins ends ports provide field needed make nat work process wants establish tcp connection remote process attaches unused tcp port machine called source port tells tcp code send incoming packets belonging connection process also supplies destination port tell give 454 network layer packets remote side ports 1023 reserved well known services example port port used web servers remote clients locate outgoing tcp message contains source port destination port together ports serve identify processes using connection ends analogy may make use ports clearer imagine company single main telephone number people call main number reach operator asks extension want puts extension main number analogous customer ip address extensions ends analogous ports ports effectively extra bits addressing identify process gets incoming packet using source port field solve mapping problem whenever outgoing packet enters nat box x z source address replaced customer true ip address addition tcp source port field replaced index nat box 536 entry translation table table entry contains original ip address original source port finally ip tcp header checksums recomputed inserted packet necessary replace source port connections machines 1 2 may happen use port example source port alone enough identify sending process packet arrives nat box isp source port tcp header extracted used index nat box mapping table entry located internal ip address original tcp source port extracted inserted packet ip tcp checksums recomputed inserted packet packet passed customer router normal delivery using x z address although scheme sort solves problem networking purists ip community tendency regard abomination face theearth briefly summarized objections first nat violates architectural model ip states every ip address uniquely identifies single machine worldwide whole software structure internet built fact nat thousands machines may use address 1 second nat breaks end end connectivity model internet says host send packet host time since mapping nat box set outgoing packets incoming packets accepted outgoing ones practice means home user nat make tcp ip connections remote web server remote user make connections game server home network special configuration nat traversal techniques needed support kind situation third nat changes internet connectionless network peculiar kind connection oriented network problem nat box must maintain information e mapping connection passing sec network layer internet network maintain connection state property connection oriented networks connectionless ones nat box crashes mapping table lost tcp connections destroyed absence nat router crash restart long term effect tcp connections sending process times within seconds retransmits unacknowledged packets nat internet becomes vulnerable circuit switched network fourth nat violates fundamental rule protocol layering layer k may make assumptions layer k put payload field basic principle keep layers independent tcp later upgraded tcp different header layout e g bit ports nat fail whole idea layered protocols ensure changes one layer require changes layers nat destroys independence fifth processes internet required use tcp udp user machine decides use new transport protocol talk user machine b example multimedia application introduction nat box cause application fail nat box able locate tcp source port correctly sixth related problem applications use multiple tcp ip connections udp ports prescribed ways example ftp standard file transfer protocol inserts ip addresses body packet receiver extract use since nat knows nothing arrangements rewrite ip addresses otherwise account lack understanding means ftp applications h internet telephony protocol study chap fail presence nat unless special precautions taken often possible patch nat cases patch code nat box every time new application comes along good idea finally since tcp source port field bits 536 machines mapped onto ip address actually number slightly less first ports reserved special uses however multiple ip addresses available one handle 440 machines view problems nat given rfc despite issues nat widely used practice especially home small business networks expedient technique deal ip address shortage become wrapped firewalls privacy blocks unsolicited incoming packets default reason unlikely go away even ipv6 widely deployed ip version ip heavy use decades worked extremely well demonstrated exponential growth internet unfortunately ip become victim popularity close running addresses even 456 network layer cidr nat using addresses sparingly last ipv4 addresses expected assigned icann end looming disaster recognized almost two decades ago sparked great deal discussion controversy within internet community section describe problem several proposed solutions long term solution move larger addresses ipv6 ip version replacement design uses bit addresses shortage addresses likely time foreseeable future however ipv6 proved difficult deploy different network layer protocol really interwork ipv4 despite many similarities also companies users really sure want ipv6 case result ipv6 deployed used tiny fraction internet estimates despite internet standard since next several years interesting time remaining ipv4 addresses allocated people start auction ipv4 addresses ebay black market spring knows addition address problems issues loom background early years internet largely used universities high tech industries u government especially dept defense explosion interest internet starting mid 1990s began used different group people often different requirements one thing numerous people smart phones use keep contact home bases another impending convergence computer communication entertainment industries may long every telephone television set world internet node resulting billion machines used audio video demand circumstances became apparent ip evolve become flexible seeing problems horizon ietf started work new version ip one would never run addresses would solve variety problems flexible efficient well major goals support billions hosts even inefficient address allocation reduce size routing tables simplify protocol allow routers process packets faster provide better security authentication privacy pay attention type service particularly real time data aid multicasting allowing scopes specified make possible host roam without changing address allow protocol evolve future permit old new protocols coexist years sec network layer internet design ipv6 presented major opportunity improve features ipv4 fall short wanted develop protocol met requirements ietf issued call proposals discussion rfc twenty one responses initially received december seven serious proposals table ranged making minor patches ip throwing altogether replacing completely different protocol one proposal run tcp clnp network layer protocol designed osi bit addresses clnp would provided enough address space forever could give every molecule water oceans enough addresses roughly set small network choice would also unified two major network layer protocols however many people felt would admission something osi world actually done right statement considered politically incorrect internet circles clnp patterned closely ip two really different fact protocol ultimately chosen differs ip far clnp another strike clnp poor support service types something required transmit multimedia efficiently three better proposals published ieee network deering francis katz ford much discussion revision jockeying position modified combined version deering francis proposals called sipp simple internet protocol plus selected given designation ipv6 ipv6 meets ietf goals fairly well maintains good features ip discards deemphasizes bad ones adds new ones needed general ipv6 compatible ipv4 compatible auxiliary internet protocols including tcp udp icmp igmp ospf bgp dns small modifications required deal longer addresses main features ipv6 discussed information found rfcs first foremost ipv6 longer addresses ipv4 bits long solves problem ipv6 set solve providing effectively unlimited supply internet addresses say addresses shortly second major improvement ipv6 simplification header contains seven fields versus ipv4 change allows routers process packets faster thus improves throughput delay discuss header shortly third major improvement better support options change essential new header fields previously required optional used often addition way options represented different making simple routers skip options intended feature speeds packet processing time 458 network layer fourth area ipv6 represents big advance security ietf fill newspaper stories precocious year olds using personal computers break banks military bases internet strong feeling something done improve security authentication privacy key features new ip later retrofitted ipv4 however area security differences great finally attention paid quality service various halfhearted efforts improve qos made past growth multimedia internet sense urgency greater main ipv6 header ipv6 header shown version field always ipv6 ipv4 transition period ipv4 already taken decade routers able examine field tell kind packet aside making test wastes instructions critical path given data link header usually indicates network protocol demultiplexing routers may skip check example ethernet type field different values indicate ipv4 ipv6 payload discussions right make fast camps doubt lengthy vigorous bits version diff services payload length flow label next header hop limit source address bytes destination address bytes ipv6 fixed header required differentiated services field originally called traffic class used distinguish class service packets different real time delivery sec network layer internet requirements used differentiated service architecture quality service manner field name ipv4 packet also low order bits used signal explicit congestion indications way ipv4 flow label field provides way source destination mark groups packets requirements treated way network forming pseudoconnection example stream packets one process certain source host process specific destination host might stringent delay requirements thus need reserved bandwidth flow set advance given identifier packet nonzero flow label shows routers look internal tables see kind special treatment requires effect flows attempt ways flexibility datagram network guarantees virtual circuit network flow quality service purposes designated source address destination address flow number design means flows may active time given pair ip addresses also means even two flows coming different hosts flow label pass router router able tell apart using source destination addresses expected flow labels chosen randomly rather assigned sequentially starting routers expected hash payload length field tells many bytes follow byte header name changed ipv4 total length field meaning changed slightly header bytes longer counted part length used change means payload 535 bytes instead mere 515 bytes next header field lets cat bag reason header could simplified additional optional extension headers field tells currently six extension headers follow one header last ip header next header field tells transport protocol handler e g tcp udp pass packet hop limit field used keep packets living forever practice time live field ipv4 namely field decremented hop theory ipv4 time seconds router used way name changed reflect way actually used next come source address destination address fields deering original proposal sip used byte addresses review process many people felt byte addresses ipv6 would run addresses within decades whereas byte addresses would never run people argued bytes overkill whereas still others favored using byte addresses compatible osi datagram protocol still another faction wanted variable sized addresses much debate words 460 network layer unprintable academic textbook decided fixed length byte addresses best compromise new notation devised writing byte addresses written eight groups four hexadecimal digits colons groups like 0000 0000 4567 89ab cdef since many addresses many zeros inside three optimizations authorized first leading zeros within group omitted written second one groups zero bits replaced pair colons thus address becomes 4567 89ab cdef finally ipv4 addresses written pair colons old dotted decimal number example 31 46 perhaps unnecessary explicit lot 16byte addresses specifically approximately entire earth land water covered computers ipv6 would allow ip addresses per square meter students chemistry notice number larger avogadro number intention give every molecule surface earth ip address far practice address space used efficiently telephone number address space area code manhattan nearly full wyoming nearly empty rfc durand huitema calculated using allocation telephone numbers guide even pessimistic scenario still well ip addresses per square meter entire earth surface land water likely scenario trillions per square meter short seems unlikely run foreseeable future instructive compare ipv4 header ipv6 header see left ipv6 ihl field gone ipv6 header fixed length protocol field taken next header field tells follows last ip header e g udp tcp segment fields relating fragmentation removed ipv6 takes different approach fragmentation start ipv6 conformant hosts expected dynamically determine packet size use using path mtu discovery procedure described sec brief host sends ipv6 packet large instead fragmenting router unable forward drops packet sends error message back sec network layer internet sending host message tells host break future packets destination host send packets right size first place ultimately much efficient routers fragment fly also minimum size packet routers must able forward raised bytes allow bytes data many headers finally checksum field gone calculating greatly reduces performance reliable networks used combined fact data link layer transport layers normally checksums value yet another checksum deemed worth performance price extracted removing features resulted lean mean network layer protocol thus goal ipv6 fast yet flexible protocol plenty address space met design extension headers missing ipv4 fields occasionally still needed ipv6 introduces concept optional extension headers headers supplied provide extra information encoded efficient way six kinds extension headers defined present listed one optional one present must appear directly fixed header preferably order listed extension header description hop hop options miscellaneous information routers destination options additional information destination routing loose list routers visit fragmentation management datagram fragments authentication verification sender identity encrypted security payload information encrypted contents ipv6 extension headers headers fixed format others contain variable number variable length options item encoded type length value tuple type byte field telling option type values chosen first bits tell routers know process option choices skip option discard packet discard packet send back icmp packet discard packet send icmp packets multicast addresses prevent one bad multicast packet generating millions icmp reports length also byte field tells long value bytes value information required bytes 462 network layer hop hop header used information routers along path must examine far one option defined support datagrams exceeding kb format header shown used payload length field fixed header set next header jumbo payload length hop hop extension header large datagrams jumbograms extension headers one starts byte telling kind header comes next byte followed one telling long hop hop header bytes excluding first bytes mandatory extensions begin way next bytes indicate option defines datagram size code size byte number last bytes give size datagram sizes less 536 bytes permitted result first router discarding packet sending back icmp error message datagrams using header extension called jumbograms use jumbograms important supercomputer applications must transfer gigabytes data efficiently across internet destination options header intended fields need interpreted destination host initial version ipv6 options defined null options padding header multiple bytes initially used included make sure new routing host software handle case someone thinks destination option day routing header lists one routers must visited way destination similar ipv4 loose source routing addresses listed must visited order routers listed may visited format routing header shown next header header extension routing type length segments left type specific data extension header routing sec network layer internet first bytes routing extension header contain four byte integers next header header extension length fields described routing type field gives format rest header type says reserved bit word follows first word followed number ipv6 addresses types may invented future needed finally segments left field keeps track many addresses list yet visited decremented every time one visited hits packet guidance route follow usually point close destination best route obvious fragment header deals fragmentation similarly way ipv4 header holds datagram identifier fragment number bit telling whether fragments follow ipv6 unlike ipv4 source host fragment packet routers along way may change major philosophical break original ip keeping current practice ipv4 plus simplifies routers work makes routing go faster mentioned router confronted packet big discards packet sends icmp error packet back source information allows source host fragment packet smaller pieces using header try authentication header provides mechanism receiver packet sure sent encrypted security payload makes possible encrypt contents packet intended recipient read headers use cryptographic techniques describe chap accomplish missions controversies given open design process strongly held opinions many people involved come surprise many choices made ipv6 highly controversial say least summarize briefly gory details see rfcs already mentioned argument address length result compromise byte fixed length addresses another fight developed length hop limit field one camp felt strongly limiting maximum number hops implicit using bit field gross mistake paths hops common years much longer paths may common people argued using huge address size farsighted using tiny hop count shortsighted view greatest sin computer scientist commit provide bits somewhere response arguments could made increase every field leading bloated header also function hop limit field keep packets wandering around long time 535 hops far far long 464 network layer finally internet grows long distance links built making possible get country country half dozen hops takes hops get source destination respective international gateways something wrong national backbones bitters one another hot potato maximum packet size supercomputer community wanted packets excess kb supercomputer gets started transferring really means business want interrupted every kb argument large packets mb packet hits mbps t1 line packet tie line seconds producing noticeable delay interactive users sharing line compromise reached normal packets limited kb hop hop extension header used permit jumbograms third hot topic removing ipv4 checksum people likened move removing brakes car makes car lighter go faster unexpected event happens problem argument checksums application really cares data integrity transport layer checksum anyway another one ip addition data link layer checksum overkill furthermore experience showed computing ip checksum major expense ipv4 antichecksum camp one ipv6 checksum mobile hosts also point contention portable computer flies halfway around world continue operating ipv6 address use scheme home agents people wanted build explicit support mobile hosts ipv6 effort failed consensus could found specific proposal probably biggest battle security everyone agreed essential war put first argument putting network layer becomes standard service applications use without advance planning argument really secure applications generally want nothing less end end encryption source application encryption destination application undoes anything less user mercy potentially buggy network layer implementations control response argument applications refrain using ip security features job rejoinder people trust network right want pay price slow bulky ip implementations capability even disabled another aspect put security relates fact many countries stringent export laws concerning cryptography notably france iraq also restrict use domestically people secrets government result ip implementation used sec network layer internet cryptographic system strong enough much value could exported united states many countries customers worldwide maintain two sets software one domestic use one export something computer vendors vigorously oppose one point controversy one expects ipv4 internet turned sunday evening come back ipv6 internet monday morning instead isolated islands ipv6 converted initially communicating via tunnels showed sec ipv6 islands grow merge bigger islands eventually islands merge internet fully converted least plan deployment proved achilles heel ipv6 remains little used even though major operating systems fully support deployments new situations network operator example mobile phone operator needs large number ip addresses many strategies defined help ease transition among ways automatically configure tunnels carry ipv6 ipv4 internet ways hosts automatically find tunnel endpoints dual stack hosts ipv4 ipv6 implementation select protocol use depending destination packet strategies streamline substantial deployment seems inevitable ipv4 addresses exhausted information ipv6 see davies internet control protocols addition ip used data transfer internet several companion control protocols used network layer include icmp arp dhcp section look turn describing versions correspond ipv4 protocols common use icmp dhcp similar versions ipv6 equivalent arp called ndp neighbor discovery protocol ipv6 imcp internet control message protocol operation internet monitored closely routers something unexpected occurs packet processing router event reported sender icmp internet control message protocol icmp also used test internet dozen types icmp messages defined icmp message type carried encapsulated ip packet important ones listed destination unreachable message used router locate destination packet df bit delivered small packet network stands way 466 network layer message type description destination unreachable packet could delivered time exceeded time live field hit parameter problem invalid header field source quench choke packet redirect teach router geography echo echo reply check machine alive timestamp request reply echo timestamp router advertisement solicitation find nearby router principal icmp message types time exceeded message sent packet dropped ttl time live counter reached zero event symptom packets looping counter values set low one clever use error message traceroute utility developed van jacobson traceroute finds routers along path host destination ip address finds information without kind privileged network support method simply send sequence packets destination first ttl ttl counters packets reach zero successive routers along path routers obediently send time exceeded message back host messages host determine ip addresses routers along path well keep statistics timings parts path time exceeded message intended perhaps useful network debugging tool time parameter problem message indicates illegal value detected header field problem indicates bug sending host ip software possibly software router transited source quench message long ago used throttle hosts sending many packets host received message expected slow rarely used anymore congestion occurs packets tend add fuel fire unclear respond congestion control internet done largely taking action transport layer using packet losses congestion signal study detail chap redirect message used router notices packet seems routed incorrectly used router tell sending host update better route echo echo reply messages sent hosts see given destination reachable currently alive upon receiving echo message sec network layer internet destination expected send back echo reply message messages used ping utility checks host internet timestamp request timestamp reply messages similar except arrival time message departure time reply recorded reply facility used measure network performance router advertisement router solicitation messages used let hosts find nearby routers host needs learn ip address least one router able send packets local network addition messages others defined online list kept www iana org assignments icmp parameters arp address resolution protocol although every machine internet one ip addresses addresses sufficient sending packets data link layer nics network interface cards ethernet cards understand internet addresses case ethernet every nic ever manufactured comes equipped unique bit ethernet address manufacturers ethernet nics request block ethernet addresses ieee ensure two nics address avoid conflicts two nics ever appear lan nics send receive frames based bit ethernet addresses know nothing bit ip addresses question arises ip addresses get mapped onto data link layer addresses ethernet explain works let us use example small university two networks illustrated one network cs switched ethernet computer science dept prefix 32 lan ee also switched ethernet electrical engineering prefix 32 two lans connected ip router machine ethernet interface router unique ethernet address labeled e1 e6 unique ip address cs ee network let us start seeing user host sends packet user host cs network let us assume sender knows name intended receiver possibly something like eagle cs uni edu first step find ip address host lookup performed dns study chap moment assume dns returns ip address host 32 upper layer software host builds packet 32 destination address field gives ip software transmit ip software look address see destination cs network e network however still needs way find destination ethernet address send frame one solution configuration file somewhere system maps ip addresses onto ethernet addresses 468 network layer ip3 32 ip1 32 e5 ethernet switch e1 router host e3 32 host host 32 cs network 32 e2 host e4 ee network 32 e6 ip4 32 ip2 32 destination destination eth ip frame source ip source eth host cs net ip1 e1 ip2 e2 host cs net ip1 e1 ip4 e3 host ee net ip1 e4 ip4 e6 two switched ethernet lans joined router solution certainly possible organizations thousands machines keeping files date error prone time consuming job better solution host output broadcast packet onto ethernet asking owns ip address 32 broadcast arrive every machine cs ethernet one check ip address host alone respond ethernet address e2 way host learns ip address 32 host ethernet address e2 protocol used asking question getting reply called arp address resolution protocol almost every machine internet runs arp defined rfc advantage using arp configuration files simplicity system manager much except assign machine ip address decide subnet masks arp rest point ip software host builds ethernet frame addressed e2 puts ip packet addressed 32 payload field dumps onto ethernet ip ethernet addresses packet given ethernet nic host detects frame recognizes frame scoops causes interrupt ethernet driver extracts ip packet payload passes ip software sees correctly addressed processes various optimizations possible make arp work efficiently start machine run arp caches result case needs contact machine shortly next time find mapping cache thus eliminating need second broadcast many cases host sec network layer internet need send back reply forcing run arp determine sender ethernet address arp broadcast avoided host include ip ethernet mapping arp packet arp broadcast arrives host pair 32 e1 entered host arp cache fact machines ethernet enter mapping arp caches allow mappings change example host configured use new ip address keeps old ethernet address entries arp cache time minutes clever way help keep cached information current optimize performance every machine broadcast mapping configured broadcast generally done form arp looking ip address response side effect broadcast make update entry everyone arp cache known gratuitous arp response unexpectedly arrive two machines assigned ip address error must resolved network manager machines use network let us look time assume host wants send packet host 32 ee network host see destination ip address cs network knows send network traffic router also known default gateway convention default gateway lowest address network 31 send frame router host must still know ethernet address router interface cs network discovers sending arp broadcast 31 learns e3 sends frame lookup mechanisms used send packet one router next sequence routers internet path ethernet nic router gets frame gives packet ip software knows network masks packet sent onto ee network reach host router know ethernet address host use arp table lists source destination ethernet ip addresses present frames observed cs ee networks observe ethernet addresses change frame network ip addresses remain constant indicate endpoints across interconnected networks also possible send packet host host without host knowing host different network solution router answer arps cs network host give ethernet address e3 response possible host reply directly see arp request routers forward ethernet level broadcasts router receive frames sent 32 forward onto ee network solution called proxy arp used special cases host wants appear network even though actually resides another network common situation example mobile computer wants node pick packets home network 470 network layer dhcp dynamic host configuration protocol arp well internet protocols makes assumption hosts configured basic information ip addresses hosts get information possible manually configure computer tedious error prone better way called dhcp dynamic host configuration protocol dhcp every network must dhcp server responsible configuration computer started built ethernet link layer address embedded nic ip address much like arp computer broadcasts request ip address network using dhcp discover packet packet must reach dhcp server server directly attached network router configured receive dhcp broadcasts relay dhcp server wherever located server receives request allocates free ip address sends host dhcp offer packet may relayed via router able work even hosts ip addresses server identifies host using ethernet address carried dhcp discover packet issue arises automatic assignment ip addresses pool long ip address allocated host leaves network return ip address dhcp server address permanently lost period time many addresses may lost prevent happening ip address assignment may fixed period time technique called leasing lease expires host must ask dhcp renewal fails make request request denied host may longer use ip address given earlier dhcp described rfcs widely used internet configure sorts parameters addition providing hosts ip addresses well business home networks dhcp used isps set parameters devices internet access link customers need phone isps get information common examples information configured include network mask ip address default gateway ip addresses dns time servers dhcp largely replaced earlier protocols called rarp bootp limited functionality label switching mpls far tour network layer internet focused exclusively packets datagrams forwarded ip routers also another kind technology starting widely used especially isps order move internet traffic across networks technology sec network layer internet called mpls multiprotocol label switching perilously close circuit switching despite fact many people internet community intense dislike connection oriented networking idea seems keep coming back yogi berra put like deja vu however essential differences way internet handles route construction way connection oriented networks technique certainly traditional circuit switching mpls adds label front packet forwarding based label rather destination address making label index internal table makes finding correct output line matter table lookup using technique forwarding done quickly advantage original motivation behind mpls began proprietary technology known various names including tag switching eventually ietf began standardize idea described rfc many rfcs main benefits time come routing flexible forwarding suited quality service well fast first question ask label go since ip packets designed virtual circuits field available virtual circuit numbers within ip header reason new mpls header added front ip header router router line using ppp framing protocol frame format including ppp mpls ip tcp headers shown headers ppp bits mpls ip tcp user data label qos ttl crc transmitting tcp segment using ip mpls ppp generic mpls header bytes long four fields important label field holds index qos field indicates class service field relates stacking multiple labels discussed ttl field indicates many times packet may forwarded decremented router hits packet discarded feature prevents infinite looping case routing instability mpls falls ip network layer protocol ppp link layer protocol really layer protocol depends ip network 472 network layer layer addresses set label paths really layer protocol either forwards packets across multiple hops single link reason mpls sometimes described layer protocol illustration real protocols always fit neatly ideal layered protocol model brighter side mpls headers part network layer packet data link layer frame mpls large extent independent layers among things property means possible build mpls switches forward ip packets non ip packets depending shows feature multiprotocol name mpls came mpls also carry ip packets non ip networks mpls enhanced packet arrives lsr label switched router label used index table determine outgoing line use also new label use label swapping used virtual circuit networks labels local significance two different routers feed unrelated packets label another router transmission outgoing line distinguishable end labels remapped every hop saw mechanism action mpls uses technique aside people distinguish forwarding switching forwarding process finding best match destination address table decide send packets example longest matching prefix algorithm used ip forwarding contrast switching uses label taken packet index forwarding table simpler faster definitions far universal however since hosts routers understand mpls also ask labels attached packets happens ip packet reaches edge mpls network ler label edge router inspects destination ip address fields see mpls path packet follow puts right label front packet within mpls network label used forward packet edge mpls network label served purpose removed revealing ip packet next network process shown one difference traditional virtual circuits level aggregation certainly possible flow set labels mpls network however common routers group multiple flows end particular router lan use single label flows grouped together single label said belong fec forwarding equivalence class class covers packets going also service class differentiated services sense packets treated way forwarding purposes traditional virtual circuit routing possible group several distinct paths different endpoints onto virtual circuit identifier would way distinguish final destination mpls sec ip network layer internet add label label switching label label remove label ip label ip next network label edge router label switch router forwarding ip packet mpls network packets still contain final destination address addition label end labeled route label header removed forwarding continue usual way using network layer destination address actually mpls goes even operate multiple levels adding one label front packet example suppose many packets already different labels want treat packets differently somewhere network follow common path destination instead setting many label switching paths one different labels set single path already labeled packets reach start path another label added front called stack labels outermost label guides packets along path removed end path labels revealed used forward packet bit allows router removing label know additional labels left set bottom label labels final question ask label forwarding tables set packets follow one area major difference mpls conventional virtual circuit designs traditional virtual circuit networks user wants establish connection setup packet launched network create path make forwarding table entries mpls involve users setup phase requiring users anything send datagram would break much existing internet software instead forwarding information set protocols combination routing protocols connection setup protocols control protocols cleanly separated label forwarding allows multiple different control protocols used one variants works like router booted checks see routes final destination e g prefixes belong interfaces creates one fecs allocates label one passes labels neighbors turn enter labels forwarding tables send new labels neighbors routers acquired path resources also reserved 474 network layer path constructed guarantee appropriate quality service variants set different paths traffic engineering paths take unused capacity account create paths demand support service offerings quality service although basic ideas behind mpls straightforward details complicated many variations use cases actively developed information see davie farrel davie rekhter ospf interior gateway routing protocol finished study packets forwarded internet time move next topic routing internet mentioned earlier internet made large number independent networks ases autonomous systems operated different organizations usually company university isp inside network organization use algorithm internal routing intradomain routing commonly known nevertheless handful standard protocols popular section study problem intradomain routing look ospf protocol widely used practice intradomain routing protocol also called interior gateway protocol next section study problem routing independently operated networks interdomain routing case networks must use interdomain routing protocol exterior gateway protocol protocol used internet bgp border gateway protocol early intradomain routing protocols used distance vector design based distributed bellman ford algorithm inherited arpanet rip routing information protocol main example used day works well small systems less well networks get larger also suffers count infinity problem generally slow convergence arpanet switched link state protocol may problems ietf began work link state protocol intradomain routing protocol called ospf open shortest path first became standard drew protocol called intermediate system intermediate system became iso standard shared heritage two protocols much alike different complete story see rfc dominant intradomain routing protocols router vendors support ospf widely used company networks widely used isp networks two give sketch ospf works given long experience routing protocols group designing ospf long list requirements met first algorithm published open literature hence ospf proprietary sec network layer internet solution owned one company would second new protocol support variety distance metrics including physical distance delay third dynamic algorithm one adapted changes topology automatically quickly fourth new ospf support routing based type service new protocol able route real time traffic one way traffic different way time ip type service field existing routing protocol used field included ospf still nobody used eventually removed perhaps requirement ahead time preceded ietf work differentiated services rejuvenated classes service fifth related ospf load balancing splitting load multiple lines previous protocols sent packets single best route even two routes equally good route used many cases splitting load multiple routes gives better performance sixth support hierarchical systems needed networks grown large router could expected know entire topology ospf designed router would seventh modicum security required prevent fun loving students spoofing routers sending false routing information finally provision needed dealing routers connected internet via tunnel previous protocols handle well ospf supports point point links e g sonet broadcast networks e g lans actually able support networks multiple routers communicate directly others called multiaccess networks even broadcast capability earlier protocols handle case well example autonomous system network given hosts omitted generally play role ospf routers networks may contain hosts routers connected routers point point links networks reach hosts networks however routers r3 r4 r5 connected broadcast lan switched ethernet ospf operates abstracting collection actual networks routers links directed graph arc assigned weight distance delay etc point point connection two routers represented pair arcs one direction weights may different broadcast network represented node network plus node router arcs network node routers weight important nonetheless without path network networks hosts arc reaching one returning structure gives routes hosts 476 network layer r1 lan r3 r5 lan lan lan r2 r4 lan r1 r3 lan r5 lan lan r4 r2 b autonomous system b graph representation b shows graph representation network ospf fundamentally represent actual network graph like use link state method every router compute shortest path nodes multiple paths may found equally short case ospf remembers set shortest paths packet forwarding traffic split across helps balance load called ecmp equal cost multipath many ases internet large nontrivial manage work scale ospf allows divided numbered areas area network set contiguous networks areas overlap need exhaustive routers may belong area routers lie wholly within area called internal routers area generalization individual network outside area destinations visible topology characteristic helps routing scale every backbone area called area routers area called backbone routers areas connected backbone possibly tunnels possible go area area via backbone tunnel represented graph another arc cost areas topology backbone visible outside backbone router connected two areas called area border router must also part backbone job area border router summarize destinations one area inject summary sec network layer internet areas connected summary includes cost information details topology within area passing cost information allows hosts areas find best area border router use enter area passing topology information reduces traffic simplifies shortest path computations routers areas however one border router area even summary need passed routes destinations area always start instruction go border router kind area called stub area last kind router boundary router injects routes external destinations ases area external routes appear destinations reached via boundary router cost external route injected one boundary routers relationship ases areas various kinds routers shown one router may play multiple roles example border router also backbone router area border router backbone router boundary router internal router one autonomous system area stub area backbone area relation ases backbones areas ospf normal operation router within area link state database runs shortest path algorithm main job calculate shortest path every router network entire area border router needs databases areas connected must run shortest path algorithm area separately source destination area best intra area route lies wholly within area chosen source destination different areas inter area route must go source backbone across backbone destination area destination algorithm forces star configuration ospf backbone hub areas spokes route lowest cost chosen routers different parts network may use different area border routers enter backbone destination area packets routed source destination encapsulated tunneled unless going area whose 478 network layer connection backbone tunnel also routes external destinations may include external cost boundary router external path desired cost internal router boots sends hello messages point point lines multicasts lans group consisting routers responses router learns neighbors routers lan neighbors ospf works exchanging information adjacent routers neighboring routers particular inefficient every router lan talk every router lan avoid situation one router elected designated router said adjacent routers lan exchanges information effect acting single node represents lan neighboring routers adjacent exchange information backup designated router always kept date ease transition primary designated router crash need replaced immediately normal operation router periodically floods link state update messages adjacent routers messages gives state provide costs used topological database flooding messages acknowledged make reliable message sequence number router see whether incoming link state update older newer currently routers also send messages link goes cost changes database description messages give sequence numbers link state entries currently held sender comparing values sender receiver determine recent values messages used link brought either partner request link state information one using link state request messages result algorithm pair adjacent routers checks see recent data new information spread throughout area way messages sent directly ip packets five kinds messages summarized message type hello description used discover neighbors link state update provides sender costs neighbors link state ack acknowledges link state update database description announces updates sender link state request requests information partner five types ospf messages sec network layer internet finally put pieces together using flooding router informs routers area links routers networks cost links information allows router construct graph area compute shortest paths backbone area work addition backbone routers accept information area border routers order compute best route backbone router every router information propagated back area border routers advertise within areas using information internal routers select best route destination outside area including best exit router backbone bgp exterior gateway routing protocol within single ospf protocols commonly used ases different protocol called bgp border gateway protocol used different protocol needed goals intradomain protocol interdomain protocol intradomain protocol move packets efficiently possible source destination worry politics contrast interdomain routing protocols worry politics great deal metz example corporate might want ability send packets internet site receive packets internet site however might unwilling carry transit packets originating foreign ending different foreign even shortest path two foreign ases problem hand might willing carry transit traffic neighbors even specific ases paid service telephone companies example might happy act carriers customers others exterior gateway protocols general bgp particular designed allow many kinds routing policies enforced interas traffic typical policies involve political security economic considerations examples possible routing constraints carry commercial traffic educational network never send traffic pentagon route iraq use teliasonera instead verizon cheaper use australia performance poor traffic starting ending apple transit google might imagine list routing policies highly individual often proprietary contain sensitive business information 480 network layer however describe patterns capture reasoning company often used starting point routing policy implemented deciding traffic flow links ases one common policy customer isp pays another provider isp deliver packets destination internet receive packets sent destination customer isp said buy transit service provider isp like customer home buying internet access service isp make work provider advertise routes destinations internet customer link connects way customer route use send packets anywhere conversely customer advertise routes destinations network provider let provider send traffic customer addresses customer want handle traffic intended destinations see example transit service four ases connected connection often made link ixps internet exchange points facilities many isps link purpose connecting isps as2 as3 as4 customers as1 buy transit service thus source sends destination c packets travel as2 as1 finally as4 routing advertisements travel opposite direction packets as4 advertises c destination transit provider as1 let sources reach c via as1 later as1 advertises route c customers including as2 let customers know send traffic c via as1 as1 path bgp routing advertisements dash cu tr tr as4 as3 pe pe cu tr cu as2 path ip packets solid routing policy tr transit cu customer pe peer b c routing policies four autonomous systems ases buy transit service as1 provides connectivity interact host internet however pay privilege suppose as2 as3 exchange lot traffic given networks connected already want sec network layer internet use different policy send traffic directly free reduce amount traffic must as1 deliver behalf hopefully reduce bills policy called peering implement peering two ases send routing advertisements addresses reside networks makes possible as2 send as3 packets destined b vice versa however note peering transitive as3 as4 also peer peering allows traffic c destined b sent directly as4 happens c sends packet as3 advertising route b as4 advertising route consequence traffic pass as4 as3 as2 even though physical path exists restriction exactly as3 wants peers as4 exchange traffic want carry traffic as4 parts internet since paid instead as4 gets transit service as1 thus as1 carry packet c know transit peering also see b c transit arrangements example must buy internet access as2 might single home computer company network many lans however need run bgp stub network connected rest internet one link place send packets destined outside network link as2 nowhere else go path arranged simply setting default route reason shown b c ases participate interdomain routing hand company networks connected multiple isps technique used improve reliability since path one isp fails company use path via isp technique called multihoming case company network likely run interdomain routing protocol e g bgp tell ases addresses reached via isp links many variations transit peering policies possible already illustrate business relationships control route advertisements go implement different kinds policies consider detail routers running bgp advertise routes select paths forward packets bgp form distance vector protocol quite unlike intradomain distance vector protocols rip already seen policy instead minimum distance used pick routes use another large difference instead maintaining cost route destination bgp router keeps track path used approach called path vector protocol path consists next hop router may side isp adjacent sequence ases path route followed given reverse order finally pairs bgp routers communicate 482 network layer establishing tcp connections operating way provides reliable communication also hides details network passed example bgp routes advertised shown three ases middle one providing transit left right isps route advertisement prefix c starts as3 propagated across link r2c top figure path simply as3 next hop router r3a bottom path different next hop came across different link advertisement continues propagate crosses boundary as1 router r1a top figure path as2 as3 next hop r2a path next hop prefix c as2 as3 r1a c as2 as3 r2a c as3 r3a c r1a c as2 as3 r1b r2c r2a c as2 as3 r2b r3a c as3 r3b path packets b r1b as1 r2b r2d as2 r3b as3 propagation bgp route advertisements carrying complete path route makes easy receiving router detect break routing loops rule router sends route outside prepends number route list reverse order router receives route checks see number already path loop detected advertisement discarded however somewhat ironically realized late 1990s despite precaution bgp suffers version count infinity problem labovitz et al long lived loops routes sometimes slow converge transient loops giving list ases coarse way specify path might small company international backbone network way telling route bgp even try different ases may use different intradomain protocols whose costs compared even could compared may want reveal internal metrics one ways interdomain routing protocols differ intradomain protocols sec network layer internet far seen route advertisement sent across link two isps still need way propagate bgp routes one side isp sent next isp task could handled intradomain protocol bgp good scaling large networks variant bgp often used called ibgp internal bgp distinguish regular use bgp ebgp external bgp rule propagating routes inside isp every router boundary isp learns routes seen boundary routers consistency one boundary router isp learns prefix ip 208 routers learn prefix prefix reachable parts isp matter packets enter isp ases shown propagation avoid clutter example router r2b know reach c via either router r2c top router r2d bottom next hop updated route crosses within isp routers far side isp know router use exit isp side seen leftmost routes next hop points router isp router next isp describe key missing piece bgp routers choose route use destination bgp router may learn route given destination router connected next isp boundary routers heard different routes routers connected isps router must decide route set routes best one use ultimately answer isp write policy pick preferred route however explanation general satisfying least describe common strategies first strategy routes via peered networks chosen preference routes via transit providers former free latter cost money similar strategy customer routes given highest preference good business send traffic directly paying customers different kind strategy default rule shorter paths better debatable given could network size path three small ases could actually shorter path one big however shorter tends better average rule common tiebreaker final strategy prefer route lowest cost within isp strategy implemented packets sent c exit as1 top router r1a packets sent b exit via bottom router r1b reason b taking lowest cost path quickest route as1 located different parts isp quickest exit one different thing happens packets pass as2 last leg as3 carry packet b network 484 network layer strategy known early exit hot potato routing curious side effect tending make routes asymmetric example consider path taken c sends packet back b packet exit as3 quickly top router avoid wasting resources similarly stay top as2 passes as1 quickly possible packet longer journey as1 mirror image path taken b c discussion make clear bgp router chooses best route known possibilities case might naively expected bgp chooses path follow level ospf chooses paths within ases bgp interior gateway protocol integrated much deeply means example bgp find best exit point one isp next point vary across isp case hot potato policy also means bgp routers different parts one may choose different paths reach destination care must exercised isp configure bgp routers make compatible choices given freedom done practice amazingly scratched surface bgp information see bgp version specification rfc related rfcs however realize much complexity lies policies described specification bgp protocol internet multicasting normal ip communication one sender one receiver however applications useful process able send large number receivers simultaneously examples streaming live sports event many viewers delivering program updates pool replicated servers handling digital conference e multiparty telephone calls ip supports one many communication multicasting using class ip addresses class address identifies group hosts twenty eight bits available identifying groups million groups exist time process sends packet class address best effort attempt made deliver members group addressed guarantees given members may get packet range ip addresses 0 reserved multicast local network case routing protocol needed packets multicast simply broadcasting lan multicast address hosts lan receive broadcasts hosts members group process packet routers forward packet lan examples local multicast addresses 1 systems lan 2 routers lan 5 ospf routers lan 251 dns servers lan sec network layer internet multicast addresses may members different networks case routing protocol needed first multicast routers need know hosts members group process asks host join specific group also ask host leave group host keeps track groups processes currently belong last process host leaves group host longer member group minute multicast router sends query packet hosts lan using local multicast address 1 course asking report back groups currently belong multicast routers may may colocated standard routers host sends back responses class addresses interested query response packets use protocol called igmp internet group management protocol described rfc several multicast routing protocols may used build multicast spanning trees give paths senders members group algorithms used ones described sec within main protocol used pim protocol independent multicast pim comes several flavors dense mode pim pruned reverse path forwarding tree created suited situations members everywhere network distributing files many servers within data center network sparse mode pim spanning trees built similar core based trees suited situations content provider multicasting tv subscribers ip network variant design called source specific multicast pim optimized case one sender group finally multicast extensions bgp tunnels need used create multicast routes group members one mobile ip many users internet mobile computers want stay connected away home even road unfortunately ip addressing system makes working far home easier said done describe shortly people began demanding ability anyway ietf set working group find solution working group quickly formulated number goals considered desirable solution major ones mobile host must able use home ip address anywhere software changes fixed hosts permitted changes router software tables permitted packets mobile hosts make detours way overhead incurred mobile host home 486 network layer solution chosen one described sec brief every site wants allow users roam create helper site called home agent mobile host shows foreign site obtains new ip address called care address foreign site mobile tells home agent giving care address packet mobile arrives home site mobile elsewhere home agent grabs packet tunnels mobile current care address mobile send reply packets directly whoever communicating still using home address source address solution meets requirements stated except packets mobile hosts make detours covered network layer internet go solution detail need mobility support first place comes ip addressing scheme every ip address contains network number host number example consider machine ip address 80 20 80 gives network number 20 host number routers world routing tables telling link use get network 80 whenever packet comes destination ip address form 80 xxx yyy goes line sudden machine address carted distant site packets continue routed home lan router stage two options unattractive first could create route specific prefix distant site advertises route 80 20 packets sent destination start arriving right place option depends longest matching prefix algorithm used routers however added route ip prefix single ip address isps world learn prefix everyone changes global ip routes way move computer router would millions table entries astronomical cost internet option workable second option change ip address mobile true packets sent home ip address longer delivered relevant people programs databases informed change mobile still use internet new location browse web run applications option handles mobility higher layer typically happens user takes laptop coffee store uses internet via local wireless network disadvantage breaks applications keep connectivity mobile moves around aside mobility also handled lower layer link layer happens using laptop single 11 wireless network ip address mobile change network path remains wireless link providing mobility however degree mobility limited laptop moves far connect internet via another network different ip address sec network layer internet mobile ip solution ipv4 given rfc works existing internet routing allows hosts stay connected ip addresses move work mobile must able discover moved accomplished icmp router advertisement solicitation messages mobiles listen periodic router advertisements send solicitation discover nearest router router usual address router mobile home must foreign network router changed since last time mobile moved another foreign network mechanism lets mobile hosts find home agents get care ip address foreign network mobile simply use dhcp alternatively ipv4 addresses short supply mobile send receive packets via foreign agent already ip address network mobile host finds foreign agent using icmp mechanism used find home agent mobile obtains ip address finds foreign agent able use network send message home agent informing home agent current location home agent needs way intercept packets sent mobile mobile home arp provides convenient mechanism send packet ethernet ip host router needs know ethernet address host usual mechanism router send arp query ask example ethernet address 80 20 mobile home answers arp queries ip address ethernet address mobile away home agent responds query giving ethernet address router sends packets 80 20 home agent recall called proxy arp quickly update arp mappings back forth mobile leaves home arrives back home another arp technique called gratuitous arp used basically mobile home agent send arp query mobile ip address supplies right answer router notices updates mapping tunneling send packet home agent mobile host care address done encapsulating packet another ip header destined care address encapsulated packet arrives care address outer ip header removed reveal packet many internet protocols devil details often details compatibility protocols deployed two complications first nat boxes depend peeking past ip header look tcp udp header original form tunneling mobile ip use headers work nat boxes solution change encapsulation include udp header second complication isps check source ip addresses packets see match routing protocol believes source located technique called ingress filtering security 488 network layer measure intended discard traffic seemingly incorrect addresses may malicious however packets sent mobile internet hosts foreign network source ip address place discarded get around problem mobile use care address source tunnel packets back home agent sent internet appears right location cost route roundabout another issue discussed security home agent gets message asking please forward roberta packets ip address better comply unless convinced roberta source request somebody trying impersonate cryptographic authentication protocols used purpose study protocols chap mobility protocols ipv6 build ipv4 foundation scheme suffers triangle routing problem packets sent mobile take dogleg distant home agent ipv6 route optimization used follow direct path mobile ip addresses initial packets followed long route mobile ipv6 defined rfc another kind mobility also defined internet airplanes built wireless networking passengers use connect laptops internet plane router connects rest internet via wireless link expect wired link flying router means whole network mobile network mobility designs support situation without laptops realizing plane mobile far concerned another network course laptops may using mobile ip keep home addresses plane two levels mobility network mobility defined ipv6 rfc summary network layer provides services transport layer based either datagrams virtual circuits cases main job routing packets source destination datagram networks routing decision made every packet virtual circuit networks made virtual circuit set many routing algorithms used computer networks flooding simple algorithm send packet along paths algorithms find shortest path adapt changes network topology main algorithms distance vector routing link state routing actual networks use one important routing topics use hierarchy large networks routing mobile hosts broadcast multicast anycast routing sec summary networks easily become congested leading increased delay lost packets network designers attempt avoid congestion designing network enough capacity choosing uncongested routes refusing accept traffic signaling sources slow shedding load next step beyond dealing congestion actually try achieve promised quality service applications care throughput whereas others care delay jitter methods used provide different qualities service include combination traffic shaping reserving resources routers admission control approaches designed good quality service include ietf integrated services including rsvp differentiated services networks differ various ways multiple networks interconnected problems occur different networks different maximum packet sizes fragmentation may needed different networks may run different routing protocols internally need run common protocol externally sometimes problems finessed tunneling packet hostile network source destination networks different approach fails internet rich variety protocols related network layer include datagram protocol ip associated control protocols icmp arp dhcp connection oriented protocol called mpls carries ip packets across networks one main routing protocols used within networks ospf routing protocol used across networks bgp internet rapidly running ip addresses new version ip ipv6 developed ever slowly deployed problems give two example computer applications connection oriented service appropriate give two examples connectionless service best datagram networks route packet separate unit independent others virtual circuit networks since data packet follows predetermined route observation mean virtual circuit networks need capability route isolated packets arbitrary source arbitrary destination explain answer give three examples protocol parameters might negotiated connection set assuming routers hosts working properly software free errors chance however small packet delivered wrong destination 490 network layer give simple heuristic finding two paths network given source given destination survive loss communication line assuming two paths exist routers considered reliable enough necessary worry possibility router crashes consider network distance vector routing used following vectors come router c b e cost links c b e respectively c new routing table give outgoing line use cost costs recorded bit numbers router network distance vectors exchanged twice second much bandwidth per full duplex line chewed distributed routing algorithm assume router three lines routers boolean two sets acf bits every row accident hold networks circumstances hierarchical routing routers region cluster sizes chosen minimize size routing table three layer hierarchy good starting place hypothesis solution k clusters k regions k routers close optimal means k cube root around use trial error check combinations three parameters general vicinity text stated mobile host home packets sent home lan intercepted home agent lan ip network lan home agent accomplish interception looking network many packets generated broadcast b using reverse path forwarding b sink tree consider network imagine one new line added f g sink tree b remains unchanged changes occur c compute multicast spanning tree router c following network group members routers b c e f k c b f e k g j h l chap problems suppose node b rebooted routing information tables suddenly needs route h sends broadcasts ttl set many rounds take find route possible congestion control mechanism network using virtual circuits internally router could refrain acknowledging received packet knows last transmission along virtual circuit received successfully free buffer simplicity assume routers use stop wait protocol virtual circuit one buffer dedicated direction traffic takes sec transmit packet data acknowledgement n routers path rate packets delivered destination host assume transmission errors rare host router connection infinitely fast datagram network allows routers drop packets whenever need probability router discarding packet p consider case source host connected source router connected destination router destination host either routers discards packet source host eventually times tries host router router router lines counted hops mean number hops packet makes per transmission b transmissions packet makes c hops required per received packet describe two major differences ecn method red method congestion avoidance token bucket scheme used traffic shaping new token put bucket every sec token good one short packet contains bytes data maximum sustainable data rate computer mbps network regulated token bucket token bucket filled rate mbps initially filled capacity megabits long computer transmit full mbps network uses rsvp multicast trees hosts shown suppose host requests channel bandwidth mb sec flow host another channel bandwidth mb sec flow host time host requests channel bandwidth mb sec flow host host requests channel bandwidth mb sec flow host much total bandwidth reserved requests routers b c e h j k l router process million packets sec load offered million packets sec average route source destination contains routers much time spent queued serviced router consider user differentiated services expedited forwarding guarantee expedited packets experience shorter delay regular packets 492 network layer suppose host connected router r r connected another router r r connected host b suppose tcp message contains bytes data bytes tcp header passed ip code host delivery b show total length identification df mf fragment offset fields ip header packet transmitted three links assume link r1 support maximum frame size bytes including byte frame header link r1 r2 support maximum frame size bytes including byte frame header link r2 b support maximum frame size bytes including byte frame header router blasting ip packets whose total length data plus header bytes assuming packets live sec maximum line speed router operate without danger cycling ip datagram id number space ip datagram using strict source routing option fragmented think option copied fragment sufficient put first fragment explain answer suppose instead using bits network part class b address originally bits used many class b networks would convert ip address whose hexadecimal representation c22f1582 dotted decimal notation network internet subnet mask 255 maximum number hosts handle ip addresses tried specific networks ethernet addresses think good reason large number consecutive ip addresses available starting 16 suppose four organizations b c request addresses respectively order give first ip address assigned last ip address assigned mask w x z notation router received following new ip addresses 0 0 0 0 use outgoing line aggregated set ip addresses 18 18 255 aggregated 18 however gap unassigned addresses 18 18 255 suddenly assigned host using different outgoing line necessary split aggregate address constituent blocks add new block table see reaggregation possible done instead router following cidr entries routing table address mask 46 135 60 22 53 default next hop interface interface router router chap problems following ip addresses router packet address arrives 46 10 b 46 14 c 46 53 e 53 many companies policy two routers connecting company internet provide redundancy case one goes policy still possible nat explain answer explained arp protocol friend done says got arp provides service network layer part data link layer say describe way reassemble ip fragments destination ip datagram reassembly algorithms timer avoid lost fragment tie reassembly buffers forever suppose datagram fragmented four fragments first three fragments arrive last one delayed eventually timer goes three fragments receiver memory discarded little later last fragment stumbles done ip checksum covers header data suppose design chosen person lives boston travels minneapolis taking portable computer surprise lan destination minneapolis wireless ip lan plug still necessary go entire business home agents foreign agents make email traffic arrive correctly ipv6 uses byte addresses block million addresses allocated every picosecond long addresses last protocol field used ipv4 header present fixed ipv6 header ipv6 protocol introduced arp protocol changed changes conceptual technical write program simulate routing using flooding packet contain counter decremented hop counter gets zero packet discarded time discrete line handling one packet per time interval make three versions program lines flooded lines except input line flooded statically chosen best k lines flooded compare flooding deterministic routing k terms delay bandwidth used write program simulates computer network using discrete time first packet router queue makes one hop per time interval router finite number buffers packet arrives room discarded 494 network layer retransmitted instead end end protocol complete timeouts acknowledgement packets eventually regenerates packet source router plot throughput network function end end timeout interval parameterized error rate write function forwarding ip router procedure one parameter ip address also access global table consisting array triples triple contains three integers ip address subnet mask outline line use function looks ip address table using cidr returns line use value use traceroute unix tracert windows programs trace route computer various universities continents make list transoceanic links discovered sites try www berkeley edu california www mit edu massachusetts www vu nl amsterdam www ucl ac uk london www usyd edu au sydney www u tokyo ac jp tokyo www uct ac za cape town 6 transport layer together network layer transport layer heart protocol hierarchy network layer provides end end packet delivery using datagrams virtual circuits transport layer builds network layer provide data transport process source machine process destination machine desired level reliability independent physical networks currently use provides abstractions applications need use network without transport layer whole concept layered protocols would make little sense chapter study transport layer detail including services choice api design tackle issues reliability connections congestion control protocols tcp udp performance transport service following sections provide introduction transport service look kind service provided application layer make issue transport service concrete examine two sets transport layer primitives first comes simple hypothetical one show basic ideas comes interface commonly used internet 496 transport layer services provided upper layers ultimate goal transport layer provide efficient reliable cost effective data transmission service users normally processes application layer achieve transport layer makes use services provided network layer software hardware within transport layer work called transport entity transport entity located operating system kernel library package bound network applications separate user process even network interface card first two options common internet logical relationship network transport application layers illustrated host host application session layer transport address transport entity network address network layer application session layer application transport interface segment transport protocol transport network interface transport entity network layer network transport application layers two types network service connection oriented connectionless also two types transport service connection oriented transport service similar connection oriented network service many ways cases connections three phases establishment data transfer release addressing flow control also similar layers furthermore connectionless transport service also similar connectionless network service however note difficult provide connectionless transport service top connection oriented network service since inefficient set connection send single packet tear immediately afterwards obvious question transport layer service similar network layer service two distinct layers one layer sec transport service adequate answer subtle crucial transport code runs entirely users machines network layer mostly runs routers operated carrier least wide area network happens network layer offers inadequate service frequently loses packets happens routers crash time time problems occur users real control network layer solve problem poor service using better routers putting error handling data link layer routers possibility put top network layer another layer improves quality service connectionless network packets lost mangled transport entity detect problem compensate using retransmissions connection oriented network transport entity informed halfway long transmission network connection abruptly terminated indication happened data currently transit set new network connection remote transport entity using new network connection send query peer asking data arrived knowing pick left essence existence transport layer makes possible transport service reliable underlying network furthermore transport primitives implemented calls library procedures make independent network primitives network service calls may vary considerably one network another e g calls based connectionless ethernet may quite different calls connection oriented wimax network hiding network service behind set transport service primitives ensures changing network merely requires replacing one set library procedures another one thing different underlying service thanks transport layer application programmers write code according standard set primitives programs work wide variety networks without worry dealing different network interfaces levels reliability real networks flawless service primitives guaranteed never ever change transport layer might needed however real world fulfills key function isolating upper layers technology design imperfections network reason many people made qualitative distinction layers one hand layer bottom four layers seen transport service provider whereas upper layer transport service user distinction provider versus user considerable impact design layers puts transport layer key position since forms major boundary provider user reliable data transmission service level applications see 498 transport layer transport service primitives allow users access transport service transport layer must provide operations application programs transport service interface transport service interface section first examine simple hypothetical transport service interface see bare essentials following section look real example transport service similar network service also important differences main difference network service intended model service offered real networks warts real networks lose packets network service generally unreliable connection oriented transport service contrast reliable course real networks error free precisely purpose transport layer provide reliable service top unreliable network example consider two processes single machine connected pipe unix interprocess communication facility assume connection perfect want know acknowledgements lost packets congestion anything like want reliable connection process puts data one end pipe process b takes connection oriented transport service hiding imperfections network service user processes assume existence error free bit stream even different machines aside transport layer also provide unreliable datagram service however relatively little say besides datagrams mainly concentrate connection oriented transport service chapter nevertheless applications client server computing streaming multimedia build connectionless transport service say little bit later second difference network service transport service services intended network service used transport entities users write transport entities thus users programs ever see bare network service contrast many programs thus programmers see transport primitives consequently transport service must convenient easy use get idea transport service might like consider five primitives listed transport interface truly bare bones gives essential flavor connection oriented transport interface allows application programs establish use release connections sufficient many applications see primitives might used consider application server number remote clients start server executes listen primitive typically calling library procedure makes system call sec transport service primitive packet sent meaning listen none block process tries connect connect connection req actively attempt establish connection send data send information receive none block data packet arrives disconnect disconnection req request release connection primitives simple transport service blocks server client turns client wants talk server executes connect primitive transport entity carries primitive blocking caller sending packet server encapsulated payload packet transport layer message server transport entity quick note terminology order lack better term use term segment messages sent transport entity transport entity tcp udp internet protocols use term older protocols used ungainly name tpdu transport protocol data unit term used much may see older papers books thus segments exchanged transport layer contained packets exchanged network layer turn packets contained frames exchanged data link layer frame arrives data link layer processes frame header destination address matches local delivery passes contents frame payload field network entity network entity similarly processes packet header passes contents packet payload transport entity nesting illustrated frame header packet header segment header segment payload packet payload frame payload nesting segments packets frames getting back client server example client connect call causes connection request segment sent server arrives 500 transport layer transport entity checks see server blocked listen e interested handling requests unblocks server sends connection accepted segment back client segment arrives client unblocked connection established data exchanged using send receive primitives simplest form either party blocking receive wait party send segment arrives receiver unblocked process segment send reply long sides keep track whose turn send scheme works fine note transport layer even simple unidirectional data exchange complicated network layer every data packet sent also acknowledged eventually packets bearing control segments also acknowledged implicitly explicitly acknowledgements managed transport entities using network layer protocol visible transport users similarly transport entities need worry timers retransmissions none machinery visible transport users transport users connection reliable bit pipe one user stuffs bits magically appear order end ability hide complexity reason layered protocols powerful tool connection longer needed must released free table space within two transport entities disconnection two variants asymmetric symmetric asymmetric variant either transport user issue disconnect primitive results disconnect segment sent remote transport entity upon arrival connection released symmetric variant direction closed separately independently one one side disconnect means data send still willing accept data partner model connection released sides done disconnect state diagram connection establishment release simple primitives given transition triggered event either primitive executed local transport user incoming packet simplicity assume segment separately acknowledged also assume symmetric disconnection model used client going first please note model quite unsophisticated look realistic models later describe tcp works berkeley sockets let us briefly inspect another set transport primitives socket primitives used tcp sockets first released part berkeley unix 2bsd software distribution quickly became popular primitives widely used internet programming many operating sec transport service connection request segment received connect primitive executed idle passive establishment pending active establishment pending connect primitive executed passive disconnect pending established disconnection request segment received disconnect primitive executed connection accepted segment received disconnect primitive executed idle active disconnect pending disconnection request segment received state diagram simple connection management scheme transitions labeled italics caused packet arrivals solid lines show client state sequence dashed lines show server state sequence systems especially unix based systems socket style api windows called winsock primitives listed roughly speaking follow model first example offer features flexibility look corresponding segments discussion come later primitive meaning socket create new communication endpoint bind associate local address socket listen announce willingness accept connections give queue size accept passively establish incoming connection connect actively attempt establish connection send send data connection receive receive data connection close release connection socket primitives tcp 502 transport layer first four primitives list executed order servers socket primitive creates new endpoint allocates table space within transport entity parameters call specify addressing format used type service desired e g reliable byte stream protocol successful socket call returns ordinary file descriptor use succeeding calls way open call file newly created sockets network addresses assigned using bind primitive server bound address socket remote clients connect reason socket call create address directly processes care addresses e g using address years everyone knows address whereas others next comes listen call allocates space queue incoming calls case several clients try connect time contrast listen first example socket model listen blocking call block waiting incoming connection server executes accept primitive segment asking connection arrives transport entity creates new socket properties original one returns file descriptor server fork process thread handle connection new socket go back waiting next connection original socket accept returns file descriptor used reading writing standard way files let us look client side socket must first created using socket primitive bind required since address used matter server connect primitive blocks caller actively starts connection process completes e appropriate segment received server client process unblocked connection established sides use send receive transmit receive data full duplex connection standard unix read write system calls also used none special options send receive required connection release sockets symmetric sides executed close primitive connection released sockets proved tremendously popular de facto standard abstracting transport services applications socket api often used tcp protocol provide connection oriented service called reliable byte stream simply reliable bit pipe described however protocols could used implement service using api transport service users strength socket api used application transport services instance sockets used connectionless transport service case connect sets address remote transport peer send receive send receive datagrams remote peer sec transport service also common use expanded set calls example sendto receivefrom emphasize messages limit application single transport peer sockets also used transport protocols provide message stream rather byte stream congestion control example dccp datagram congestion controlled protocol version udp congestion control kohler et al transport users understand service getting however sockets likely final word transport interfaces example applications often work group related streams web browser requests several objects server sockets natural fit application programs use one stream per object structure means congestion control applied separately stream across group suboptimal punts application burden managing set newer protocols interfaces devised support groups related streams effectively simply application two examples sctp stream control transmission protocol defined rfc sst structured stream transport ford protocols must change socket api slightly get benefits groups related streams also support features mix connection oriented connectionless traffic even multiple network paths time tell successful example socket programming internet file server example nitty gritty real socket calls made consider client server code primitive internet file server along example client uses code many limitations discussed principle server code compiled run unix system connected internet client code compiled run unix machine internet anywhere world client code executed appropriate parameters fetch file server access machine file written standard output course redirected file pipe let us look server code first starts including standard headers last three contain main internet related definitions data structures next comes definition server port number chosen arbitrarily number work well long use process ports reserved privileged users next two lines server define two constants needed first one determines chunk size bytes used file transfer second one determines many pending connections held additional ones discarded upon arrival 504 transport layer page contains client program request file server program next page server responds sending whole file include sys types h include sys socket h include netinet h include netdb h define server port define buf size arbitrary client server must agree block transfer size int main int argc char argv int c bytes char buf buf size struct hostent h struct sockaddr channel buffer incoming file info server holds ip address argc fatal usage client server name file name h gethostbyname argv look host ip address h fatal gethostbyname failed socket pf inet sock stream ipproto tcp fatal socket memset channel sizeof channel channel sin family af inet memcpy channel sin addr addr h h addr h h length channel sin port htons server port c connect struct sockaddr channel sizeof channel c fatal connect failed connection established send file name including byte end write argv strlen argv go get file write standard output read socket bytes read buf buf size bytes exit check end file write buf bytes write standard output fatal char string printf n string exit client code using sockets server code next page sec transport service include sys types h include sys fcntl h include sys socket h include netinet h include netdb h server code define server port define buf size define queue size arbitrary client server must agree block transfer size int main int argc char argv int b l fd sa bytes char buf buf size struct sockaddr channel buffer outgoing file holds ip address build address structure bind socket memset channel sizeof channel zero channel channel sin family af inet channel sin addr addr htonl inaddr channel sin port htons server port passive open wait connection socket af inet sock stream ipproto tcp create socket fatal socket failed setsockopt sol socket reuseaddr char sizeof b bind struct sockaddr channel sizeof channel b fatal bind failed l listen queue size l fatal listen failed specify queue size socket set bound wait connection process sa accept block connection request sa fatal accept failed read sa buf buf size read file name socket get return file fd open buf rdonly fd fatal open failed open file sent back bytes read fd buf buf size read file bytes break check end file write sa buf bytes write bytes socket close fd close file close sa close connection 506 transport layer declarations local variables server code begins starts initializing data structure hold server ip address data structure soon bound server socket call memset sets data structure 0s three assignments following fill three fields last contains server port functions htonl htons converting values standard format code runs correctly little endian machines e g intel x86 big endian machines e g sparc exact semantics relevant next server creates socket checks errors indicated production version code error message could trifle explanatory call setsockopt needed allow port reused server run indefinitely fielding request request ip address bound socket check made see call bind succeeded final step initialization call listen announce server willingness accept incoming calls tell system hold queue size case new requests arrive server still processing current one queue full additional requests arrive quietly discarded point server enters main loop never leaves way stop kill outside call accept blocks server client tries establish connection accept call succeeds returns socket descriptor used reading writing analogous file descriptors used read write pipes however unlike pipes unidirectional sockets bidirectional sa accepted socket used reading connection also writing pipe file descriptor reading writing connection established server reads file name name yet available server blocks waiting getting file name server opens file enters loop alternately reads blocks file writes socket entire file copied server closes file connection waits next connection show repeats loop forever let us look client code understand works necessary understand invoked assuming called client typical call client flits cs vu nl usr tom filename f call works server already running flits cs vu nl file usr tom filename exists server read access call successful file transferred internet written f client program exits since server continues transfer client started get files client code starts includes declarations execution begins checking see called right number arguments argc means program name plus two arguments note argv contains sec transport service name server e g flits cs vu nl converted ip address gethostbyname function uses dns look name study dns chap next socket created initialized client attempts establish tcp connection server using connect server running named machine attached server port either idle room listen queue connection eventually established using connection client sends name file writing socket number bytes sent one larger name proper since byte terminating name must also sent tell server name ends client enters loop reading file block block socket copying standard output done exits procedure fatal prints error message exits server needs procedure omitted due lack space page since client server compiled separately normally run different computers share code fatal two programs well material related book fetched book web site http www pearsonhighered com tanenbaum record server last word serverdom error checking meager error reporting mediocre since handles requests strictly sequentially single thread performance poor clearly never heard security using bare unix system calls way gain platform independence also makes assumptions technically illegal assuming file name fits buffer transmitted atomically shortcomings notwithstanding working internet file server exercises reader invited improve information programming sockets see donahoo calvert elements transport protocols transport service implemented transport protocol used two transport entities ways transport protocols resemble data link protocols studied detail chap deal error control sequencing flow control among issues however significant differences two also exist differences due major dissimilarities environments two protocols operate shown data link layer two routers 508 transport layer communicate directly via physical channel whether wired wireless whereas transport layer physical channel replaced entire network difference many important implications protocols router router physical communication channel network host b environment data link layer b environment transport layer one thing point point links wires optical fiber usually necessary router specify router wants talk outgoing line leads directly particular router transport layer explicit addressing destinations required another thing process establishing connection wire simple end always unless crashed case either way much even wireless links process much different sending message sufficient reach destinations message acknowledged due error resent transport layer initial connection establishment complicated see another exceedingly annoying difference data link layer transport layer potential existence storage capacity network router sends packet link may arrive lost bounce around go hiding far corner world suddenly emerge packets sent much later network uses datagrams independently routed inside nonnegligible probability packet may take scenic route arrive late expected order even duplicates packet arrive consequences network ability delay duplicate packets sometimes disastrous require use special protocols correctly transport information final difference data link transport layers one degree rather kind buffering flow control needed layers presence transport layer large varying number connections bandwidth fluctuates connections compete may require different approach used data link layer protocols discussed chap allocate fixed number buffers line frame arrives buffer always available transport layer larger number connections must managed variations bandwidth sec elements transport protocols connection may receive make idea dedicating many buffers one less attractive following sections examine important issues others addressing application e g user process wishes set connection remote application process must specify one connect connectionless transport problem message sent method normally used define transport addresses processes listen connection requests internet endpoints called ports use generic term tsap transport service access point mean specific endpoint transport layer analogous endpoints network layer e network layer addresses surprisingly called nsaps network service access points ip addresses examples nsaps illustrates relationship nsaps tsaps transport connection application processes clients servers attach local tsap establish connection remote tsap connections run nsaps host shown purpose tsaps networks computer single nsap way needed distinguish multiple transport endpoints share nsap host application process host server server tsap application layer transport connection nsap transport tsap layer tsap1836 network layer nsap data link layer physical layer tsaps nsaps transport connections 510 transport layer possible scenario transport connection follows mail server process attaches tsap host wait incoming call process attaches tsap outside networking model depends entirely local operating system call listen might used example application process host wants send email message attaches tsap issues connect request request specifies tsap host source tsap host destination action ultimately results transport connection established application process server application process sends mail message mail server responds say deliver message transport connection released note may well servers host attached tsaps waiting incoming connections arrive nsap picture painted fine except swept one little problem rug user process host know mail server attached tsap one possibility mail server attaching tsap years gradually network users learned model services stable tsap addresses listed files well known places example etc services file unix systems lists servers permanently attached ports including fact mail server found tcp port stable tsap addresses work small number key services never change e g web server user processes general often want talk user processes tsap addresses known advance may exist short time handle situation alternative scheme used scheme exists special process called portmapper find tsap address corresponding given service name bittorrent user sets connection portmapper listens well known tsap user sends message specifying service name portmapper sends back tsap address user releases connection portmapper establishes new one desired service model new service created must register portmapper giving service name typically ascii string tsap portmapper records information internal database queries come later know answers sec elements transport protocols function portmapper analogous directory assistance operator telephone system provides mapping names onto numbers telephone system essential address well known tsap used portmapper indeed well known know number information operator call information operator find think number dial information obvious try foreign country sometime many server processes exist machine used rarely wasteful active listening stable tsap address day long alternative scheme shown simplified form known initial connection protocol instead every conceivable server listening well known tsap machine wishes offer services remote users special process server acts proxy less heavily used servers server called inetd unix systems listens set ports time waiting connection request potential users service begin connect request specifying tsap address service want server waiting get connection process server shown host host host host mail server layer process server user process server user tsap b user process host establishes connection mail server host via process server gets incoming request process server spawns requested server allowing inherit existing connection user new server 512 transport layer requested work process server goes back listening new requests shown b method applicable servers created demand connection establishment establishing connection sounds easy actually surprisingly tricky first glance would seem sufficient one transport entity send connection request segment destination wait connection accepted reply problem occurs network lose delay corrupt duplicate packets behavior causes serious complications imagine network congested acknowledgements hardly ever get back time packet times retransmitted two three times suppose network uses datagrams inside every packet follows different route packets might get stuck traffic jam inside network take long time arrive may delayed network pop much later sender thought lost worst possible nightmare follows user establishes connection bank sends messages telling bank transfer large amount money account entirely trustworthy person unfortunately packets decide take scenic route destination go exploring remote corner network sender times sends time packets take shortest route delivered quickly sender releases connection unfortunately eventually initial batch packets finally come hiding arrive destination order asking bank establish new connection transfer money bank way telling duplicates must assume second independent transaction transfers money scenario may sound unlikely even implausible point protocols must designed correct cases common cases need implemented efficiently obtain good network performance protocol must able cope uncommon cases without breaking built fair weather network fail without warning conditions get tough remainder section study problem delayed duplicates emphasis algorithms establishing connections reliable way nightmares like one happen crux problem delayed duplicates thought new packets prevent packets duplicated delayed happens packets must rejected duplicates processed fresh packets problem attacked various ways none satisfactory one way use throwaway transport addresses approach time sec elements transport protocols transport address needed new one generated connection released address discarded never used delayed duplicate packets never find way transport process damage however approach makes difficult connect process first place another possibility give connection unique identifier e sequence number incremented connection established chosen initiating party put segment including one requesting connection connection released transport entity update table listing obsolete connections peer transport entity connection identifier pairs whenever connection request comes checked table see belongs previously released connection unfortunately scheme basic flaw requires transport entity maintain certain amount history information indefinitely history must persist source destination machines otherwise machine crashes loses memory longer know connection identifiers already used peers instead need take different tack simplify problem rather allowing packets live forever within network devise mechanism kill aged packets still hobbling restriction problem becomes somewhat manageable packet lifetime restricted known maximum using one following techniques restricted network design putting hop counter packet timestamping packet first technique includes method prevents packets looping combined way bounding delay including congestion known longest possible path difficult given internets may range single city international scope second method consists hop count initialized appropriate value decremented time packet forwarded network protocol simply discards packet whose hop counter becomes zero third method requires packet bear time created routers agreeing discard packet older agreed upon time latter method requires router clocks synchronized nontrivial task practice hop counter close enough approximation age practice need guarantee packet dead also acknowledgements dead introduce period small multiple true maximum packet lifetime maximum packet lifetime conservative constant network internet somewhat arbitrarily taken seconds multiple protocol dependent 514 transport layer simply effect making longer wait time secs packet sent sure traces gone neither acknowledgements suddenly appear blue complicate matters packet lifetimes bounded possible devise practical foolproof way reject delayed duplicate segments method described due tomlinson refined sunshine dalal variants widely used practice including tcp heart method source label segments sequence numbers reused within secs period rate packets per second determine size sequence numbers way one packet given sequence number may outstanding given time duplicates packet may still occur must discarded destination however longer case delayed duplicate old packet may beat new packet sequence number accepted destination stead get around problem machine losing memory crash one possibility require transport entities idle secs recovery idle period let old segments die sender start sequence number however complex internetwork may large strategy unattractive instead tomlinson proposed equipping host time day clock clocks different hosts need synchronized clock assumed take form binary counter increments uniform intervals furthermore number bits counter must equal exceed number bits sequence numbers last important clock assumed continue running even host goes connection set low order k bits clock used k bit initial sequence number thus unlike protocols chap connection starts numbering segments different initial sequence number sequence space large time sequence numbers wrap around old segments sequence number long gone linear relation time initial sequence numbers shown forbidden region shows times segment sequence numbers illegal leading use segment sent sequence number region could delayed impersonate different packet sequence number issued slightly later example host crashes restarts time seconds use initial sequence numbers based clock pick left host start lower sequence number forbidden region transport entities agreed initial sequence number sliding window protocol used data flow control window protocol correctly find discard duplicates packets already sec 2k restart crash sequence numbers f orb gi idd e n sequence numbers elements transport protocols actual sequence numbers used 120 180 time time b segments may enter forbidden region b resynchronization problem accepted reality initial sequence number curve shown heavy line linear staircase since clock advances discrete steps simplicity ignore detail keep packet sequence numbers forbidden region need take care two respects get trouble two distinct ways host sends much data fast newly opened connection actual sequence number versus time curve may rise steeply initial sequence number versus time curve causing sequence number enter forbidden region prevent happening maximum data rate connection one segment per clock tick also means transport entity must wait clock ticks opening new connection crash restart lest number used twice points argue favor short clock tick sec less clock tick fast relative sequence number clock rate c sequence number space size must c sequence numbers wrap around quickly entering forbidden region underneath sending fast way get trouble b see data rate less clock rate curve actual sequence numbers used versus time eventually run forbidden region left sequence numbers wrap around greater slope actual sequence numbers longer event delayed avoiding situation limits slowly sequence numbers advance connection long connections may last clock based method solves problem able distinguish delayed duplicate segments new segments however practical snag using establishing connections since normally remember sequence numbers across connections destination still way 516 transport layer knowing connection request segment containing initial sequence number duplicate recent connection snag exist connection sliding window protocol remember current sequence number solve specific problem tomlinson introduced three way handshake establishment protocol involves one peer checking connection request indeed current normal setup procedure host initiates shown host chooses sequence number x sends connection request segment containing host host replies ack segment acknowledging x announcing initial sequence number finally host acknowledges host choice initial sequence number first data segment sends let us see three way handshake works presence delayed duplicate control segments b first segment delayed duplicate connection request old connection segment arrives host without host knowledge host reacts segment sending host ack segment effect asking verification host indeed trying set new connection host rejects host attempt establish connection host realizes tricked delayed duplicate abandons connection way delayed duplicate damage worst case delayed connection request ack floating around subnet case shown c previous example host gets delayed connection request replies point crucial realize host proposed using initial sequence number host host traffic knowing full well segments containing sequence number acknowledgements still existence second delayed segment arrives host fact z acknowledged rather tells host old duplicate important thing realize combination old segments cause protocol fail connection set accident one wants tcp uses three way handshake establish connections within connection timestamp used extend bit sequence number wrap within maximum packet lifetime even gigabit per second connections mechanism fix tcp needed used faster faster links described rfc called paws protection wrapped sequence numbers across connections initial sequence numbers paws come play tcp originally used clock based scheme described however turned security vulnerability clock made easy attacker predict next initial sequence number send packets tricked three way handshake established forged connection close hole pseudorandom initial sequence numbers used connections practice however remains important sec host host cr eq x k dat host x seq ac eq x ack seq ac rejec x ac k k time seq ack host old duplicate cr time elements transport protocols x ac k b host host cr seq old duplicate k time q k ac x x c se dat old duplicate rej ect ack eq x z ack c three protocol scenarios establishing connection using three way handshake cr denotes connection request normal operation b old duplicate connection request appearing nowhere c duplicate connection request duplicate ack initial sequence numbers repeat interval even though appear random observer otherwise delayed duplicates wreak havoc connection release releasing connection easier establishing one nevertheless pitfalls one might expect mentioned earlier two styles terminating connection asymmetric release symmetric release 518 transport layer asymmetric release way telephone system works one party hangs connection broken symmetric release treats connection two separate unidirectional connections requires one released separately asymmetric release abrupt may result data loss consider scenario connection established host sends segment arrives properly host host sends another segment unfortunately host issues disconnect second segment arrives result connection released data lost host host cr ack time data data dr data delivered disconnect request abrupt disconnection loss data clearly sophisticated release protocol needed avoid data loss one way use symmetric release direction released independently one host continue receive data even sent disconnect segment symmetric release job process fixed amount data send clearly knows sent situations determining work done connection terminated obvious one envision protocol host says done done host responds done goodbye connection safely released unfortunately protocol always work famous problem illustrates issue called two army problem imagine white army encamped valley shown surrounding hillsides blue armies white army larger either blue armies alone together blue armies larger white army either blue army attacks defeated two blue armies attack simultaneously victorious blue armies want synchronize attacks however communication medium send messengers foot valley sec b elements transport protocols blue army b blue army white army w two army problem might captured message lost e use unreliable communication channel question protocol exist allows blue armies win suppose commander blue army sends message reading propose attack dawn march suppose message arrives commander blue army agrees reply gets safely back blue army attack happen probably commander know reply got blue army attack would foolish charge battle let us improve protocol making three way handshake initiator original proposal must acknowledge response assuming messages lost blue army get acknowledgement commander blue army hesitate know acknowledgement got knows blue army attack could make four way handshake protocol help either fact proven protocol exists works suppose protocol exist either last message protocol essential remove unessential messages left protocol every message essential happens final message get said essential lost attack take place since sender final message never sure arrival risk attacking worse yet blue army knows attack either see relevance two army problem releasing connections rather military affairs substitute disconnect attack neither side 520 transport layer prepared disconnect convinced side prepared disconnect disconnection never happen practice avoid quandary foregoing need agreement pushing problem transport user letting side independently decide done easier problem solve illustrates four scenarios releasing using three way handshake protocol infallible usually adequate see normal case one users sends dr disconnection request segment initiate connection release arrives recipient sends back dr segment starts timer case dr lost dr arrives original sender sends back ack segment releases connection finally ack segment arrives receiver also releases connection releasing connection means transport entity removes information connection table currently open connections signals connection owner transport user somehow action different transport user issuing disconnect primitive final ack segment lost shown b situation saved timer timer expires connection released anyway consider case second dr lost user initiating disconnection receive expected response time start c see works assuming second time segments lost segments delivered correctly time last scenario c except assume repeated attempts retransmit dr also fail due lost segments n retries sender gives releases connection meanwhile receiver times also exits protocol usually suffices theory fail initial dr n retransmissions lost sender give release connection side knows nothing attempts disconnect still fully active situation results half open connection could avoided problem allowing sender give n retries forcing go forever gets response however side allowed time sender indeed go forever response ever forthcoming allow receiving side time protocol hangs one way kill half open connections rule saying segments arrived certain number seconds connection automatically disconnected way one side ever disconnects side detect lack activity also disconnect rule also takes care case connection broken network longer deliver packets hosts without either end disconnecting first course rule introduced necessary transport entity timer stopped restarted whenever segment sent timer expires sec host host dr send dr start timer host host dr send dr start timer send dr start timer dr send dr start timer dr release connection release connection ack send ack release connection send ack ack lost host dr send dr start timer timeout release connection b host dr send dr start timer host host dr send dr start timer lost timeout send dr start timer elements transport protocols send dr start timer lost dr dr send dr start timer timeout send dr start timer release connection n timeouts release connection lost release connection send ack ack c timeout release connection four protocol scenarios releasing connection normal case three way handshake b final ack lost c response lost response lost subsequent drs lost dummy segment transmitted keep side disconnecting hand automatic disconnect rule used many dummy segments row lost otherwise idle connection first one side automatically disconnect belabor point clear releasing connection without data loss nearly simple first appears lesson transport user must involved deciding 522 transport layer disconnect problem cleanly solved transport entities see importance application consider tcp normally symmetric close side independently closing half connection fin packet sent data many web servers send client rst packet causes abrupt close connection like asymmetric close works web server knows pattern data exchange first receives request client data client send sends response client web server finished response data sent either direction server send client warning abruptly shut connection client gets warning release connection state client get warning eventually realize server longer talking release connection state data successfully transferred either case error control flow control examined connection establishment release detail let us look connections managed use key issues error control flow control error control ensuring data delivered desired level reliability usually data delivered without errors flow control keeping fast transmitter overrunning slow receiver issues come studied data link layer solutions used transport layer mechanisms studied chap brief recap frame carries error detecting code e g crc checksum used check information correctly received frame carries sequence number identify retransmitted sender receives acknowledgement successful receipt receiver called arq automatic repeat request maximum number frames sender allow outstanding time pausing receiver acknowledging frames quickly enough maximum one packet protocol called stop wait larger windows enable pipelining improve performance long fast links sliding window protocol combines features also used support bidirectional data transfer given mechanisms used frames link layer natural wonder would used segments transport layer well sec elements transport protocols however little duplication link transport layers practice even though mechanisms used differences function degree difference function consider error detection link layer checksum protects frame crosses single link transport layer checksum protects segment crosses entire network path end end check check every link saltzer et al describe situation packets corrupted inside router link layer checksums protected packets traveled across link inside router thus packets delivered incorrectly even though correct according checks every link examples led saltzer et al articulate end end argument according argument transport layer check runs end end essential correctness link layer checks essential nonetheless valuable improving performance since without corrupted packet sent along entire path unnecessarily difference degree consider retransmissions sliding window protocol wireless links satellite links single frame outstanding sender time bandwidth delay product link small enough even whole frame stored inside link case small window size sufficient good performance example 11 uses stop wait protocol transmitting retransmitting frame waiting acknowledged moving next frame window size larger one frame would add complexity without improving performance wired optical fiber links switched ethernet isp backbones error rate low enough link layer retransmissions omitted end end retransmissions repair residual frame loss hand many tcp connections bandwidth delay product much larger single segment consider connection sending data across u mbps round trip time msec even slow connection kbit data stored receiver time takes send segment receive acknowledgement situations large sliding window must used stop wait cripple performance example would limit performance one segment every msec segments sec matter fast network really given transport protocols generally use larger sliding windows look issue buffering data carefully since host may many connections treated separately may need substantial amount buffering sliding windows buffers needed sender receiver certainly needed sender hold transmitted yet unacknowledged segments needed segments may lost need retransmitted 524 transport layer however since sender buffering receiver may may dedicate specific buffers specific connections sees fit receiver may example maintain single buffer pool shared connections segment comes attempt made dynamically acquire new buffer one available segment accepted otherwise discarded since sender prepared retransmit segments lost network permanent harm done receiver drop segments although resources wasted sender keeps trying gets acknowledgement best trade source buffering destination buffering depends type traffic carried connection low bandwidth bursty traffic produced interactive terminal reasonable dedicate buffers rather acquire dynamically ends relying buffering sender segments must occasionally discarded hand file transfer high bandwidth traffic better receiver dedicate full window buffers allow data flow maximum speed strategy tcp uses still remains question organize buffer pool segments nearly size natural organize buffers pool identically sized buffers one segment per buffer however wide variation segment size short requests web pages large packets peer peer file transfers pool fixed sized buffers presents problems buffer size chosen equal largest possible segment space wasted whenever short segment arrives buffer size chosen less maximum segment size multiple buffers needed long segments attendant complexity another approach buffer size problem use variable sized buffers b advantage better memory utilization price complicated buffer management third possibility dedicate single large circular buffer per connection c system simple elegant depend segment sizes makes good use memory connections heavily loaded connections opened closed traffic pattern changes sender receiver need dynamically adjust buffer allocations consequently transport protocol allow sending host request buffer space end buffers could allocated per connection collectively connections running two hosts alternatively receiver knowing buffer situation knowing offered traffic could tell sender reserved x buffers number open connections increase may necessary allocation reduced protocol provide possibility reasonably general way manage dynamic buffer allocation decouple buffering acknowledgements contrast sliding window protocols chap dynamic buffer management means effect variable sized sec elements transport protocols segment segment segment b segment unused space c chained fixed size buffers b chained variable sized buffers c one large circular buffer per connection window initially sender requests certain number buffers based expected needs receiver grants many afford every time sender transmits segment must decrement allocation stopping altogether allocation reaches zero receiver separately piggybacks acknowledgements buffer allocations onto reverse traffic tcp uses scheme carrying buffer allocations header field called window size shows example dynamic window management might work datagram network bit sequence numbers example data flows segments host host b acknowledgements buffer allocations flow segments reverse direction initially wants eight buffers granted four sends three segments third lost segment acknowledges receipt segments including sequence number thus allowing release buffers furthermore informs permission send three segments starting beyond e segments knows already sent number thinks may send segments proceeds point blocked must wait buffer allocation timeout induced retransmissions line however may occur blocked since use buffers already allocated line b acknowledges receipt segments including refuses let continue situation impossible fixed window protocols chap next segment b allocates 526 transport layer another buffer allows continue happen b buffer space likely transport user accepted segment data message b comments request buffers wants buffers ack buf seq data m0 b grants messages buffers left seq data m1 seq data m2 buffers left message lost thinks left ack buf b acknowledges permits seq data m3 seq data m4 buffer left buffers left must stop seq data m2 ack buf times retransmits everything acknowledged still blocked 14 ack buf ack buf seq data m5 seq data m6 ack buf ack buf may send b found new buffer somewhere buffer left blocked still blocked potential deadlock dynamic buffer allocation arrows show direction transmission ellipsis indicates lost segment problems buffer allocation schemes kind arise datagram networks control segments get lost certainly look line b allocated buffers allocation segment lost oops since control segments sequenced timed deadlocked prevent situation host periodically send control segments giving acknowledgement buffer status connection way deadlock broken sooner later tacitly assumed limit imposed sender data rate amount buffer space available receiver often case memory expensive prices fallen dramatically hosts may equipped sufficient memory lack buffers rarely ever problem even wide area connections course depends buffer size set large enough always case tcp zhang et al buffer space longer limits maximum flow another bottleneck appear carrying capacity network adjacent routers exchange x packets sec k disjoint paths pair hosts way hosts exchange kx segments sec matter much buffer space available end sender pushes hard sec elements transport protocols e sends kx segments sec network become congested unable deliver segments fast coming needed mechanism limits transmissions sender based network carrying capacity rather receiver buffering capacity belsnes proposed using sliding window flow control scheme sender dynamically adjusts window size match network carrying capacity means dynamic sliding window implement flow control congestion control network handle c segments sec round trip time including transmission propagation queueing processing receiver return acknowledgement r sender window cr window size sender normally operates pipeline full small decrease network performance cause block since network capacity available given flow varies time window size adjusted frequently track changes carrying capacity see later tcp uses similar scheme multiplexing multiplexing sharing several conversations connections virtual circuits physical links plays role several layers network architecture transport layer need multiplexing arise number ways example one network address available host transport connections machine use segment comes way needed tell process give situation called multiplexing shown figure four distinct transport connections use network connection e g ip address remote host multiplexing also useful transport layer another reason suppose example host multiple network paths use user needs bandwidth reliability one network paths provide way connection distributes traffic among multiple network paths round robin basis indicated b modus operandi called inverse multiplexing k network connections open effective bandwidth might increased factor k example inverse multiplexing sctp stream control transmission protocol run connection using multiple network interfaces contrast tcp uses single network endpoint inverse multiplexing also found link layer several low rate links used parallel one high rate link crash recovery hosts routers subject crashes connections long lived e g large software media downloads recovery crashes becomes issue transport entity entirely within hosts recovery network 528 transport layer transport address layer network address router lines router b multiplexing b inverse multiplexing router crashes straightforward transport entities expect lost segments time know cope using retransmissions troublesome problem recover host crashes particular may desirable clients able continue working servers crash quickly reboot illustrate difficulty let us assume one host client sending long file another host file server using simple stop wait protocol transport layer server passes incoming segments transport user one one partway transmission server crashes comes back tables reinitialized longer knows precisely attempt recover previous status server might send broadcast segment hosts announcing crashed requesting clients inform status open connections client one two states one segment outstanding s1 segments outstanding s0 based state information client must decide whether retransmit recent segment first glance would seem obvious client retransmit unacknowledged segment outstanding e state s1 learns crash however closer inspection reveals difficulties naive approach consider example situation server transport entity first sends acknowledgement acknowledgement sent writes application process writing segment onto output stream sending acknowledgement two distinct events done simultaneously crash occurs acknowledgement sent write fully completed client receive sec elements transport protocols acknowledgement thus state s0 crash recovery announcement arrives client therefore retransmit incorrectly thinking segment arrived decision client leads missing segment point may thinking problem solved easily reprogram transport entity first write send acknowledgement try imagine write done crash occurs acknowledgement sent client state s1 thus retransmit leading undetected duplicate segment output stream server application process matter client server programmed always situations protocol fails recover properly server programmed one two ways acknowledge first write first client programmed one four ways always retransmit last segment never retransmit last segment retransmit state s0 retransmit state s1 gives eight combinations shall see combination set events makes protocol fail three events possible server sending acknowledgement writing output process w crashing c three events occur six different orderings ac w awc c aw c wa wac wc parentheses used indicate neither w follow c e crashed crashed shows eight combinations client server strategies valid event sequences one notice strategy sequence events causes protocol fail example client always retransmits awc event generate undetected duplicate even though two events work properly strategy used receiving host first ack write first write ack strategy used sending host ac w awc c aw c wa w ac wc always retransmit ok dup ok ok dup dup never retransmit lost ok lost lost ok ok retransmit s0 ok dup lost lost dup ok retransmit s1 lost ok ok ok ok dup ok protocol functions correctly dup protocol generates duplicate message lost protocol loses message different combinations client server strategies 530 transport layer making protocol elaborate help even client server exchange several segments server attempts write client knows exactly happen client way knowing whether crash occurred write conclusion inescapable ground rules simultaneous events separate events happen one another time host crash recovery made transparent higher layers put general terms result restated recovery layer n crash done layer n higher layer retains enough status information reconstruct problem occurred consistent case mentioned transport layer recover failures network layer provided end connection keeps track problem gets us issue called end end acknowledgement really means principle transport protocol end end chained like lower layers consider case user entering requests transactions remote database suppose remote transport entity programmed first pass segments next layer acknowledge even case receipt acknowledgement back user machine necessarily mean remote host stayed long enough actually update database truly end end acknowledgement whose receipt means work actually done lack thereof means probably impossible achieve point discussed detail saltzer et al congestion control transport entities many machines send many packets network quickly network become congested performance degraded packets delayed lost controlling congestion avoid problem combined responsibility network transport layers congestion occurs routers detected network layer however congestion ultimately caused traffic sent network transport layer effective way control congestion transport protocols send packets network slowly chap studied congestion control mechanisms network layer section study half problem congestion control mechanisms transport layer describing goals congestion control describe hosts regulate rate send packets network internet relies heavily transport layer congestion control specific algorithms built tcp protocols sec congestion control desirable bandwidth allocation describe regulate traffic must understand trying achieve running congestion control algorithm must specify state good congestion control algorithm operate network goal simply avoid congestion find good allocation bandwidth transport entities using network good allocation deliver good performance uses available bandwidth avoids congestion fair across competing transport entities quickly track changes traffic demands make criteria precise turn efficiency power capacity desired response congestion collapse delay seconds goodput packets sec efficient allocation bandwidth across transport entities use network capacity available however quite right think mbps link five transport entities get mbps usually get less mbps good performance reason traffic often bursty recall sec described goodput rate useful packets arriving receiver function offered load curve matching curve delay function offered load given onset congestion offered load packets sec offered load packets sec b goodput b delay function offered load load increases goodput initially increases rate load approaches capacity goodput rises gradually falloff bursts traffic occasionally mount cause losses buffers inside network transport protocol poorly designed retransmits packets delayed lost network enter congestion collapse state senders furiously sending packets increasingly little useful work accomplished 532 transport layer corresponding delay given b initially delay fixed representing propagation delay across network load approaches capacity delay rises slowly first much rapidly bursts traffic tend mound high load delay really go infinity except model routers infinite buffers instead packets lost experiencing maximum buffering delay goodput delay performance begins degrade onset congestion intuitively obtain best performance network allocate bandwidth delay starts climb rapidly point capacity identify kleinrock proposed metric power power load delay power initially rise offered load delay remains small roughly constant reach maximum fall delay grows rapidly load highest power represents efficient load transport entity place network max min fairness preceding discussion talk divide bandwidth different transport senders sounds like simple question answer give senders equal fraction bandwidth involves several considerations perhaps first consideration ask problem congestion control network gives sender amount bandwidth use sender use much bandwidth however often case networks strict bandwidth reservation flow connection may flows quality service supported many connections seek use whatever bandwidth available lumped together network common allocation example ietf differentiated services separates traffic two classes connections compete bandwidth within class ip routers often connections competing bandwidth situation congestion control mechanism allocating bandwidth competing connections second consideration fair portion means flows network simple enough n flows use single link case n bandwidth although efficiency dictate use slightly less traffic bursty happens flows different overlapping network paths example one flow may cross three links flows may cross one link three link flow consumes network resources might fairer sense give less bandwidth one link flows sec congestion control certainly possible support one link flows reducing bandwidth three link flow point demonstrates inherent tension fairness efficiency however adopt notion fairness depend length network path even simple model giving connections equal fraction bandwidth bit complicated different connections take different paths network paths different capacities case possible flow bottlenecked downstream link take smaller portion upstream link flows reducing bandwidth flows would slow would help bottlenecked flow form fairness often desired network usage max min fairness allocation max min fair bandwidth given one flow increased without decreasing bandwidth given another flow allocation larger increasing bandwidth flow make situation worse flows less well let us see example max min fair allocation shown network four flows b c links routers capacity taken unit though general case links different capacities three flows compete bottom left link routers r4 r5 flows therefore gets link remaining flow competes b link r2 r3 since b allocation gets remaining link notice links spare capacity however capacity given flows without decreasing capacity another lower flow example bandwidth link r2 r3 given flow b less flow reasonable flow already bandwidth however capacity flow c must decreased give bandwidth b flows less bandwidth b thus allocation max min fair r1 r2 r3 b b r4 c c r5 r6 max min bandwidth allocation four flows max min allocations computed given global knowledge network intuitive way think imagine rate 534 transport layer flows starts zero slowly increased rate reaches bottleneck flow flow stops increasing flows continue increase sharing equally available capacity reach respective bottlenecks third consideration level consider fairness network could fair level connections connections pair hosts connections per host examined issue discussing wfq weighted fair queueing sec concluded definitions problems example defining fairness per host means busy server fare better mobile phone defining fairness per connection encourages hosts open connections given clear answer fairness often considered per connection precise fairness usually concern important practice connection starved bandwidth connections get precisely amount bandwidth fact tcp possible open multiple connections compete bandwidth aggressively tactic used bandwidth hungry applications bittorrent peer peer file sharing convergence final criterion congestion control algorithm converge quickly fair efficient allocation bandwidth discussion desirable operating point assumes static network environment however connections always coming going network bandwidth needed given connection vary time example user browses web pages occasionally downloads large videos variation demand ideal operating point network varies time good congestion control algorithm rapidly converge ideal operating point track point changes time convergence slow algorithm never close changing operating point algorithm stable may fail converge right point cases even oscillate around right point example bandwidth allocation changes time converges quickly shown initially flow bandwidth one second later flow starts needs bandwidth well allocation quickly changes give flows half bandwidth seconds third flow joins however flow uses bandwidth less fair share third flows quickly adjust dividing available bandwidth bandwidth seconds second flow leaves third flow remains unchanged first flow quickly captures bandwidth times total allocated bandwidth approximately network fully used competing flows get equal treatment use bandwidth need bandwidth allocation congestion control flow flow starts flow stops flow time secs changing bandwidth allocation time regulating sending rate time main course regulate sending rates obtain desirable bandwidth allocation sending rate may limited two factors first flow control case insufficient buffering receiver second congestion case insufficient capacity network see problem illustrated hydraulically see thick pipe leading small capacity receiver flow control limited situation long sender send water bucket contain water lost b limiting factor bucket capacity internal carrying capacity network much water comes fast back lost case overflowing funnel cases may appear similar sender transmitting fast causes packets lost however different causes call different solutions already talked flow control solution variable sized window consider congestion control solution since either problems occur transport protocol general need run solutions slow either problem occurs way transport protocol regulate sending rate depends form feedback returned network different network layers may return different kinds feedback feedback may explicit implicit may precise imprecise example explicit precise design routers tell sources rate may send designs literature xcp explicit congestion protocol operate manner katabi et al explicit imprecise design use ecn explicit congestion notification tcp design routers set bits packets experience congestion warn senders slow tell much slow 536 transport layer transmission rate adjustment transmission network small capacity receiver internal congestion large capacity receiver b fast network feeding low capacity receiver b slow network feeding high capacity receiver designs explicit signal fast tcp measures roundtrip delay uses metric signal avoid congestion wei et al finally form congestion control prevalent internet today tcp drop tail red routers packet loss inferred used signal network become congested many variants form tcp including cubic tcp used linux ha et al combinations also possible example windows includes compound tcp uses packet loss delay feedback signals tan et al designs summarized explicit precise signal given transport entity use signal adjust rate new operating point example xcp tells senders rate use senders may simply use rate cases however guesswork involved absence congestion signal senders decrease rates congestion signal given senders decrease rates way rates increased decreased given control law laws major effect performance sec congestion control protocol signal explicit precise xcp rate use yes yes tcp ecn congestion warning yes fast tcp end end delay yes compound tcp packet loss end end delay yes cubic tcp packet loss tcp packet loss signals congestion control protocols chiu jain studied case binary congestion feedback concluded aimd additive increase multiplicative decrease appropriate control law arrive efficient fair operating point argue case constructed graphical argument simple case two connections competing bandwidth single link graph shows bandwidth allocated user x axis user axis allocation fair users receive amount bandwidth shown dotted fairness line allocations sum capacity link allocation efficient shown dotted efficiency line congestion signal given network users sum allocations crosses line intersection lines desired operating point users bandwidth network bandwidth used user bandwidth additive increase decrease fairness line optimal point multiplicative increase decrease efficiency line user bandwidth additive multiplicative bandwidth adjustments consider happens starting allocation user user additively increase respective bandwidths time example users may increase sending rate mbps every second eventually 538 transport layer operating point crosses efficiency line users receive congestion signal network stage must reduce allocations however additive decrease would simply cause oscillate along additive line situation shown behavior keep operating point close efficient necessarily fair similarly consider case users multiplicatively increase bandwidth time receive congestion signal example users may increase sending rate every second multiplicatively decrease sending rates operating point users simply oscillate along multiplicative line behavior also shown multiplicative line different slope additive line points origin additive line angle degrees otherwise better neither case users converge optimal sending rates fair efficient consider case users additively increase bandwidth allocations multiplicatively decrease congestion signaled behavior aimd control law shown seen path traced behavior converge optimal point fair efficient convergence happens matter starting point making aimd broadly useful argument combination multiplicative increase additive decrease would diverge optimal point start user bandwidth legend fairness line optimal point additive increase multiplicative decrease line points origin efficiency line user bandwidth additive increase multiplicative decrease aimd control law aimd control law used tcp based argument another stability argument easy drive network congestion difficult recover increase policy gentle decrease policy aggressive quite fair since tcp connections adjust window size given amount every round trip time different connections different round trip times leads bias connections closer hosts receive bandwidth connections distant hosts else equal sec congestion control sec describe detail tcp implements aimd control law adjust sending rate provide congestion control task difficult sounds rates measured interval traffic bursty instead adjusting rate directly strategy often used practice adjust size sliding window tcp uses strategy window size w round trip time rtt equivalent rate w rtt strategy easy combine flow control already uses window advantage sender paces packets using acknowledgements hence slows one rtt stops receiving reports packets leaving network final issue may many different transport protocols send traffic network happen different protocols compete different control laws avoid congestion unequal bandwidth allocations since tcp dominant form congestion control internet significant community pressure new transport protocols designed compete fairly early streaming media protocols caused problems excessively reducing tcp throughput compete fairly led notion tcp friendly congestion control tcp non tcp transport protocols freely mixed ill effects floyd et al wireless issues transport protocols tcp implement congestion control independent underlying network link layer technologies good theory practice issues wireless networks main issue packet loss often used congestion signal including tcp discussed wireless networks lose packets time due transmission errors aimd control law high throughput requires small levels packet loss analyses padhye et al show throughput goes inverse square root packet loss rate means practice loss rate fast tcp connections small moderate loss rate time loss rate reaches connection effectively stopped working however wireless networks 11 lans frame loss rates least common difference means absent protective measures congestion control schemes use packet loss signal unnecessarily throttle connections run wireless links low rates function well packet losses congestion control algorithm observe losses due insufficient bandwidth losses due transmission errors one solution problem mask wireless losses using retransmissions wireless link example 11 uses stopand wait protocol deliver frame retrying transmissions multiple times 540 transport layer need reporting packet loss higher layer normal case packet delivered despite transient transmission errors visible higher layers shows path wired wireless link masking strategy used two aspects note first sender necessarily know path includes wireless link since sees wired link attached internet paths heterogeneous general method sender tell kind links comprise path complicates congestion control problem easy way use one protocol wireless links another protocol wired links transport end end congestion control loss congestion wired link wireless link sender receiver link layer retransmission loss transmission error congestion control path wireless link second aspect puzzle figure shows two mechanisms driven loss link layer frame retransmissions transport layer congestion control puzzle two mechanisms co exist without getting confused loss cause one mechanism take action either transmission error congestion signal mechanisms take action retransmitting frame slowing sending rate back original problem transports run far slowly wireless links consider puzzle moment see solve solution two mechanisms act different timescales link layer retransmissions happen order microseconds milliseconds wireless links 11 loss timers transport protocols fire order milliseconds seconds difference three orders magnitude allows wireless links detect frame losses retransmit frames repair transmission errors long packet loss inferred transport entity masking strategy sufficient let transport protocols run well across wireless links however always fitting solution wireless links long round trip times satellites links techniques must used mask loss fec forward error correction transport protocol must use non loss signal congestion control sec congestion control second issue congestion control wireless links variable capacity capacity wireless link changes time sometimes abruptly nodes move signal noise ratio varies changing channel conditions unlike wired links whose capacity fixed transport protocol must adapt changing capacity wireless links otherwise either congest network fail use available capacity one possible solution problem simply worry strategy feasible congestion control algorithms must already handle case new users entering network existing users changing sending rates even though capacity wired links fixed changing behavior users presents variability bandwidth available given user thus possible simply run tcp path 11 wireless link obtain reasonable performance however much wireless variability transport protocols designed wired links may trouble keeping deliver poor performance solution case transport protocol designed wireless links particularly challenging setting wireless mesh network multiple interfering wireless links must crossed routes change due mobility lots loss research area ongoing see li et al example wireless transport protocol design internet transport protocols udp internet two main protocols transport layer connectionless protocol connection oriented one protocols complement connectionless protocol udp almost nothing beyond sending packets applications letting applications build protocols top needed connection oriented protocol tcp almost everything makes connections adds reliability retransmissions along flow control congestion control behalf applications use following sections study udp tcp start udp simplest also look two uses udp since udp transport layer protocol typically runs operating system protocols use udp typically run user space uses might considered applications however techniques use useful many applications better considered belong transport service cover introduction udp internet protocol suite supports connectionless transport protocol called udp user datagram protocol udp provides way applications send encapsulated ip datagrams without establish connection udp described rfc 542 transport layer udp transmits segments consisting byte header followed payload header shown two ports serve identify endpoints within source destination machines udp packet arrives payload handed process attached destination port attachment occurs bind primitive something similar used saw tcp binding process udp think ports mailboxes applications rent receive packets say describe tcp also uses ports fact main value udp using raw ip addition source destination ports without port fields transport layer would know incoming packet delivers embedded segment correct application bits source port destination port udp length udp checksum udp header source port primarily needed reply must sent back source copying source port field incoming segment destination port field outgoing segment process sending reply specify process sending machine get udp length field includes byte header data minimum length bytes cover header maximum length 515 bytes lower largest number fit bits size limit ip packets optional checksum also provided extra reliability checksums header data conceptual ip pseudoheader performing computation checksum field set zero data field padded additional zero byte length odd number checksum algorithm simply add bit words one complement take one complement sum consequence receiver performs calculation entire segment including checksum field result checksum computed stored since happy coincidence one complement arithmetic true computed stored 1s however turning foolish unless quality data matter e g digitized speech pseudoheader case ipv4 shown contains bit ipv4 addresses source destination machines protocol number udp byte count udp segment including header sec internet transport protocols udp different analogous ipv6 including pseudoheader udp checksum computation helps detect misdelivered packets including also violates protocol hierarchy since ip addresses belong ip layer udp layer tcp uses pseudoheader checksum bits source address destination address protocol udp length ipv4 pseudoheader included udp checksum probably worth mentioning explicitly things udp flow control congestion control retransmission upon receipt bad segment user processes provide interface ip protocol added feature demultiplexing multiple processes using ports optional end end error detection applications need precise control packet flow error control timing udp provides doctor ordered one area especially useful client server situations often client sends short request server expects short reply back either request reply lost client time try code simple fewer messages required one direction protocol requiring initial setup like tcp application uses udp way dns domain name system study chap brief program needs look ip address host name example www cs berkeley edu send udp packet containing host name dns server server replies udp packet containing host ip address setup needed advance release needed afterward two messages go network remote procedure call certain sense sending message remote host getting reply back lot like making function call programming language cases start one parameters get back result observation led people try arrange request reply interactions networks cast 544 transport layer form procedure calls arrangement makes network applications much easier program familiar deal example imagine procedure named get ip address host name works sending udp packet dns server waiting reply timing trying one forthcoming quickly enough way details networking hidden programmer key work area done birrell nelson nutshell birrell nelson suggested allowing programs call procedures located remote hosts process machine calls procedure machine calling process suspended execution called procedure takes place information transported caller callee parameters come back procedure result message passing visible application programmer technique known rpc remote procedure call become basis many networking applications traditionally calling procedure known client called procedure known server use names idea behind rpc make remote procedure call look much possible like local one simplest form call remote procedure client program must bound small library procedure called client stub represents server procedure client address space similarly server bound procedure called server stub procedures hide fact procedure call client server local actual steps making rpc shown step client calling client stub call local procedure call parameters pushed onto stack normal way step client stub packing parameters message making system call send message packing parameters called marshaling step operating system sending message client machine server machine step operating system passing incoming packet server stub finally step server stub calling server procedure unmarshaled parameters reply traces path direction key item note client procedure written user makes normal e local procedure call client stub name server procedure since client procedure client stub address space parameters passed usual way similarly server procedure called procedure address space parameters expects server procedure nothing unusual way instead done sockets network communication done faking normal procedure call despite conceptual elegance rpc snakes hiding grass big one use pointer parameters normally passing pointer procedure problem called procedure use pointer way caller procedures live virtual address sec internet transport protocols udp client cpu server cpu server stub client stub client server operating system operating system network steps making remote procedure call stubs shaded space rpc passing pointers impossible client server different address spaces cases tricks used make possible pass pointers suppose first parameter pointer integer k client stub marshal k send along server server stub creates pointer k passes server procedure expects server procedure returns control server stub latter sends k back client new k copied old one case server changed effect standard calling sequence call reference replaced call bycopy restore unfortunately trick always work example pointer points graph complex data structure reason restrictions must placed parameters procedures called remotely shall see second problem weakly typed languages like c perfectly legal write procedure computes inner product two vectors arrays without specifying large either one could terminated special value known calling called procedures circumstances essentially impossible client stub marshal parameters way determining large third problem always possible deduce types parameters even formal specification code example printf may number parameters least one parameters arbitrary mixture integers shorts longs characters strings floating point numbers various lengths types trying call printf remote procedure would practically impossible c permissive however rule saying rpc used provided program c c would popular lot programmers 546 transport layer fourth problem relates use global variables normally calling called procedure communicate using global variables addition communicating via parameters called procedure moved remote machine code fail global variables longer shared problems meant suggest rpc hopeless fact widely used restrictions needed make work well practice terms transport layer protocols udp good base implement rpc requests replies may sent single udp packet simplest case operation fast however implementation must include machinery well request reply may lost client must keep timer retransmit request note reply serves implicit acknowledgement request request need separately acknowledged sometimes parameters results may larger maximum udp packet size case protocol needed deliver large messages multiple requests replies overlap case concurrent programming identifier needed match request reply higher level concern operation may idempotent e safe repeat simple case idempotent operations dns requests replies client safely retransmit requests replies forthcoming matter whether server never received request reply lost answer finally arrives assuming dns database updated meantime however operations idempotent example important side effects incrementing counter rpc operations requires stronger semantics programmer calls procedure executed multiple times case may necessary set tcp connection send request rather using udp real time transport protocols client server rpc one area udp widely used another one real time multimedia applications particular internet radio internet telephony music demand videoconferencing video demand multimedia applications became commonplace people discovered application reinventing less real time transport protocol gradually became clear generic real time transport protocol multiple applications would good idea thus rtp real time transport protocol born described rfc widespread use multimedia applications describe two aspects real time transport first rtp protocol transporting audio video data packets second processing takes place mostly receiver play audio video right time functions fit protocol stack shown sec user space internet transport protocols udp multimedia application ethernet header ip udp rtp header header header rtp rtp payload socket interface udp os kernel udp payload ip ethernet ip payload ethernet payload b position rtp protocol stack b packet nesting rtp normally runs user space udp operating system operates follows multimedia application consists multiple audio video text possibly streams fed rtp library user space along application library multiplexes streams encodes rtp packets stuffs socket operating system side socket udp packets generated wrap rtp packets handed ip transmission link ethernet reverse process happens receiver multimedia application eventually receives multimedia data rtp library responsible playing media protocol stack situation shown packet nesting shown b consequence design little hard say layer rtp since runs user space linked application program certainly looks like application protocol hand generic applicationindependent protocol provides transport facilities also looks like transport protocol probably best description transport protocol happens implemented application layer covering chapter rtp real time transport protocol basic function rtp multiplex several real time data streams onto single stream udp packets udp stream sent single destination unicasting multiple destinations multicasting rtp uses normal udp packets treated specially routers unless normal ip quality service features enabled particular special guarantees delivery packets may lost delayed corrupted etc rtp format contains several features help receivers work multimedia information packet sent rtp stream given number one 548 transport layer higher predecessor numbering allows destination determine packets missing packet missing best action destination take application may skip video frame packets carrying video data approximate missing value interpolation packets carrying audio data retransmission practical option since retransmitted packet would probably arrive late useful consequence rtp acknowledgements mechanism request retransmissions rtp payload may contain multiple samples may coded way application wants allow interworking rtp defines several profiles e g single audio stream profile multiple encoding formats may allowed example single audio stream may encoded 8bit pcm samples khz using delta encoding predictive encoding gsm encoding mp3 encoding rtp provides header field source specify encoding otherwise involved encoding done another facility many real time applications need timestamping idea allow source associate timestamp first sample packet timestamps relative start stream differences timestamps significant absolute values meaning describe shortly mechanism allows destination small amount buffering play sample right number milliseconds start stream independently packet containing sample arrived timestamping reduce effects variation network delay also allows multiple streams synchronized example digital television program might video stream two audio streams two audio streams could stereo broadcasts handling films original language soundtrack soundtrack dubbed local language giving viewer choice stream comes different physical device timestamped single counter played back synchronously even streams transmitted received somewhat erratically rtp header illustrated consists three bit words potentially extensions first word contains version field already let us hope version close ultimate version since one code point left although could defined meaning real version extension word p bit indicates packet padded multiple bytes last padding byte tells many bytes added x bit indicates extension header present format meaning extension header defined thing defined first word extension gives length escape hatch unforeseen requirements sec internet transport protocols udp bits ver p x cc payload type sequence number timestamp synchronization source identifier contributing source identifier rtp header cc field tells many contributing sources present see bit application specific marker bit used mark start video frame start word audio channel something else application understands payload type field tells encoding algorithm used e g uncompressed bit audio mp3 etc since every packet carries field encoding change transmission sequence number counter incremented rtp packet sent used detect lost packets timestamp produced stream source note first sample packet made value help reduce timing variability called jitter receiver decoupling playback packet arrival time synchronization source identifier tells stream packet belongs method used multiplex demultiplex multiple data streams onto single stream udp packets finally contributing source identifiers used mixers present studio case mixer synchronizing source streams mixed listed rtcp real time transport control protocol rtp little sister protocol little sibling protocol called rtcp realtime transport control protocol defined along rtp rfc handles feedback synchronization user interface transport media samples first function used provide feedback delay variation delay jitter bandwidth congestion network properties sources information used encoding process increase data rate give better quality network functioning well cut back data 550 transport layer rate trouble network providing continuous feedback encoding algorithms continuously adapted provide best quality possible current circumstances example bandwidth increases decreases transmission encoding may switch mp3 bit pcm delta encoding required payload type field used tell destination encoding algorithm used current packet making possible vary demand issue providing feedback rtcp reports sent participants multicast application large group bandwidth used rtcp would quickly grow large prevent happening rtcp senders scale rate reports collectively consume say media bandwidth participant needs know media bandwidth learns sender number participants estimates listening rtcp reports rtcp also handles interstream synchronization problem different streams may use different clocks different granularities different drift rates rtcp used keep sync finally rtcp provides way naming various sources e g ascii text information displayed receiver screen indicate talking moment information rtp found perkins playout buffering jitter control media information reaches receiver must played right time general time rtp packet arrived receiver packets take slightly different amounts time transit network even packets injected exactly right intervals sender reach receiver different relative times variation delay called jitter even small amount packet jitter cause distracting media artifacts jerky video frames unintelligible audio media simply played arrives solution problem buffer packets receiver played reduce jitter example see stream packets delivered substantial amount jitter packet sent server sec arrives client sec packet undergoes delay takes sec arrive packets arrive buffered client machine sec playback begins time packets buffered removed buffer uniform intervals smooth play general case necessary use uniform intervals rtp timestamps tell media played sec internet transport protocols udp packet departs source 4 8 packet arrives buffer time buffer packet removed buffer 4 gap playback time sec smoothing output stream buffering packets unfortunately see packet delayed much available play slot comes two options packet skipped player move subsequent packets alternatively playback stop packet arrives creating annoying gap music movie live media application like voice ip call packet typically skipped live applications work well hold streaming media application player might pause problem alleviated delaying starting time even using larger buffer streaming audio video player buffers seconds often used ensure player receives packets dropped network time live applications like videoconferencing short buffers needed responsiveness key consideration smooth playout playback point long wait receiver media playing deciding long wait depends jitter difference low jitter high jitter connection shown average delay may differ greatly two high jitter playback point may need much capture packets low jitter pick good playback point application measure jitter looking difference rtp timestamps arrival time difference gives sample delay plus arbitrary fixed offset however delay change time due competing traffic changing routes accommodate change applications adapt playback point running however done well changing playback point produce observable glitch user one way avoid problem audio adapt playback point talkspurts gaps conversation one notice difference short slightly longer silence rtp lets applications set marker bit indicate start new talkspurt purpose absolute delay media played long live applications suffer nothing done reduce propagation delay direct path 552 high jitter fraction packets fraction packets transport layer low jitter delay minimum delay due speed light delay b high jitter b low jitter already used playback point pulled simply accepting larger fraction packets arrive late played acceptable way pull playback point reduce jitter using better quality service example expedited forwarding differentiated service better network needed internet transport protocols tcp udp simple protocol important uses clientserver interactions multimedia internet applications reliable sequenced delivery needed udp provide another protocol required called tcp main workhorse internet let us study detail introduction tcp tcp transmission control protocol specifically designed provide reliable end end byte stream unreliable internetwork internetwork differs single network different parts may wildly different topologies bandwidths delays packet sizes parameters tcp designed dynamically adapt properties internetwork robust face many kinds failures tcp formally defined rfc september time went many improvements made various errors inconsistencies fixed give sense extent tcp important rfcs sec internet transport protocols tcp rfc plus clarifications bug fixes rfc extensions high performance rfc selective acknowledgements rfc congestion control rfc repurposing header fields quality service rfc improved retransmission timers rfc explicit congestion notification rfc full collection even larger led guide many rfcs published course another rfc document rfc machine supporting tcp tcp transport entity either library procedure user process commonly part kernel cases manages tcp streams interfaces ip layer tcp entity accepts user data streams local processes breaks pieces exceeding kb practice often data bytes order fit single ethernet frame ip tcp headers sends piece separate ip datagram datagrams containing tcp data arrive machine given tcp entity reconstructs original byte streams simplicity sometimes use tcp mean tcp transport entity piece software tcp protocol set rules context clear meant example user gives tcp data tcp transport entity clearly intended ip layer gives guarantee datagrams delivered properly indication fast datagrams may sent tcp send datagrams fast enough make use capacity cause congestion time retransmit datagrams delivered datagrams arrive may well wrong order also tcp reassemble messages proper sequence short tcp must furnish good performance reliability applications want ip provide tcp service model tcp service obtained sender receiver creating end points called sockets discussed sec socket socket number address consisting ip address host bit number local host called port port tcp name tsap tcp service obtained connection must explicitly established socket one machine socket another machine socket calls listed socket may used multiple connections time words two connections may terminate socket connections identified socket identifiers ends socket1 socket2 virtual circuit numbers identifiers used port numbers reserved standard services usually started privileged users e g root unix systems called well known ports example process wishing remotely retrieve mail host connect destination host port contact imap 554 transport layer daemon list well known ports given www iana org assigned better known ones listed port protocol use ftp file transfer ssh remote login replacement telnet smtp email http world wide web pop remote email access imap remote email access https secure web http ssl tls rtsp media player control ipp printer sharing assigned ports ports registered iana use unprivileged users applications choose ports example bittorrent peer peer file sharing application unofficially uses ports 6887 may run ports well would certainly possible ftp daemon attach port boot time ssh daemon attach port boot time however would clutter memory daemons idle time instead commonly done single daemon called inetd internet daemon unix attach multiple ports wait first incoming connection occurs inetd forks new process executes appropriate daemon letting daemon handle request way daemons inetd active work inetd learns ports use configuration file consequently system administrator set system permanent daemons busiest ports e g port inetd rest tcp connections full duplex point point full duplex means traffic go directions time point point means connection exactly two end points tcp support multicasting broadcasting tcp connection byte stream message stream message boundaries preserved end end example sending process four byte writes tcp stream data may delivered receiving process four byte chunks two byte chunks one byte chunk see way way receiver detect unit data written matter hard tries sec internet transport protocols tcp ip header tcp header b c b c b four byte segments sent separate ip datagrams b bytes data delivered application single read call files unix property reader file tell whether file written block time byte time one blow unix file tcp software idea bytes mean interest finding byte byte application passes data tcp tcp may send immediately buffer order collect larger amount send discretion however sometimes application really wants data sent immediately example suppose user interactive game wants send stream updates essential updates sent immediately buffered collection force data tcp notion push flag carried packets original intent let applications tell tcp implementations via push flag delay transmission however applications literally set push flag send data instead different operating systems evolved different options expedite transmission e g tcp nodelay windows linux internet archaeologists also mention one interesting feature tcp service remains protocol rarely used urgent data application high priority data processed immediately example interactive user hits ctrl c key break remote computation already begun sending application put control information data stream give tcp along urgent flag event causes tcp stop accumulating data transmit everything connection immediately urgent data received destination receiving application interrupted e g given signal unix terms stop whatever read data stream find urgent data end urgent data marked application knows start urgent data marked application figure scheme provides crude signaling mechanism leaves everything else application however urgent data potentially useful found compelling application early fell disuse use discouraged implementation differences leaving applications handle signaling perhaps future transport protocols provide better signaling 556 transport layer tcp protocol section give general overview tcp protocol next one go protocol header field field key feature tcp one dominates protocol design every byte tcp connection bit sequence number internet began lines routers mostly kbps leased lines host blasting away full speed took week cycle sequence numbers modern network speeds sequence numbers consumed alarming rate see later separate bit sequence numbers carried packets sliding window position one direction acknowledgements reverse direction discussed sending receiving tcp entities exchange data form segments tcp segment consists fixed byte header plus optional part followed zero data bytes tcp software decides big segments accumulate data several writes one segment split data one write multiple segments two limits restrict segment size first segment including tcp header must fit 515byte ip payload second link mtu maximum transfer unit segment must fit mtu sender receiver sent received single unfragmented packet practice mtu generally bytes ethernet payload size thus defines upper bound segment size however still possible ip packets carrying tcp segments fragmented passing network path link small mtu happens degrades performance causes problems kent mogul instead modern tcp implementations perform path mtu discovery using technique outlined rfc described sec technique uses icmp error messages find smallest mtu link path tcp adjusts segment size downwards avoid fragmentation basic protocol used tcp entities sliding window protocol dynamic window size sender transmits segment also starts timer segment arrives destination receiving tcp entity sends back segment data exist otherwise without bearing acknowledgement number equal next sequence number expects receive remaining window size sender timer goes acknowledgement received sender transmits segment although protocol sounds simple many sometimes subtle ins outs cover segments arrive order bytes 4095 arrive acknowledged bytes 3071 turned yet segments also delayed long transit sender times retransmits retransmissions may include different byte sec internet transport protocols tcp ranges original transmission requiring careful administration keep track bytes correctly received far however since byte stream unique offset done tcp must prepared deal problems solve efficient way considerable amount effort gone optimizing performance tcp streams even face network problems number algorithms used many tcp implementations discussed tcp segment header shows layout tcp segment every segment begins fixed format byte header fixed header may followed header options options 535 495 data bytes may follow first refer ip header second tcp header segments without data legal commonly used acknowledgements control messages bits source port destination port sequence number acknowledgement number tcp header length c e u p r f wc r c r e g k h n n checksum window size urgent pointer options bit words data optional tcp header let us dissect tcp header field field source port destination port fields identify local end points connection tcp port plus host ip address forms bit unique end point source destination end points together identify connection connection identifier called tuple consists five pieces information protocol tcp source ip source port destination ip destination port 558 transport layer sequence number acknowledgement number fields perform usual functions note latter specifies next order byte expected last byte correctly received cumulative acknowledgement summarizes received data single number go beyond lost data bits every byte data numbered tcp stream tcp header length tells many bit words contained tcp header information needed options field variable length header technically field really indicates start data within segment measured bit words number header length words effect next comes bit field used fact bits remained unused years original reserved bits reclaimed testimony well thought tcp lesser protocols would needed bits fix bugs original design come eight bit flags cwr ece used signal congestion ecn explicit congestion notification used specified rfc ece set signal ecn echo tcp sender tell slow tcp receiver gets congestion indication network cwr set signal congestion window reduced tcp sender tcp receiver knows sender slowed stop sending ecn echo discuss role ecn tcp congestion control sec urg set urgent pointer use urgent pointer used indicate byte offset current sequence number urgent data found facility lieu interrupt messages mentioned facility bare bones way allowing sender signal receiver without getting tcp involved reason interrupt seldom used ack bit set indicate acknowledgement number valid case nearly packets ack segment contain acknowledgement acknowledgement number field ignored psh bit indicates pushed data receiver hereby kindly requested deliver data application upon arrival buffer full buffer received might otherwise efficiency rst bit used abruptly reset connection become confused due host crash reason also used reject invalid segment refuse attempt open connection general get segment rst bit problem hands syn bit used establish connections connection request syn ack indicate piggyback acknowledgement field use connection reply bear acknowledgement however syn ack essence syn bit used denote connection request connection accepted ack bit used distinguish two possibilities sec internet transport protocols tcp fin bit used release connection specifies sender data transmit however closing connection closing process may continue receive data indefinitely syn fin segments sequence numbers thus guaranteed processed correct order flow control tcp handled using variable sized sliding window window size field tells many bytes may sent starting byte acknowledged window size field legal says bytes including acknowledgement number received receiver chance consume data would like data moment thank receiver later grant permission send transmitting segment acknowledgement number nonzero window size field protocols chap acknowledgements frames received permission send new frames tied together consequence fixed window size protocol tcp acknowledgements permission send additional data completely decoupled effect receiver say received bytes k want thank decoupling fact variable sized window gives additional flexibility study detail checksum also provided extra reliability checksums header data conceptual pseudoheader exactly way udp except pseudoheader protocol number tcp checksum mandatory please see sec details options field provides way add extra facilities covered regular header many options defined several commonly used options variable length fill multiple bits using padding zeros may extend bytes accommodate longest tcp header specified options carried connection established negotiate inform side capabilities options carried packets lifetime connection option type length value encoding widely used option one allows host specify mss maximum segment size willing accept using large segments efficient using small ones byte header amortized data small hosts may able handle big segments connection setup side announce maximum see partner host use option defaults byte payload internet hosts required accept tcp segments bytes maximum segment size two directions need lines high bandwidth high delay kb window corresponding bit field problem example oc line roughly mbps takes less msec output full kb window round trip propagation delay msec typical transcontinental 560 transport layer fiber sender idle time waiting acknowledgements larger window size would allow sender keep pumping data window scale option allows sender receiver negotiate window scale factor start connection sides use scale factor shift window size field bits left thus allowing windows bytes tcp implementations support option timestamp option carries timestamp sent sender echoed receiver included every packet use established connection setup used compute round trip time samples used estimate packet lost also used logical extension 32bit sequence number fast connection sequence number may wrap around quickly leading possible confusion old new data paws protection wrapped sequence numbers scheme discards arriving segments old timestamps prevent problem finally sack selective acknowledgement option lets receiver tell sender ranges sequence numbers received supplements acknowledgement number used packet lost subsequent duplicate data arrived new data reflected acknowledgement number field header field gives next order byte expected sack sender explicitly aware data receiver hence determine data retransmitted sack defined rfc rfc increasingly used describe use sack along congestion control sec tcp connection establishment connections established tcp means three way handshake discussed sec establish connection one side say server passively waits incoming connection executing listen accept primitives order either specifying specific source nobody particular side say client executes connect primitive specifying ip address port wants connect maximum tcp segment size willing accept optionally user data e g password connect primitive sends tcp segment syn bit ack bit waits response segment arrives destination tcp entity checks see process done listen port given destination port field sends reply rst bit reject connection process listening port process given incoming tcp segment either accept reject connection accepts acknowledgement segment sent back sequence tcp segments sent normal case shown note syn segment consumes byte sequence space acknowledged unambiguously sec internet transport protocols tcp host host syn seq host host syn se q x x eq time syn n seq ack x sy ck syn syn eq se q x ck seq x ack x b tcp connection establishment normal case b simultaneous connection establishment sides event two hosts simultaneously attempt establish connection two sockets sequence events illustrated fig b result events one connection established two connections identified end points first setup results connection identified x second one one table entry made namely x recall initial sequence number chosen host cycle slowly rather constant rule protect delayed duplicate packets discussed sec originally accomplished clock based scheme clock ticked every sec however vulnerability implementing three way handshake listening process must remember sequence number soon responds syn segment means malicious sender tie resources host sending stream syn segments never following complete connection attack called syn flood crippled many web servers 1990s one way defend attack use syn cookies instead remembering sequence number host chooses cryptographically generated sequence number puts outgoing segment forgets three way handshake completes sequence number plus returned host regenerate correct sequence number running cryptographic function long inputs function known example host ip address port local secret procedure allows host check acknowledged sequence number correct without 562 transport layer remember sequence number separately caveats inability handle tcp options syn cookies may used host subject syn flood however interesting twist connection establishment information see rfc lemon tcp connection release although tcp connections full duplex understand connections released best think pair simplex connections simplex connection released independently sibling release connection either party send tcp segment fin bit set means data transmit fin acknowledged direction shut new data data may continue flow indefinitely direction however directions shut connection released normally four tcp segments needed release connection one fin one ack direction however possible first ack second fin contained segment reducing total count three telephone calls people say goodbye hang phone simultaneously ends tcp connection may send fin segments time acknowledged usual way connection shut fact essential difference two hosts releasing sequentially simultaneously avoid two army problem discussed sec timers used response fin forthcoming within two maximum packet lifetimes sender fin releases connection side eventually notice nobody seems listening anymore time well solution perfect given fact perfect solution theoretically impossible practice problems rarely arise tcp connection management modeling steps required establish release connections represented finite state machine states listed state certain events legal legal event happens action may taken event happens error reported connection starts closed state leaves state either passive open listen active open connect side opposite one connection established state becomes established connection release initiated either side complete state returns closed finite state machine shown common case client actively connecting passive server shown heavy lines solid client dotted server lightface lines unusual event sequences sec internet transport protocols tcp state description closed connection active pending listen server waiting incoming call syn rcvd connection request arrived wait ack syn sent application started open connection established normal data transfer state fin wait application said finished fin wait side agreed release time wait wait packets die closing sides tried close simultaneously close wait side initiated release last ack wait packets die states used tcp connection management finite state machine line marked event action pair event either user initiated system call connect listen send close segment arrival syn fin ack rst one case timeout twice maximum packet lifetime action sending control segment syn fin rst nothing indicated comments shown parentheses one best understand diagram first following path client heavy solid line later following path server heavy dashed line application program client machine issues connect request local tcp entity creates connection record marks syn sent state shoots syn segment note many connections may open opened time behalf multiple applications state per connection recorded connection record syn ack arrives tcp sends final ack three way handshake switches established state data sent received application finished executes close primitive causes local tcp entity send fin segment wait corresponding ack dashed box marked active close ack arrives transition made state fin wait one direction connection closed side closes fin comes acknowledged sides closed tcp waits time equal twice maximum packet lifetime guarantee packets connection died case acknowledgement lost timer goes tcp deletes connection record let us examine connection management server viewpoint server listen settles see turns syn 564 transport layer start connect syn step way handshake closed close listen close syn syn ack step listen way handshake syn rcvd rst send syn syn syn ack simultaneous open syn sent data transfer state ack established syn ack ack step way handshake close fin close fin fin ack active close passive close fin ack fin wait close wait closing ack ack close fin fin ack ack fin wait fin ack last ack time wait timeout closed ack go back start tcp connection management finite state machine heavy solid line normal path client heavy dashed line normal path server light lines unusual events transition labeled event causing action resulting separated slash comes acknowledged server goes syn rcvd state server syn acknowledged three way handshake complete server goes established state data transfer occur client done transmitting data close causes fin arrive server dashed box marked passive close server signaled close fin sent client sec internet transport protocols tcp client acknowledgement shows server releases connection deletes connection record tcp sliding window mentioned earlier window management tcp decouples issues acknowledgement correct receipt segments receiver buffer allocation example suppose receiver byte buffer shown sender transmits byte segment correctly received receiver acknowledge segment however since bytes buffer space application removes data buffer advertise window starting next byte expected sender receiver application kb write receiver buffer kb empty kb seq kb ack win application kb write kb seq full sender blocked ack application reads kb w w ack kb sender may send kb kb seq kb kb window management tcp sender transmits another bytes acknowledged advertised window size sender must stop application 566 transport layer process receiving host removed data buffer time tcp advertise larger window data sent window sender may normally send segments two exceptions first urgent data may sent example allow user kill process running remote machine second sender may send byte segment force receiver reannounce next byte expected window size packet called window probe tcp standard explicitly provides option prevent deadlock window update ever gets lost senders required transmit data soon come application neither receivers required send acknowledgements soon possible example first kb data came tcp knowing kb window would completely correct buffering data another kb came able transmit segment kb payload freedom used improve performance consider connection remote terminal example using ssh telnet reacts every keystroke worst case whenever character arrives sending tcp entity tcp creates byte tcp segment gives ip send byte ip datagram receiving side tcp immediately sends byte acknowledgement bytes tcp header bytes ip header later remote terminal read byte tcp sends window update moving window byte right packet also bytes finally remote terminal processed character echoes character local display using byte packet bytes bandwidth used four segments sent character typed bandwidth scarce method business desirable one approach many tcp implementations use optimize situation called delayed acknowledgements idea delay acknowledgements window updates msec hope acquiring data hitch free ride assuming terminal echoes within msec one byte packet need sent back remote side cutting packet count bandwidth usage half although delayed acknowledgements reduce load placed network receiver sender sends multiple short packets e g byte packets containing byte data still operating inefficiently way reduce usage known nagle algorithm nagle nagle suggested simple data come sender small pieces send first piece buffer rest first piece acknowledged send buffered data one tcp segment start buffering next segment acknowledged one short packet outstanding time many pieces data sent application one round trip time nagle algorithm put many pieces one segment greatly reducing bandwidth used algorithm additionally says new segment sent enough data trickled fill maximum segment sec internet transport protocols tcp nagle algorithm widely used tcp implementations times better disable particular interactive games run internet players typically want rapid stream short update packets gathering updates send bursts makes game respond erratically makes unhappy users subtle problem nagle algorithm sometimes interact delayed acknowledgements cause temporary deadlock receiver waits data piggyback acknowledgement sender waits acknowledgement send data interaction delay downloads web pages problems nagle algorithm disabled called tcp nodelay option mogul minshall discuss solutions another problem degrade tcp performance silly window syndrome clark problem occurs data passed sending tcp entity large blocks interactive application receiving side reads data byte time see problem look initially tcp buffer receiving side full e window size sender knows interactive application reads one character tcp stream action makes receiving tcp happy sends window update sender saying right send byte sender obliges sends byte buffer full receiver acknowledges byte segment sets window behavior go forever clark solution prevent receiver sending window update byte instead forced wait decent amount space available advertise instead specifically receiver send window update handle maximum segment size advertised connection established buffer half empty whichever smaller furthermore sender also help sending tiny segments instead wait send full segment least one containing half receiver buffer size nagle algorithm clark solution silly window syndrome complementary nagle trying solve problem caused sending application delivering data tcp byte time clark trying solve problem receiving application sucking data tcp byte time solutions valid work together goal sender send small segments receiver ask receiving tcp go improving performance window updates large units like sending tcp also buffer data block read request application large chunk data reduces number calls tcp overhead also increases response time noninteractive applications like file transfer efficiency may important response time individual requests another issue receiver must handle segments may arrive order receiver buffer data passed application 568 transport layer receiver buffer full application reads byte room one byte header header byte window update segment sent new byte arrives receiver buffer full silly window syndrome order actually nothing bad would happen order segments discarded since would eventually retransmitted sender would wasteful acknowledgements sent data byte acknowledged received called cumulative acknowledgement receiver gets segments acknowledge everything including last byte segment sender times retransmits segment receiver buffered segments upon receipt segment acknowledge bytes end segment tcp timer management tcp uses multiple timers least conceptually work important rto retransmission timeout segment sent retransmission timer started segment acknowledged timer expires timer stopped hand timer goes acknowledgement comes segment retransmitted timer os started question arises long timeout problem much difficult transport layer data link protocols 11 latter case expected delay measured sec internet transport protocols tcp microseconds highly predictable e low variance timer set go slightly acknowledgement expected shown since acknowledgements rarely delayed data link layer due lack congestion absence acknowledgement expected time generally means either frame acknowledgement lost t1 t2 probability probability round trip time microseconds round trip time milliseconds b probability density acknowledgement arrival times data link layer b probability density acknowledgement arrival times tcp tcp faced radically different environment probability density function time takes tcp acknowledgement come back looks like b larger variable determining round trip time destination tricky even known deciding timeout interval also difficult timeout set short say b unnecessary retransmissions occur clogging internet useless packets set long e g performance suffer due long retransmission delay whenever packet lost furthermore mean variance acknowledgement arrival distribution change rapidly within seconds congestion builds resolved solution use dynamic algorithm constantly adapts timeout interval based continuous measurements network performance algorithm generally used tcp due jacobson works follows connection tcp maintains variable srtt smoothed round trip time best current estimate round trip time destination question segment sent timer started see long acknowledgement takes also trigger retransmission takes long 570 transport layer acknowledgement gets back timer expires tcp measures long acknowledgement took say r updates srtt according formula srtt srtt r smoothing factor determines quickly old values forgotten typically kind formula ewma exponentially weighted moving average low pass filter discards noise samples even given good value srtt choosing suitable retransmission timeout nontrivial matter initial implementations tcp used 2xrtt experience showed constant value inflexible failed respond variance went particular queueing models random e poisson traffic predict load approaches capacity delay becomes large highly variable lead retransmission timer firing copy packet retransmitted although original packet still transiting network likely happen conditions high load worst time send additional packets network fix problem jacobson proposed making timeout value sensitive variance round trip times well smoothed round trip time change requires keeping track another smoothed variable rttvar roundtrip time variation updated using formula rttvar rttvar srtt r ewma typically retransmission timeout rto set rto srtt rttvar choice factor somewhat arbitrary multiplication done single shift less packets come four standard deviations late note rttvar exactly standard deviation really mean deviation close enough practice jacobson paper full clever tricks compute timeouts using integer adds subtracts shifts economy needed modern hosts become part culture allows tcp run manner devices supercomputers tiny devices far nobody put rfid chip someday knows details compute timeout including initial settings variables given rfc retransmission timer also held minimum second regardless estimates conservative value chosen prevent spurious retransmissions based measurements allman paxson one problem occurs gathering samples r round trip time segment times sent acknowledgement comes unclear whether acknowledgement refers first sec internet transport protocols tcp transmission later one guessing wrong seriously contaminate retransmission timeout phil karn discovered problem hard way karn amateur radio enthusiast interested transmitting tcp ip packets ham radio notoriously unreliable medium made simple proposal update estimates segments retransmitted additionally timeout doubled successive retransmission segments get first time fix called karn algorithm karn partridge tcp implementations use retransmission timer timer tcp uses second timer persistence timer designed prevent following deadlock receiver sends acknowledgement window size telling sender wait later receiver updates window packet update lost sender receiver waiting something persistence timer goes sender transmits probe receiver response probe gives window size still persistence timer set cycle repeats nonzero data sent third timer implementations use keepalive timer connection idle long time keepalive timer may go cause one side check whether side still fails respond connection terminated feature controversial adds overhead may terminate otherwise healthy connection due transient network partition last timer used tcp connection one used time wait state closing runs twice maximum packet lifetime make sure connection closed packets created died tcp congestion control saved one key functions tcp last congestion control load offered network handle congestion builds internet exception network layer detects congestion queues grow large routers tries manage dropping packets transport layer receive congestion feedback network layer slow rate traffic sending network internet tcp plays main role controlling congestion well main role reliable transport special protocol covered general situation congestion control sec one key takeaway transport protocol using aimd additive increase multiplicative decrease control law response binary congestion signals network would converge fair efficient bandwidth allocation tcp congestion control based implementing approach using window packet loss binary signal tcp maintains congestion window 572 transport layer whose size number bytes sender may network time corresponding rate window size divided round trip time connection tcp adjusts size window according aimd rule recall congestion window maintained addition flow control window specifies number bytes receiver buffer windows tracked parallel number bytes may sent smaller two windows thus effective window smaller sender thinks right receiver thinks right takes two tango tcp stop sending data either congestion flow control window temporarily full receiver says send kb sender knows bursts kb clog network send kb hand receiver says send kb sender knows bursts kb get effortlessly send full kb requested flow control window described earlier follows describe congestion window modern congestion control added tcp largely efforts van jacobson fascinating story starting growing popularity early internet led first occurrence became known congestion collapse prolonged period goodput dropped precipitously e factor due congestion network jacobson many others set understand happening remedy situation high level fix jacobson implemented approximate aimd congestion window interesting part much complexity tcp congestion control added existing implementation without changing message formats made instantly deployable start observed packet loss suitable signal congestion signal comes little late network already congested quite dependable difficult build router drop packets overloaded fact unlikely change even terabyte memories appear buffer vast numbers packets probably terabit sec networks fill memories however using packet loss congestion signal depends transmission errors relatively rare normally case wireless links 11 include retransmission mechanism link layer wireless retransmissions network layer packet loss due transmission errors normally masked wireless networks also rare links wires optical fibers typically low bit error rates internet tcp algorithms assume lost packets caused congestion monitor timeouts look signs trouble way miners watch canaries good retransmission timer needed detect packet loss signals accurately timely manner already discussed tcp retransmission timer includes estimates mean variation round trip sec internet transport protocols tcp times fixing timer including variation factor important step jacobson work given good retransmission timeout tcp sender track outstanding number bytes loading network simply looks difference sequence numbers transmitted acknowledged seems task easy need track congestion window using sequence acknowledgement numbers adjust congestion window using aimd rule might expected complicated first consideration way packets sent network even short periods time must matched network path otherwise traffic cause congestion example consider host congestion window kb attached gbps switched ethernet host sends entire window burst traffic may travel slow mbps adsl line along path burst took half millisecond gbps line clog mbps line half second completely disrupting protocols voice ip behavior might good idea protocol designed cause congestion protocol control however turns use small bursts packets advantage shows happens sender fast network gbps link sends small burst four packets receiver slow network 1mbps link bottleneck slowest part path initially four packets travel link quickly sent sender router queued sent takes longer send packet slow link receive next packet fast link queue large small number packets sent note increased length packets slow link packet kb say longer takes time send slow link fast one burst packets sent fast link fast link sender acks preserve slow link timing sender burst queues router drains onto slow link ack clock slow link bottleneck receive acks packets slow link rate receiver burst packets sender returning ack clock eventually packets get receiver acknowledged times acknowledgements reflect times packets arrived receiver crossing slow link spread compared original packets fast link acknowledgements travel network back sender preserve timing 574 transport layer key observation acknowledgements return sender rate packets sent slowest link path precisely rate sender wants use injects new packets network rate sent fast slow link permits queue congest router along path timing known ack clock essential part tcp using ack clock tcp smoothes traffic avoids unnecessary queues routers second consideration aimd rule take long time reach good operating point fast networks congestion window started small size consider modest network path support mbps rtt msec appropriate congestion window bandwidth delay product mbit packets bytes congestion window starts packet increases packet every rtt rtts seconds connection running right rate long time wait get right speed transfer could reduce startup time starting larger initial window say packets window would far large slow short links would cause congestion used described instead solution jacobson chose handle considerations mix linear multiplicative increase connection established sender initializes congestion window small initial value four segments details described rfc use four segments increase earlier initial value one segment based experience sender sends initial window packets take round trip time acknowledged segment acknowledged retransmission timer goes sender adds one segment worth bytes congestion window plus segment acknowledged one less segment network upshot every acknowledged segment allows two segments sent congestion window doubling every roundtrip time algorithm called slow start slow exponential growth except comparison previous algorithm let entire flow control window sent slow start shown first round trip time sender injects one packet network receiver receives one packet two packets sent next round trip time four packets third round trip time slow start works well range link speeds round trip times uses ack clock match rate sender transmissions network path take look way acknowledgements return sender receiver sender gets acknowledgement increases congestion window one immediately sends two packets network one packet increase one packet replacement packet acknowledged left network times number sec internet transport protocols tcp tcp sender cwnd acknowledgement cwnd cwnd cwnd cwnd cwnd cwnd cwnd tcp receiver data rtt packet rtt packets rtt packets rtt packets pipe full slow start initial congestion window one segment unacknowledged packets given congestion window however two packets necessarily arrive receiver closely spaced sent example suppose sender mbps ethernet packet bytes takes sec send delay packets small sec situation changes packets go across 1mbps adsl link anywhere along path takes msec send packet means minimum spacing two packets grown factor unless packets wait together queue later link spacing remain large effect shown enforcing minimum spacing data packets arriving receiver spacing kept receiver sends acknowledgements thus sender receives acknowledgements network path slow acknowledgements come slowly delay rtt network path fast acknowledgements come quickly rtt sender follow timing ack clock injects new packets slow start slow start causes exponential growth eventually sooner rather later send many packets network quickly happens queues build network queues full one packets lost happens tcp sender time acknowledgement fails arrive time evidence slow start growing fast three rtts four packets network four packets take entire rtt arrive receiver congestion window four packets right size connection however packets acknowledged slow start continues grow congestion window reaching eight packets another rtt four packets reach receiver one rtt matter many sent network pipe full additional packets placed network sender build 576 transport layer router queues since delivered receiver quickly enough congestion packet loss occur soon keep slow start control sender keeps threshold connection called slow start threshold initially value set arbitrarily high size flow control window limit connection tcp keeps increasing congestion window slow start timeout occurs congestion window exceeds threshold receiver window filled whenever packet loss detected example timeout slow start threshold set half congestion window entire process restarted idea current window large caused congestion previously detected timeout half window used successfully earlier time probably better estimate congestion window close path capacity cause loss example growing congestion window eight packets may cause loss congestion window four packets previous rtt right value congestion window reset small initial value slow start resumes whenever slow start threshold crossed tcp switches slow start additive increase mode congestion window increased one segment every round trip time like slow start usually implemented increase every segment acknowledged rather increase per rtt call congestion window cwnd maximum segment size mss common approximation increase cwnd mss mss cwnd cwnd mss packets may acknowledged increase need fast whole idea tcp connection spend lot time congestion window close optimum value small throughput low large congestion occur additive increase shown situation slow start end every rtt sender congestion window grown enough inject additional packet network compared slow start linear rate growth much slower makes little difference small congestion windows case large difference time taken grow congestion window segments example something else improve performance defect scheme far waiting timeout timeouts relatively long must conservative packet lost receiver acknowledge past acknowledgement number stay fixed sender able send new packets network congestion window remains full condition continue relatively long period timer fires lost packet retransmitted stage tcp slow starts quick way sender recognize one packets lost packets beyond lost packet arrive receiver trigger sec internet transport protocols tcp tcp sender cwnd acknowledgement cwnd cwnd tcp receiver data rtt packet rtt packets rtt packets cwnd rtt packets cwnd rtt packets pipe full additive increase initial congestion window one segment acknowledgements return sender acknowledgements bear acknowledgement number called duplicate acknowledgements time sender receives duplicate acknowledgement likely another packet arrived receiver lost packet still shown packets take different paths network arrive order trigger duplicate acknowledgements even though packets lost however uncommon internet much time reordering across multiple paths received packets usually reordered much thus tcp somewhat arbitrarily assumes three duplicate acknowledgements imply packet lost identity lost packet inferred acknowledgement number well next packet sequence packet retransmitted right away retransmission timeout fires heuristic called fast retransmission fires slow start threshold still set half current congestion window timeout slow start restarted setting congestion window one packet window size new packet sent one round trip time takes acknowledge retransmitted packet along data sent loss detected illustration congestion algorithm built far shown version tcp called tcp tahoe 2bsd tahoe release included maximum segment size kb initially congestion window kb timeout occurred threshold set kb congestion window kb transmission congestion window grows exponentially hits threshold kb 578 transport layer window increased every time new acknowledgement arrives rather continuously leads discrete staircase pattern threshold passed window grows linearly increased one segment every rtt congestion window kb packets slow start additive increase threshold 32kb packet loss threshold 20kb 16 transmission round rtts slow start followed additive increase tcp tahoe transmissions round unlucky known one lost network detected three duplicate acknowledgements arrive time lost packet retransmitted threshold set half current window kb half kb slow start initiated restarting congestion window one packet takes one round trip time previously transmitted data leave network acknowledged including retransmitted packet congestion window grows slow start previously reaches new threshold kb time growth becomes linear continue fashion another packet loss detected via duplicate acknowledgements timeout receiver window becomes limit tcp tahoe included good retransmission timers provided working congestion control algorithm solved problem congestion collapse jacobson realized possible even better time fast retransmission connection running congestion window large still running working ack clock every time another duplicate acknowledgement arrives likely another packet left network using duplicate acknowledgements count packets network makes possible let packets exit network continue send new packet additional duplicate acknowledgement fast recovery heuristic implements behavior temporary mode aims maintain ack clock running congestion window new threshold half value congestion window time sec internet transport protocols tcp fast retransmission duplicate acknowledgements counted including three triggered fast retransmission number packets network fallen new threshold takes half round trip time new packet sent duplicate acknowledgement received one round trip time fast retransmission lost packet acknowledged time stream duplicate acknowledgements cease fast recovery mode exited congestion window set new slow start threshold grows linear increase upshot heuristic tcp avoids slow start except connection first started timeout occurs latter still happen one packet lost fast retransmission recover adequately instead repeated slow starts congestion window running connection follows sawtooth pattern additive increase one segment every rtt multiplicative decrease half one rtt exactly aimd rule sought implement sawtooth behavior shown produced tcp reno named 3bsd reno release included tcp reno essentially tcp tahoe plus fast recovery initial slow start congestion window climbs linearly packet loss detected duplicate acknowledgements lost packet retransmitted fast recovery used keep ack clock running retransmission acknowledged time congestion window resumed new slow start threshold rather behavior continues indefinitely connection spends time congestion window close optimum value bandwidth delay product congestion window kb packets slow start additive increase packet loss thresh multiplicative decrease fast recovery threshold threshold transmission round rtts fast recovery sawtooth pattern tcp reno tcp reno mechanisms adjusting congestion window formed basis tcp congestion control two decades 580 transport layer changes intervening years adjusted mechanisms minor ways example changing choices initial window removing various ambiguities improvements made recovering two losses window packets example tcp newreno version uses partial advance acknowledgement number retransmission find repair another loss hoe described rfc since mid 1990s several variations emerged follow principles described use slightly different control laws example linux uses variant called cubic tcp ha et al windows includes variant called compound tcp tan et al two larger changes also affected tcp implementations first much complexity tcp comes inferring stream duplicate acknowledgements packets arrived packets lost cumulative acknowledgement number provide information simple fix use sack selective acknowledgements lists three ranges bytes received information sender directly decide packets retransmit track packets flight implement congestion window sender receiver set connection send sack permitted tcp option signal understand selective acknowledgements sack enabled connection works shown receiver uses tcp acknowledgement number field normal manner cumulative acknowledgement highest order byte received receives packet order packet lost sends sack option received data along duplicate cumulative acknowledgement packet sack option gives byte ranges received number given cumulative acknowledgement first range packet triggered duplicate acknowledgement next ranges present older blocks three ranges commonly used time packet received two sack byte ranges used indicate packet packets received addition packets packet information sack option receives sender decide packets retransmit case retransmitting packets would good idea sack strictly advisory information actual detection loss using duplicate acknowledgements adjustments congestion window proceed however sack tcp recover easily situations multiple packets lost roughly time since tcp sender knows packets received sack widely deployed described rfc tcp congestion control using sack described rfc second change use ecn explicit congestion notification addition packet loss congestion signal ecn ip layer mechanism sec internet transport protocols tcp retransmit lost packets sender ack ack sack receiver ack ack sack sack selective acknowledgements notify hosts congestion described sec tcp receiver receive congestion signals ip use ecn enabled tcp connection sender receiver indicate capable using ecn setting ece cwr bits connection establishment ecn used packet carries tcp segment flagged ip header show carry ecn signal routers support ecn set congestion signal packets carry ecn flags congestion approaching instead dropping packets congestion occurred tcp receiver informed packet arrives carries ecn congestion signal receiver uses ece ecn echo flag signal tcp sender packets experienced congestion sender tells receiver heard signal using cwr congestion window reduced flag tcp sender reacts congestion notifications exactly way packet loss detected via duplicate acknowledgements however situation strictly better congestion detected packet harmed way ecn described rfc requires host router support yet widely used internet information complete set congestion control behaviors implemented tcp see rfc future tcp workhorse internet tcp used many applications extended time give good performance wide range networks many versions deployed slightly different implementations classic algorithms described especially congestion control robustness attacks likely tcp continue evolve internet mention two particular issues first one tcp provide transport semantics applications want example applications want send messages records whose boundaries need preserved applications work group 582 transport layer related conversations web browser transfers several objects server still applications want better control network paths use tcp standard sockets interface meet needs well essentially application burden dealing problem solved tcp led proposals new protocols would provide slightly different interface two examples sctp stream control transmission protocol defined rfc sst structured stream transport ford however whenever someone proposes changing something worked well long always huge battle users demanding features broke fix camps second issue congestion control may expected solved problem deliberations mechanisms developed time form tcp congestion control described widely used based packet losses signal congestion padhye et al modeled tcp throughput based sawtooth pattern found packet loss rate must drop rapidly increasing speed reach throughput gbps round trip time ms byte packets one packet lost approximately every minutes packet loss rate incredibly small infrequent serve good congestion signal source loss e g packet transmission error rates easily dominate limiting throughput relationship problem past networks getting faster faster leading many people revisit congestion control one possibility use alternate congestion control signal packet loss gave several examples sec signal might round trip time grows network becomes congested used fast tcp wei et al approaches possible time tell best performance issues performance issues important computer networks hundreds thousands computers interconnected complex interactions unforeseen consequences common frequently complexity leads poor performance one knows following sections examine many issues related network performance see kinds problems exist done unfortunately understanding network performance art science little underlying theory actually use practice best give rules thumb gained hard experience present examples taken real world delayed discussion studied transport layer performance applications receive sec performance issues depends combined performance transport network link layers able use tcp example various places next sections look six aspects network performance performance problems measuring network performance host design fast networks fast segment processing header compression protocols long fat networks aspects consider network performance host across network networks increased speed size performance problems computer networks performance problems congestion caused temporary resource overloads traffic suddenly arrives router router handle congestion build performance suffer studied congestion detail previous chapter performance also degrades structural resource imbalance example gigabit communication line attached low end pc poor host able process incoming packets fast enough lost packets eventually retransmitted adding delay wasting bandwidth generally reducing performance overloads also synchronously triggered example segment contains bad parameter e g port destined many cases receiver thoughtfully send back error notification consider could happen bad segment broadcast machines one might send back error message resulting broadcast storm could cripple network udp suffered problem icmp protocol changed cause hosts refrain responding errors udp segments sent broadcast addresses wireless networks must particularly careful avoid unchecked broadcast responses broadcast occurs naturally wireless bandwidth limited second example synchronous overload happens electrical power failure power comes back machines simultaneously start rebooting typical reboot sequence might require first going dhcp server learn one true identity file server get copy operating system hundreds machines data center server probably collapse load 584 transport layer even absence synchronous overloads presence sufficient resources poor performance occur due lack system tuning example machine plenty cpu power memory enough memory allocated buffer space flow control slow segment reception limit performance problem many tcp connections internet became faster default size flow control window stayed fixed kb another tuning issue setting timeouts segment sent timer set guard loss segment timeout set short unnecessary retransmissions occur clogging wires timeout set long unnecessary delays occur segment lost tunable parameters include long wait data piggyback sending separate acknowledgement many retransmissions make giving another performance problem occurs real time applications like audio video jitter enough bandwidth average sufficient good performance short transmission delays also required consistently achieving short delays demands careful engineering load network quality service support link network layers network performance measurement network performs poorly users often complain folks running demanding improvements improve performance operators must first determine exactly going find really happening operators must make measurements section look network performance measurements much discussion based seminal work mogul measurements made different ways many locations protocol stack physically basic kind measurement start timer beginning activity see long activity takes example knowing long takes segment acknowledged key measurement measurements made counters record often event happened e g number lost segments finally one often interested knowing amount something number bytes processed certain time interval measuring network performance parameters many potential pitfalls list systematic attempt measure network performance careful avoid make sure sample size large enough measure time send one segment repeat measurement say one million times take average startup effects 16 nic cable modem getting bandwidth reservation idle period sec performance issues slow first segment queueing introduces variability large sample reduce uncertainty measured mean standard deviation uncertainty computed using standard statistical formulas make sure samples representative ideally whole sequence one million measurements repeated different times day week see effect different network conditions measured quantity measurements congestion example little use made moment congestion sometimes results may counterintuitive first heavy congestion p congestion noon users lunch wireless networks location important variable signal propagation even measurement node placed close wireless client may observe packets client due differences antennas best take measurements wireless client study see sees failing possible use techniques combine wireless measurements taken different vantage points gain complete picture going mahajan et al caching wreak havoc measurements repeating measurement many times return unexpectedly fast answer protocols use caching mechanisms instance fetching web page looking dns name find ip address may involve network exchange first time return answer local cache without sending packets network results measurement essentially worthless unless want measure cache performance buffering similar effect tcp ip performance tests known report udp achieve performance substantially higher network allows occur call udp normally returns control soon message accepted kernel added transmission queue sufficient buffer space timing udp calls mean data sent may still kernel performance test program thinks transmitted caution advised absolutely sure understand data cached buffered part network operation sure nothing unexpected going tests making measurements time user decided run video conference network often give different results video conference best run tests idle network create 586 transport layer entire workload even approach pitfalls though might think nobody using network might automatic backup program begins copying disks tape might heavy traffic wonderful web pages distant time zones wireless networks challenging respect often possible separate sources interference even wireless networks sending traffic nearby someone may microwave popcorn inadvertently cause interference degrades 11 performance reasons good practice monitor overall network activity least realize something unexpected happen careful using coarse grained clock computer clocks function incrementing counter regular intervals example millisecond timer adds counter every msec using timer measure event takes less msec possible requires care computers accurate clocks course always shorter events measure note clocks always accurate precision time returned read measure time make tcp connection example clock say milliseconds read transport layer code entered exited true connection setup time sec difference two readings either wrong however measurement repeated one million times total measurements added divided one million mean time accurate better sec careful extrapolating results suppose make measurements simulated network loads running idle capacity example response time send voice ip packet 11 network might shown data points solid line may tempting extrapolate linearly shown dotted line however many queueing results involve factor load true values may look like dashed line rises much faster linearly load gets high beware contention effects become much pronounced high load host design fast networks measuring tinkering improve performance considerably substitute good design first place poorly designed network improved much beyond redesigned scratch sec performance issues response time load response function load section present rules thumb software implementation network protocols hosts surprisingly experience shows often performance bottleneck otherwise fast networks two reasons first nics network interface cards routers already engineered hardware support run wire speed means process packets quickly packets possibly arrive link second relevant performance applications obtain link capacity throughput delay network transport processing reducing software overheads improves performance increasing throughput decreasing delay also reduce energy spent networking important consideration mobile computers ideas common knowledge network designers years first stated explicitly mogul treatment largely follows another relevant source metcalfe host speed important network speed long experience shown nearly fast networks operating system protocol overhead dominate actual time wire example theory minimum rpc time gbps ethernet sec corresponding minimum byte request followed minimum byte reply practice overcoming software overhead getting rpc time anywhere near substantial achievement rarely happens practice 588 transport layer similarly biggest problem running gbps often getting bits user buffer onto network fast enough receiving host process fast come double host cpu memory speed often come close doubling throughput doubling network capacity effect bottleneck hosts reduce packet count reduce overhead segment certain amount overhead e g header well data e g payload bandwidth required components processing also required components e g header processing checksum million bytes sent data cost matter segment size however using byte segments means times much per segment overhead using kb segments bandwidth processing overheads add fast reduce throughput per packet overhead lower layers amplifies effect arriving packet causes fresh interrupt host keeping modern pipelined processor interrupt breaks cpu pipeline interferes cache requires change memory management context voids branch prediction table forces substantial number cpu registers saved n fold reduction segments sent thus reduces interrupt packet overhead factor n might say people computers poor multitasking observation underlies desire send mtu packets large pass along network path without fragmentation mechanisms nagle algorithm clark solution also attempts avoid sending small packets minimize data touching straightforward way implement layered protocol stack one module layer unfortunately leads copying least accessing data multiple passes layer work example packet received nic typically copied kernel buffer copied network layer buffer network layer processing transport layer buffer transport layer processing finally receiving application process unusual incoming packet copied three four times segment enclosed delivered copying greatly degrade performance memory operations order magnitude slower register register instructions example instructions actually go memory e cache misses likely touching incoming packets average instruction execution time slowed factor hardware assistance help problem much copying operating system sec performance issues clever operating system minimize copying combining processing multiple layers example tcp ip usually implemented together tcp ip necessary copy payload packet processing switches network transport layer another common trick perform multiple operations within layer single pass data example checksums often computed copying data copied newly computed checksum appended end minimize context switches related rule context switches e g kernel mode user mode deadly bad properties interrupts copying combined cost transport protocols often implemented kernel like reducing packet count context switches reduced library procedure sends data internal buffering substantial amount similarly receiving side small incoming segments collected together passed user one fell swoop instead individually minimize context switches best case incoming packet causes context switch current user kernel switch receiving process give newly arrived data unfortunately operating systems additional context switches happen example network manager runs special process user space packet arrival likely cause context switch current user kernel another one kernel network manager followed another one back kernel finally one kernel receiving process sequence shown context switches packet wasteful cpu time devastating effect network performance user process running time packet arrival network manager receiving process user space kernel space four context switches handle one packet user space network manager 590 transport layer avoiding congestion better recovering old maxim ounce prevention worth pound cure certainly holds network congestion network congested packets lost bandwidth wasted useless delays introduced costs unnecessary recovering congestion takes time patience occur first place better congestion avoidance like getting dtp vaccination hurts little time get prevents something would hurt lot future avoid timeouts timers necessary networks used sparingly timeouts minimized timer goes action generally repeated truly necessary repeat action repeating unnecessarily wasteful way avoid extra work careful timers set little bit conservative side timer takes long expire adds small amount extra delay one connection unlikely event segment lost timer goes uses host resources wastes bandwidth puts extra load perhaps dozens routers good reason fast segment processing covered general rules look specific methods speeding segment processing information see clark et al chase et al segment processing overhead two components overhead per segment overhead per byte must attacked key fast segment processing separate normal successful case one way data transfer handle specially many protocols tend emphasize something goes wrong e g packet getting lost make protocols run fast designer aim minimize processing time everything goes right minimizing processing time error occurs secondary although sequence special segments needed get established state segment processing straightforward one side starts close connection let us begin examining sending side established state data transmitted sake clarity assume transport entity kernel although ideas apply user space process library inside sending process sending process traps kernel send first thing transport entity test see normal case state established neither side trying close connection regular e sec performance issues band full segment sent enough window space available receiver conditions met tests needed fast path sending transport entity taken typically path taken time receiving process sending process segment passed receiving process trap kernel send segment test test network fast path sender receiver shown heavy line processing steps path shaded usual case headers consecutive data segments almost take advantage fact prototype header stored within transport entity start fast path copied fast possible scratch buffer word word fields change segment segment overwritten buffer frequently fields easily derived state variables next sequence number pointer full segment header plus pointer user data passed network layer strategy followed shown finally network layer gives resulting packet data link layer transmission example principle works practice let us consider tcp ip shows tcp header fields consecutive segments one way flow shaded sending transport entity copy five words prototype header output buffer fill next sequence number copying word memory compute checksum increment sequence number memory hand header data special ip procedure sending regular maximum segment ip copies five word prototype header see b buffer fills identification field computes checksum packet ready transmission let us look fast path processing receiving side step locating connection record incoming segment tcp diff serv transport layer source port destination port sequence number acknowledgement number len ver ihl diff serv identification ttl total length fragment offset header checksum protocol unused window size source address checksum urgent pointer destination address b tcp header b ip header cases taken prototype without change connection record stored hash table simple function two ip addresses two ports key connection record located addresses ports must compared verify correct record found optimization often speeds connection record lookup even maintain pointer last one used try one first clark et al tried observed hit rate exceeding segment checked see normal one state established neither side trying close connection segment full one special flags set sequence number one expected tests take handful instructions conditions met special fast path tcp procedure called fast path updates connection record copies data user copying also computes checksum eliminating extra pass data checksum correct connection record updated acknowledgement sent back general scheme first making quick check see header expected special procedure handle case called header prediction many tcp implementations use optimization ones discussed chapter used together possible get tcp run speed local memory memory copy assuming network fast enough two areas major performance gains possible buffer management timer management issue buffer management avoiding unnecessary copying mentioned timer management important nearly timers set expire set guard segment loss segments acknowledgements arrive correctly hence important optimize timer management case timers rarely expiring common scheme use linked list timer events sorted expiration time head entry contains counter telling many ticks away expiry successive entry contains counter telling many ticks sec performance issues previous entry thus timers expire ticks respectively three counters respectively every clock tick counter head entry decremented hits zero event processed next item list becomes head counter changed way inserting deleting timers expensive operations execution times proportional length list much efficient approach used maximum timer interval bounded known advance array called timing wheel used shown slot corresponds one clock tick current time shown timers scheduled expire ticks new timer suddenly set expire seven ticks entry made slot similarly timer set canceled list starting slot searched required entry removed note array accommodate timers beyond slot 7 11 15 pointer list timers 0 current time pointer list timers 0 pointer list timers timing wheel clock ticks current time pointer advanced one slot circularly entry pointed nonzero timers processed many variations basic idea discussed varghese lauck header compression looking fast networks long let us consider performance wireless networks bandwidth limited reducing software overhead help mobile computers run 594 transport layer efficiently nothing improve performance network links bottleneck use bandwidth well protocol headers payloads carried minimum bits payloads means using compact encodings information images jpeg format rather bitmap document formats pdf include compression also means application level caching mechanisms web caches reduce transfers first place protocol headers link layer headers wireless networks typically compact designed scarce bandwidth mind example 16 headers short connection identifiers instead longer addresses however higher layer protocols ip tcp udp come one version link layers designed compact headers fact streamlined processing reduce software overhead often leads headers compact could otherwise e g ipv6 loosely packed headers ipv4 higher layer headers significant performance hit consider example voice ip data carried combination ip udp rtp protocols require bytes header ipv4 udp rtp ipv6 situation even worse bytes including byte ipv6 header headers wind majority transmitted data consume half bandwidth header compression used reduce bandwidth taken links higher layer protocol headers specially designed schemes used instead general purpose methods headers short compress well individually decompression requires prior data received case packet lost header compression obtains large gains using knowledge protocol format one first schemes designed van jacobson compressing tcp ip headers slow serial links able compress typical tcp ip header bytes average bytes trick method hinted many header fields change packet packet need example send ip ttl tcp port numbers every packet omitted sending side link filled receiving side similarly fields change predictable manner example barring loss tcp sequence number advances data cases receiver predict likely value actual number needs carried differs expected even may carried small change previous value acknowledgement number increases new data received reverse direction header compression possible simple headers higher layer protocols compact encodings low bandwidth links rohc robust header compression modern version header compression defined sec performance issues framework rfc designed tolerate loss occur wireless links profile set protocols compressed ip udp rtp compressed headers carried referring context essentially connection header fields may easily predicted packets connection packets different connections typical operation rohc reduces ip udp rtp headers bytes bytes header compression mainly targeted reducing bandwidth needs also useful reducing delay delay comprised propagation delay fixed given network path transmission delay depends bandwidth amount data sent example mbps link sends bit sec case media wireless networks network relatively slow transmission delay may important factor overall delay consistently low delay important quality service header compression help reducing amount data sent hence reducing transmission delay effect achieved sending smaller packets trade increased software overhead decreased transmission delay note another potential source delay queueing delay access wireless link also significant wireless links often heavily used limited resource network case wireless link must quality service mechanisms give low delay real time packets header compression alone sufficient protocols long fat networks since 1990s gigabit networks transmit data large distances combination fast network fat pipe long delay networks called long fat networks networks arose people first reaction use existing protocols various problems quickly arose section discuss problems scaling speed delay network protocols first problem many protocols use bit sequence numbers internet began lines routers mostly kbps leased lines host blasting away full speed took week cycle sequence numbers tcp designers pretty decent approximation infinity little danger old packets still around week transmitted mbps ethernet wrap time became minutes much shorter still manageable gbps ethernet pouring data onto internet wrap time seconds well sec maximum packet lifetime internet sudden nearly good approximation infinity since fast sender cycle sequence space old packets still exist problem many protocol designers simply assumed without stating time required use entire sequence space would greatly exceed 596 transport layer maximum packet lifetime consequently need even worry problem old duplicates still existing sequence numbers wrapped around gigabit speeds unstated assumption fails fortunately proved possible extend effective sequence number treating timestamp carried option tcp header packet high order bits mechanism called paws protection wrapped sequence numbers described rfc second problem size flow control window must greatly increased consider example sending kb burst data san diego boston order fill receiver kb buffer suppose link gbps one way speed light fiber delay msec initially pipe empty illustrated sec later fig b segments fiber lead segment somewhere vicinity brawley still deep southern california however transmitter must stop gets window update data b c ment ledge ow ackn state transmitting mbit san diego boston b sec c msec msec msec lead segment hits boston shown c acknowledged finally msec starting first acknowledgement gets sec performance issues back sender second burst transmitted since transmission line used 25 msec efficiency 25 situation typical older protocols running gigabit lines useful quantity keep mind analyzing network performance bandwidth delay product obtained multiplying bandwidth bits sec round trip delay time sec product capacity pipe sender receiver back bits example bandwidth delay product million bits words sender would transmit burst million bits able keep going full speed first acknowledgement came back takes many bits fill pipe directions burst half million bits achieves 25 efficiency 25 pipe capacity conclusion drawn good performance receiver window must least large bandwidth delay product preferably somewhat larger since receiver may respond instantly transcontinental gigabit line least mb required third related problem simple retransmission schemes go back n protocol perform poorly lines large bandwidth delay product consider gbps transcontinental link round trip transmission time msec sender transmit mb one round trip error detected msec sender told go back n used sender retransmit bad packet also mb worth packets came afterward clearly massive waste resources complex protocols selective repeat needed fourth problem gigabit lines fundamentally different megabit lines long gigabit lines delay limited rather bandwidth limited show time takes transfer mbit file km various transmission speeds speeds mbps transmission time dominated rate bits sent gbps msec round trip delay dominates msec takes put bits fiber increases bandwidth hardly effect unfortunate implications network protocols says stop wait protocols rpc inherent upper bound performance limit dictated speed light amount technological progress optics ever improve matters new laws physics would help though unless use found gigabit line host waiting reply gigabit line better megabit line expensive fifth problem communication speeds improved faster computing speeds note computer engineers go beat communication engineers counting 1970s arpanet ran kbps computers ran mips compare numbers 598 transport layer sec file transfer time sec sec sec msec msec msec data rate bps time transfer acknowledge mbit file km line mips computers exchanging packets gbps line number instructions per byte decreased factor exact numbers debatable depending dates scenarios conclusion less time available protocol processing used protocols must become simpler let us turn problems ways dealing basic principle high speed network designers learn heart design speed bandwidth optimization old protocols often designed minimize number bits wire frequently using small fields packing together bytes words concern still valid wireless networks gigabit networks protocol processing problem protocols designed minimize ipv6 designers clearly understood principle tempting way go fast build fast network interfaces hardware difficulty strategy unless protocol exceedingly simple hardware means plug board second cpu program make sure network coprocessor cheaper main cpu often slower chip consequence design much time main fast cpu idle waiting second slow cpu critical work myth think main cpu work waiting furthermore two general purpose cpus communicate race conditions occur elaborate protocols needed two processors synchronize sec performance issues correctly avoid races usually best approach make protocols simple main cpu work packet layout important consideration gigabit networks header contain fields possible reduce processing time fields big enough job word aligned fast processing context big enough means problems sequence numbers wrapping around old packets still exist receivers unable advertise enough window space window field small etc occur maximum data size large reduce software overhead permit efficient operation bytes small high speed networks gigabit ethernet supports jumbo frames kb ipv6 supports jumbogram packets excess kb let us look issue feedback high speed protocols due relatively long delay loop feedback avoided takes long receiver signal sender one example feedback governing transmission rate using sliding window protocol future protocols may switch rate based protocols avoid long delays inherent receiver sending window updates sender protocol sender send wants provided send faster rate sender receiver agreed upon advance second example feedback jacobson slow start algorithm algorithm makes multiple probes see much network handle high speed networks making half dozen small probes see network responds wastes huge amount bandwidth efficient scheme sender receiver network reserve necessary resources connection setup time reserving resources advance also advantage making easier reduce jitter short going high speeds inexorably pushes design toward connection oriented operation something fairly close another valuable feature ability send normal amount data along connection request way one round trip time saved delay tolerant networking finish chapter describing new kind transport may one day important component internet tcp transport protocols based assumption sender receiver continuously connected working path else protocol fails data delivered networks often end end path example space network leo low earth orbit satellites pass range ground stations given satellite may able communicate ground station particular times two satellites may never able communicate time even via ground station one satellites 600 transport layer may always range example networks involve submarines buses mobile phones devices computers intermittent connectivity due mobility extreme conditions occasionally connected networks data still communicated storing nodes forwarding later working link technique called message switching eventually data relayed destination network whose architecture based approach called dtn delay tolerant network disruption tolerant network work dtns started ietf set research group topic inspiration dtns came unlikely source efforts send packets space space networks must deal intermittent communication long delays kevin fall observed ideas interplanetary internets could applied networks earth intermittent connectivity norm fall model gives useful generalization internet storage delays occur communication data delivery akin delivery postal system electronic mail rather packet switching routers since dtn architecture refined applications dtn model grown mainstream application consider large datasets many terabytes produced scientific experiments media events web based services need copied datacenters different locations around world operators would like send bulk traffic peak times make use bandwidth already paid used willing tolerate delay like backups night applications making heavy use network problem global services peak times different locations around world may little overlap times datacenters boston perth peak network bandwidth night one city day however dtn models allow storage delays transfer model becomes possible send dataset boston amsterdam using peak bandwidth cities time zones hours apart dataset stored amsterdam peak bandwidth amsterdam perth sent perth complete transfer laoutaris et al studied model find provide substantial capacity little cost use dtn model often doubles capacity compared traditional end end model follows describe ietf dtn architecture protocols dtn architecture main assumption internet dtns seek relax endto end path source destination exists entire duration communication session case normal internet protocols sec delay tolerant networking fail dtns get around lack end end connectivity architecture based message switching shown also intended tolerate links low reliability large delays architecture specified rfc contact working link sent bundle dtn node storage intermittent link working stored bundle destination source delay tolerant networking architecture dtn terminology message called bundle dtn nodes equipped storage typically persistent storage disk flash memory store bundles links become available forward bundles links work intermittently shows five intermittent links currently working two links working working link called contact also shows bundles stored two dtn nodes awaiting contacts send bundles onward way bundles relayed via contacts source destination storing forwarding bundles dtn nodes sounds similar queueing forwarding packets routers qualitative differences routers internet queueing occurs milliseconds seconds dtn nodes bundles may stored hours bus arrives town airplane completes flight sensor node harvests enough solar energy run sleeping computer wakes forth examples also point second difference nodes may move bus plane hold stored data movement may even key part data delivery routers internet allowed move whole process moving bundles might better known store carry forward example consider scenario shown first use dtn protocols space wood et al source bundles leo satellite recording earth images part disaster monitoring constellation satellites images must returned collection point however satellite intermittent contact three ground stations orbits earth comes contact ground station turn satellite ground stations collection point act dtn node contact 602 transport layer bundle portion bundle sent ground station bundles sent backhaul terrestrial network collection point complete transfer satellite bundle contact working link intermittent link working storage dtn nodes ground station collection point use dtn space primary advantage dtn architecture example naturally fits situation satellite needing store images connectivity time image taken two advantages first may single contact long enough send images however spread across contacts three ground stations second use link satellite ground station decoupled link backhaul network means satellite download limited slow terrestrial link proceed full speed bundle stored ground station relayed collection point important issue specified architecture find good routes via dtn nodes route path use good routes depend nature architecture describes send data also contacts contacts known ahead time good example motion heavenly bodies space example space experiment known ahead time contacts would occur contact intervals ranged minutes per pass ground station downlink capacity 134 mbps given knowledge transport bundle images planned ahead time cases contacts predicted less certainty examples include buses make contact mostly regular ways due timetable yet variation times amount peak bandwidth isp networks predicted past data extreme contacts occasional random one example carrying data user sec delay tolerant networking user mobile phones depending users make contact day unpredictability contacts one routing strategy send copies bundle along different paths hope one copies delivered destination lifetime reached bundle protocol take closer look operation dtns look ietf protocols dtns emerging kind network experimental dtns used different protocols requirement ietf protocols used however least good place start highlight many key issues dtn protocol stack shown key protocol bundle protocol specified rfc responsible accepting messages application sending one bundles via storecarry forward operations destination dtn node also apparent bundle protocol runs level tcp ip words tcp ip may used contact move bundles dtn nodes positioning raises issue whether bundle protocol transport layer protocol application layer protocol rtp take position despite running transport protocol bundle protocol providing transport service many different applications cover dtns chapter upper layers application bundle protocol dtn layer convergence layer tcp ip internet convergence layer internet lower layers delay tolerant networking protocol stack see bundle protocol may run kinds protocols udp even kinds internets example space network links may long delays round trip time earth mars easily minutes depending relative position planets imagine well tcp acknowledgements retransmissions work link especially relatively short messages well instead 604 transport layer another protocol uses error correcting codes might used sensor networks resource constrained lightweight protocol tcp may used since bundle protocol fixed yet intended run variety transports must gap functionality protocols gap reason inclusion convergence layer convergence layer glue layer matches interfaces protocols joins definition different convergence layer different lower layer transport convergence layers commonly found standards join new existing protocols format bundle protocol messages shown different fields messages tell us key issues handled bundle protocol primary block bits bits optional blocks variable ver flags payload block dest source report custodian creation lifetime dictionary status report class service general variable type flags length data bundle protocol message format message consists primary block thought header payload block data optionally blocks example carry security parameters primary block begins version field currently followed flags field among functions flags encode class service let source mark bundles higher lower priority handling requests whether destination acknowledge bundle come addresses highlight three interesting parts design well destination source identifier field custodian identifier custodian party responsible seeing bundle delivered internet source node usually custodian node retransmits data ultimately delivered destination however dtn source node may always connected may way knowing whether data delivered dtns deal problem using notion custody transfer another node closer destination assume responsibility seeing data safely delivered example bundle stored airplane forwarding later time location airplane may become custodian bundle sec delay tolerant networking second interesting aspect identifiers ip addresses bundle protocol intended work across variety transports internets defines identifiers identifiers really like high level names web page urls low level addresses ip addresses give dtns aspect application level routing email delivery distribution software updates third interesting aspect way identifiers encoded also report identifier diagnostic messages identifiers encoded references variable length dictionary field provides compression custodian report nodes source destination fact much message format designed extensibility efficiency mind using compact representation variable length fields compact representation important wireless links resourceconstrained nodes sensor network next comes creation field carrying time bundle created along sequence number source ordering plus lifetime field tells time bundle data longer useful fields exist data may stored long period dtn nodes must way remove stale data network unlike internet require dtn nodes loosely synchronized clocks primary block completed dictionary field comes payload block block starts short type field identifies payload followed small set flags describe processing options comes data field preceded length field finally may optional blocks block carries security parameters many aspects dtns explored research community good strategies routing depend nature contacts mentioned storing data inside network raises issues congestion control must consider storage nodes another kind resource depleted lack end end communication also exacerbates security problems dtn node takes custody bundle may want know sender authorized use network bundle probably wanted destination solutions problems depend kind dtn space networks different sensor networks summary transport layer key understanding layered protocols provides various services important end end reliable connection oriented byte stream sender receiver accessed service primitives permit establishment use release connections common transport layer interface one provided berkeley sockets 606 transport layer transport protocols must able connection management unreliable networks connection establishment complicated existence delayed duplicate packets reappear inopportune moments deal three way handshakes needed establish connections releasing connection easier establishing one still far trivial due two army problem even network layer completely reliable transport layer plenty work must handle service primitives manage connections timers allocate bandwidth congestion control run variablesized sliding window flow control congestion control allocate available bandwidth competing flows fairly track changes usage network aimd control law converges fair efficient allocation internet two main transport protocols udp tcp udp connectionless protocol mainly wrapper ip packets additional feature multiplexing demultiplexing multiple processes using single ip address udp used client server interactions example using rpc also used building real time protocols rtp main internet transport protocol tcp provides reliable bidirectional congestion controlled byte stream byte header segments great deal work gone optimizing tcp performance using algorithms nagle clark jacobson karn others network performance typically dominated protocol segment processing overhead situation gets worse higher speeds protocols designed minimize number segments work large bandwidthdelay paths gigabit networks simple protocols streamlined processing called delay tolerant networking provides delivery service across networks occasional connectivity long delays across links intermediate nodes store carry forward bundles information eventually delivered even working path sender receiver time problems example transport primitives listen blocking call strictly necessary explain nonblocking primitive could used advantage would scheme described text primitives transport service assume asymmetry two end points connection establishment one end server executes listen end client executes connect however peer peer applications file sharing chap problems systems e g bittorrent end points peers server client functionality transport service primitives may used build peer peer applications underlying model assumed packets may lost network layer thus must individually acknowledged suppose network layer percent reliable never loses packets changes needed parts comment value server port must client server important internet file server example connect system call client fail reason listen queue full server assume network perfect one criteria deciding whether server active time start demand using process server frequently service provided used think criteria making decision suppose clock driven scheme generating initial sequence numbers used bit wide clock counter clock ticks every msec maximum packet lifetime sec often need resynchronization take place worst case b data consumes sequence numbers min maximum packet lifetime large enough ensure packet also acknowledgements vanished imagine two way handshake rather three way handshake used set connections words third message required deadlocks possible give example show none exist imagine generalized n army problem agreement two blue armies sufficient victory protocol exist allows blue win consider problem recovering host crashes e interval writing sending acknowledgement vice versa made relatively small two best sender receiver strategies minimizing chance protocol failure suppose new flow e added takes path r1 r2 r6 max min bandwidth allocation change five flows discuss advantages disadvantages credits versus sliding window protocols policies fairness congestion control additive increase additive decrease aiad multiplicative increase additive decrease miad multiplicative increase multiplicative decrease mimd discuss three policies terms convergence stability udp exist would enough let user processes send raw ip packets 608 transport layer consider simple application level protocol built top udp allows client retrieve file remote server residing well known address client first sends request file name server responds sequence data packets containing different parts requested file ensure reliability sequenced delivery client server use stop wait protocol ignoring obvious performance issue see problem protocol think carefully possibility processes crashing client sends byte request server located km away gigabit optical fiber efficiency line remote procedure call consider situation previous problem compute minimum possible response time given gbps line mbps line conclusion draw udp tcp use port numbers identify destination entity delivering message give two reasons protocols invented new abstract id port numbers instead using process ids already existed protocols designed several rpc implementations provide option client use rpc implemented udp rpc implemented tcp conditions client prefer use rpc udp conditions prefer use rpc tcp consider two networks n n average delay source destination n delay experienced different packets unformly distributed maximum delay seconds n packets experience less one second delay limit maximum delay discuss rtp may used two cases transmit live audio video stream total size minimum tcp mtu including tcp ip overhead including data link layer overhead datagram fragmentation reassembly handled ip invisible tcp mean tcp worry data arriving wrong order rtp used transmit cd quality audio makes pair bit samples 100 times sec one sample stereo channels many packets per second must rtp transmit would possible place rtp code operating system kernel along udp code explain answer process host assigned port p process host assigned port q possible two tcp connections two ports time saw addition bit acknowledgement field ack bit fourth word really add anything maximum payload tcp segment 495 bytes strange number chosen chap problems describe two ways get syn rcvd state consider effect using slow start line msec round trip time congestion receive window kb maximum segment size kb long take first full window sent suppose tcp congestion window set kb timeout occurs big window next four transmission bursts successful assume maximum segment size kb tcp round trip time rtt currently msec following acknowledgements come msec respectively new rtt estimate using jacobson algorithm use tcp machine sending full windows 535 bytes gbps channel msec one way delay maximum throughput achievable line efficiency fastest line speed host blast byte tcp payloads sec maximum packet lifetime without sequence numbers wrap around take tcp ip ethernet overhead consideration assume ethernet frames may sent continuously address limitations ip version major effort undertaken via ietf resulted design ip version still significant reluctance adoption new version however major effort needed address limitations tcp explain case network whose max segment bytes max segment lifetime sec bit sequence numbers maximum data rate per connection suppose measuring time receive segment interrupt occurs read system clock milliseconds segment fully processed read clock measure msec 000 times msec 000 times long take receive segment cpu executes instructions rate mips data copied bits time word copied costing instructions coming packet copied four times system handle gbps line simplicity assume instructions even instructions read write memory run full mips rate get around problem sequence numbers wrapping around old packets still exist one could use bit sequence numbers however theoretically optical fiber run tbps maximum packet lifetime required make sure future tbps networks wraparound problems even bit sequence numbers assume byte sequence number tcp sec calculated gigabit line dumps 000 packets sec host giving instructions process leaving half cpu time applications calculation assumed byte packet redo calculation arpanet sized packet bytes cases assume packet sizes given include overhead 610 transport layer gbps network operating km delay limiting factor bandwidth consider man average source destination km apart data rate round trip delay due speed light equal transmission delay kb packet calculate bandwidth delay product following networks t1 mbps ethernet mbps t3 mbps sts mbps assume rtt msec recall tcp header bits reserved window size implications light calculations bandwidth delay product mbps channel geostationary satellite packets bytes including overhead big window packets file server far perfect could use improvements make following modifications give client third argument specifies byte range b add client flag w allows file written server one common function network protocols need manipulate messages recall protocols manipulate messages adding striping headers protocols may break single message multiple fragments later join multiple fragments back single message end design implement message management library provides support creating new message attaching header message stripping header message breaking message two messages combining two messages single message saving copy message implementation must minimize data copying one buffer another much possible critical operations manipulate messages touch data message rather manipulate pointers design implement chat system allows multiple groups users chat chat coordinator resides well known network address uses udp communication chat clients sets chat servers chat session maintains chat session directory one chat server per chat session chat server uses tcp communication clients chat client allows users start join leave chat session design implement coordinator server client code 7 application layer finished preliminaries come layer applications found layers application layer provide transport services real work users chapter study real network applications however even application layer need support protocols allow applications function accordingly look important one starting applications item question dns handles naming within internet examine three real applications electronic mail world wide web multimedia finish chapter saying content distribution including peer peer networks dns domain name system although programs theoretically could refer web pages mailboxes resources using network e g ip addresses computers stored addresses hard people remember also browsing company web pages 111 41 means company moves web server different machine different ip address everyone needs told new ip address consequently high level readable names introduced order decouple machine names machine addresses 612 application layer way company web server might known www cs washington edu regardless ip address nevertheless since network understands numerical addresses mechanism required convert names network addresses following sections study mapping accomplished internet way back arpanet days simply file hosts txt listed computer names ip addresses every night hosts would fetch site maintained network hundred large timesharing machines approach worked reasonably well however well many millions pcs connected internet everyone involved realized approach could continue work forever one thing size file would become large however even importantly host name conflicts would occur constantly unless names centrally managed something unthinkable huge international network due load latency solve problems dns domain name system invented key part internet ever since essence dns invention hierarchical domain based naming scheme distributed database system implementing naming scheme primarily used mapping host names ip addresses also used purposes dns defined rfcs elaborated many others briefly way dns used follows map name onto ip address application program calls library procedure called resolver passing name parameter saw example resolver gethostbyname resolver sends query containing name local dns server looks name returns response containing ip address resolver returns caller query response messages sent udp packets armed ip address program establish tcp connection host send udp packets dns name space managing large constantly changing set names nontrivial problem postal system name management done requiring letters specify implicitly explicitly country state province city street address name addressee using kind hierarchical addressing ensures confusion marvin anderson main st white plains n marvin anderson main st austin texas dns works way internet top naming hierarchy managed organization called icann internet corporation assigned names numbers icann created purpose part maturing internet worldwide economic concern conceptually internet divided sec dns domain name system top level domains domain covers many hosts domain partitioned subdomains partitioned domains represented tree shown leaves tree represent domains subdomains contain machines course leaf domain may contain single host may represent company contain thousands hosts generic aero com edu cisco washington eng cs eng robot gov countries museum org acm ieee jack jill net au edu jp uk ac co uwa keio nec cs csl us nl vu cs filts oce law fluit portion internet domain name space top level domains come two flavors generic countries generic domains listed include original domains 1980s domains introduced via applications icann generic top level domains added future country domains include one entry every country defined iso internationalized country domain names use non latin alphabets introduced domains let people name hosts arabic cyrillic chinese languages getting second level domain name company com easy top level domains run registrars appointed icann getting name merely requires going corresponding registrar com case check desired name available somebody else trademark problems requester pays registrar small annual fee gets name however internet become commercial international also become contentious especially matters related naming controversy includes icann example creation xxx domain took several years court cases resolve voluntarily placing adult content domain good bad thing people want adult content available internet others wanted put one domain nanny filters could easily find block children domains self organize others restrictions obtain name noted restrictions appropriate take pro domain 614 application layer domain intended use start date restricted com commercial edu educational institutions yes gov government yes int international organizations yes mil military yes net network providers org non profit organizations aero air transport yes biz businesses coop cooperatives yes info informational museum museums yes name people pro professionals yes cat catalan yes jobs employment yes mobi mobile devices yes tel contact details yes travel travel industry yes xxx sex industry generic top level domains example qualified professionals professional doctors lawyers clearly professionals freelance photographers piano teachers magicians plumbers barbers exterminators tattoo artists mercenaries prostitutes occupations eligible according also money names tuvalu country sold lease tv domain million country code well suited advertising television sites virtually every common english word taken com domain along common misspellings try household articles animals plants body parts etc practice registering domain turn around sell interested party much higher price even name called cybersquatting many companies slow mark internet era began found obvious domain names already taken tried acquire general long trademarks violated fraud involved first come first served names nevertheless policies resolve naming disputes still refined sec dns domain name system domain named path upward unnamed root components separated periods pronounced dot thus engineering department cisco might eng cisco com rather unix style name com cisco eng notice hierarchical naming means eng cisco com conflict potential use eng eng washington edu might used english department university washington domain names either absolute relative absolute domain name always ends period e g eng cisco com whereas relative one relative names interpreted context uniquely determine true meaning cases named domain refers specific node tree nodes domain names case insensitive edu edu edu mean thing component names characters long full path names must exceed characters principle domains inserted tree either generic country domains example cs washington edu could equally well listed us country domain cs washington wa us practice however organizations united states generic domains outside united states domain country rule registering multiple top level domains large companies often e g sony com sony net sony nl domain controls allocates domains example japan domains ac jp co jp mirror edu com netherlands make distinction puts organizations directly nl thus three following university computer science departments cs washington edu university washington u cs vu nl vrije universiteit netherlands cs keio ac jp keio university japan create new domain permission required domain included example vlsi group started university washington wants known vlsi cs washington edu get permission whoever manages cs washington edu similarly new university chartered say university northern south dakota must ask manager edu domain assign unsd edu still available way name conflicts avoided domain keep track subdomains new domain created registered create subdomains cs unsd edu without getting permission anybody higher tree naming follows organizational boundaries physical networks example computer science electrical engineering departments located building share lan nevertheless distinct 616 application layer domains similarly even computer science split babbage hall turing hall hosts buildings normally belong domain domain resource records every domain whether single host top level domain set resource records associated records dns database single host common resource record ip address many kinds resource records also exist resolver gives domain name dns gets back resource records associated name thus primary function dns map domain names onto resource records resource record five tuple although encoded binary efficiency expositions resource records presented ascii text one line per resource record format use follows domain name time live class type value domain name tells domain record applies normally many records exist domain copy database holds information multiple domains field thus primary search key used satisfy queries order records database significant time live field gives indication stable record information highly stable assigned large value number seconds day information highly volatile assigned small value minute come back point later discussed caching third field every resource record class internet information always non internet information codes used practice rarely seen type field tells kind record many kinds dns records important types listed soa record provides name primary source information name server zone described email address administrator unique serial number various flags timeouts important record type address record holds bit ipv4 address interface host corresponding aaaa quad record holds bit ipv6 address every internet host must least one ip address machines communicate hosts two network interfaces case two type aaaa resource records consequently dns return multiple addresses single name common record type mx record specifies name host prepared accept email specified domain used every sec dns domain name system type meaning value soa start authority parameters zone ipv4 address host bit integer aaaa ipv6 address host bit integer mx mail exchange priority domain willing accept email ns name server name server domain cname canonical name domain name ptr pointer alias ip address spf sender policy framework text encoding mail sending policy srv service host provides txt text descriptive ascii text principal dns resource record types machine prepared accept email someone wants send email example bill microsoft com sending host needs find mail server located microsoft com willing accept email mx record provide information another important record type ns record specifies name server domain subdomain host copy database domain used part process look names describe shortly cname records allow aliases created example person familiar internet naming general wanting send message user paul computer science department might guess paul cs mit edu work actually address work domain computer science department csail mit edu however service people know could create cname entry point people programs right direction entry like one might job cs mit edu cname csail mit edu like cname ptr points another name however unlike cname really macro definition e mechanism replace one string another ptr regular dns data type whose interpretation depends context found practice nearly always used associate name ip address allow lookups ip address return name corresponding machine called reverse lookups srv newer type record allows host identified given service domain example web server cs washington edu could identified cockatoo cs washington edu record generalizes mx record performs task mail servers 618 application layer spf also newer type record lets domain encode information machines domain send mail rest internet helps receiving machines check mail valid mail received machine calls dodgy domain records say mail sent domain machine called smtp chances mail forged junk mail last list txt records originally provided allow domains identify arbitrary ways nowadays usually encode machinereadable information typically spf information finally value field field number domain name ascii string semantics depend record type short description value fields principal record types given example kind information one might find dns database domain see figure depicts part hypothetical database cs vu nl domain shown database contains seven types resource records authoritative data cs vu nl cs vu nl cs vu nl cs vu nl cs vu nl soa mx mx ns star boss 7200 241920 zephyr top star star zephyr top www ftp 86400 cname cname 37 205 37 10 37 11 star cs vu nl zephyr cs vu nl flits flits flits flits flits 86400 mx mx mx 37 112 31 165 flits zephyr top rowboat mx mx 37 201 rowboat zephyr little sister 37 23 laserjet 31 216 portion possible dns database cs vu nl first noncomment line gives basic information domain concern us come two entries giving first sec dns domain name system second places try deliver email sent person cs vu nl zephyr specific machine tried first fails top tried next choice next line identifies name server domain star blank line added readability come lines giving ip addresses star zephyr top followed alias www cs vu nl address used without designating specific machine creating alias allows cs vu nl change world wide web server without invalidating address people use get similar argument holds ftp cs vu nl section machine flits lists two ip addresses three choices given handling email sent flits cs vu nl first choice naturally flits zephyr top second third choices next three lines contain typical entry computer case rowboat cs vu nl information provided contains ip address primary secondary mail drops comes entry computer capable receiving mail followed entry likely printer connected internet name servers theory least single name server could contain entire dns database respond queries practice server would overloaded useless furthermore ever went entire internet would crippled avoid problems associated single source information dns name space divided nonoverlapping zones one possible way divide name space shown circled zone contains part tree generic aero com edu cisco washington eng cs robot eng gov countries museum org acm ieee jack jill net au edu jp uk ac co uwa keio nec cs csl us nl vu cs flits oce law fluit part dns name space divided zones circled 620 application layer zone boundaries placed within zone zone administrator decision made large part based many name servers desired example university washington zone washington edu handles eng washington edu handle cs washington edu separate zone name servers decision might made department english wish run name server department computer science zone also associated one name servers hosts hold database zone normally zone one primary name server gets information file disk one secondary name servers get information primary name server improve reliability name servers located outside zone process looking name finding address called name resolution resolver query domain name passes query local name server domain sought falls jurisdiction name server top cs vu nl falling cs vu nl returns authoritative resource records authoritative record one comes authority manages record thus always correct authoritative records contrast cached records may date happens domain remote flits cs vu nl wants find ip address robot cs washington edu uw university washington case cached information domain available locally name server begins remote query query follows process shown step shows query sent local name server query contains domain name sought type class root name server root servers net query robot cs washington edu filts cs vu nl originator ery qu u ed ery u q du ton e shing wa query local cs wa shington cs vu nl edu name server rob qu ot ery cs w hin gto n e du edu name server edu servers net uw name server uwcs name server example resolver looking remote name steps next step start top name hierarchy asking one root name servers name servers information top level sec dns domain name system domain shown step contact root server name server must information one root name servers information normally present system configuration file loaded dns cache dns server started simply list ns records root corresponding records root dns servers unimaginatively called root servers net root servers net root server could logically single computer however since entire internet depends root servers powerful heavily replicated computers servers present multiple geographical locations reached using anycast routing packet delivered nearest instance destination address described anycast chap replication improves reliability performance root name server unlikely know address machine uw probably know name server uw either must know name server edu domain cs washington edu located returns name ip address part answer step local name server continues quest sends entire query edu name server edu servers net name server returns name server uw shown steps closer local name server sends query uw name server step domain name sought english department answer would found uw zone includes english department computer science department chosen run name server query returns name ip address uw computer science name server step finally local name server queries uw computer science name server step server authoritative domain cs washington edu must answer returns final answer step local name server forwards response flits cs vu nl step name resolved explore process using standard tools dig program installed unix systems example typing dig edu servers net robot cs washington edu send query robot cs washington edu edu servers net name server print result show information obtained step example learn name ip address uw name servers three technical points discuss long scenario first two different query mechanisms work host flits cs vu nl sends query local name server name server handles resolution behalf flits desired answer return return partial answers might helpful query seeking mechanism called recursive query 622 application layer hand root name server subsequent name server recursively continue query local name server returns partial answer moves next query local name server responsible continuing resolution issuing queries mechanism called iterative query one name resolution involve mechanisms example showed recursive query may always seem preferable many name servers especially root handle busy iterative queries put burden originator rationale local name server supporting recursive query providing service hosts domain hosts configured run full name server reach local one second point caching answers including partial answers returned cached way another cs vu nl host queries robot cs washington edu answer already known even better host queries different host domain say galah cs washington edu query sent directly authoritative name server similarly queries domains washington edu start directly washington edu name server using cached answers greatly reduces steps query improves performance original scenario sketched fact worst case occurs useful information cached however cached answers authoritative since changes made cs washington edu propagated caches world may know reason cache entries live long reason time live field included resource record tells remote name servers long cache records certain machine ip address years may safe cache information day volatile information might safer purge records seconds minute third issue transport protocol used queries responses udp dns messages sent udp packets simple format queries answers name servers used continue resolution go details format response arrives within short time dns client repeats query trying another server domain small number retries process designed handle case server well query response packet getting lost bit identifier included query copied response name server match answers corresponding query even multiple queries outstanding time even though purpose simple clear dns large complex distributed system comprised millions name servers work together forms key link human readable domain names ip addresses machines includes replication caching performance reliability designed highly robust sec dns domain name system covered security might imagine ability change name address mapping devastating consequences done maliciously reason security extensions called dnssec developed dns describe chap also application demand use names flexible ways example naming content resolving ip address nearby host content fits model searching downloading movie movie matters computer copy wanted ip address nearby computer copy movie content distribution networks one way accomplish mapping describe build dns later chapter sec electronic mail electronic mail commonly email around three decades faster cheaper paper mail email popular application since early days internet mostly used academia 1990s became known public large grew exponentially point number emails sent per day vastly number snail mail e paper letters forms network communication instant messaging voice ip calls expanded greatly use past decade email remains workhorse internet communication widely used within industry intracompany communication example allow far flung employees world cooperate complex projects unfortunately like paper mail majority email messages junk mail spam mcafee email like forms communication developed conventions styles informal low threshold use people would never dream calling even writing letter important person hesitate second send sloppily written email eliminating cues associated rank age gender email debates often focus content status email brilliant idea summer student impact dumb one executive vice president email full jargon btw way rotfl rolling floor laughing imho humble opinion many people also use little ascii symbols called smileys starting ubiquitous rotate book degrees clockwise symbol unfamiliar symbol emoticons help convey tone message spread terse forms communication instant messaging email protocols evolved period use first email systems simply consisted file transfer protocols convention first line message e file contained recipient address time 624 application layer went email diverged file transfer many features added ability send one message list recipients multimedia capabilities became important 1990s send messages images non text material programs reading email became much sophisticated shifting text based graphical user interfaces adding ability users access mail laptops wherever happen finally prevalence spam mail readers mail transfer protocols must pay attention finding removing unwanted email description email focus way mail messages moved users rather look feel mail reader programs nevertheless describing overall architecture begin user facing part email system familiar readers architecture services section provide overview email systems organized architecture email system shown consists two kinds subsystems user agents allow people read send email message transfer agents move messages source destination also refer message transfer agents informally mail servers mailbox email sender user agent mail submission message transfer agent smtp message transfer message transfer agent receiver user agent final delivery architecture email system user agent program provides graphical interface sometimes text command based interface lets users interact email system includes means compose messages replies messages display incoming messages organize messages filing searching discarding act sending new messages mail system delivery called mail submission user agent processing may done automatically anticipating user wants example incoming mail may filtered extract sec electronic mail deprioritize messages likely spam user agents include advanced features arranging automatic email responses wonderful vacation get back user agent runs computer user reads mail another program may run time message transfer agents typically system processes run background mail server machines intended always available job automatically move email system originator recipient smtp simple mail transfer protocol message transfer step smtp originally specified rfc revised become current rfc sends mail connections reports back delivery status errors numerous applications exist confirmation delivery important may even legal significance well honor email system reliable guess electronic subpoena got lost somewhere message transfer agents also implement mailing lists identical copy message delivered everyone list email addresses advanced features carbon copies blind carbon copies high priority email secret e encrypted email alternative recipients primary one currently available ability assistants read answer bosses email linking user agents message transfer agents concepts mailboxes standard format email messages mailboxes store email received user maintained mail servers user agents simply present users view contents mailboxes user agents send mail servers commands manipulate mailboxes inspecting contents deleting messages retrieval mail final delivery step architecture one user may use different user agents multiple computers access one mailbox mail sent message transfer agents standard format original format rfc revised current rfc extended support multimedia content international text scheme called mime discussed later people still refer internet email rfc though key idea message format distinction envelope contents envelope encapsulates message contains information needed transporting message destination address priority security level distinct message message transport agents use envelope routing post office message inside envelope consists two separate parts header body header contains control information user agents body entirely human recipient none agents care much envelopes messages illustrated 626 application layer united gizmo main st boston sept header mr daniel dumkopf willow lane white plains ny envelope name mr daniel dumkopf street willow lane city white plains state ny zip code priority urgent encryption none envelope united gizmo address main st location boston date sept subject invoice dear mr dumkopf computer records show still paid invoice 00 please send us check 00 promptly body subject invoice dear mr dumkopf computer records show still paid invoice 00 please send us check 00 promptly truly united gizmo truly united gizmo b message envelopes messages paper mail b electronic mail examine pieces architecture detail looking steps involved sending email one user another journey starts user agent user agent user agent program sometimes called email reader accepts variety commands composing receiving replying messages well manipulating mailboxes many popular user agents including google gmail microsoft outlook mozilla thunderbird apple mail vary greatly appearance user agents menu icondriven graphical interface requires mouse touch interface smaller mobile devices older user agents elm mh pine provide text based interfaces expect one character commands keyboard functionally least text messages typical elements user agent interface shown mail reader likely much flashier probably equivalent functions sec electronic mail user agent started usually present summary messages user mailbox often summary one line message sorted order highlights key fields message extracted message envelope header message summary message folders mail folders items inbox networks travel junk mail subject trudy andy djw amy n wong guido lazowska lazowska trudys nasty material rfid privacy seen request information paper acceptance new report search student graduate studies mar dear professor recently completed undergraduate studies distinction excellent university visiting mailbox search received today today mar mar mar mar mar message typical elements user agent interface seven summary lines shown example lines use subject received fields order display sent message received information formatted user friendly way rather displaying literal contents message fields based message fields thus people fail include subject field often discover responses emails tend get highest priority many fields indications possible icons next message subjects might indicate example unread mail envelope attached material paperclip important mail least judged sender exclamation point many sorting orders also possible common order messages based time received recent first indication whether message new already read user fields summary sort order customized user according preferences user agents must also able display incoming messages needed people read email often short preview message provided help users decide read previews may use small icons images describe contents message presentation processing 628 application layer includes reformatting messages fit display translating converting contents convenient formats e g digitized speech recognized text message read user decide called message disposition options include deleting message sending reply forwarding message another user keeping message later reference user agents manage one mailbox incoming mail multiple folders saved mail folders allow user save message according sender topic category filing done automatically user agent well user reads messages common example fields contents messages inspected used along feedback user previous messages determine message likely spam many isps companies run software labels mail important spam user agent file corresponding mailbox isp company advantage seeing mail many users may lists known spammers hundreds users received similar message probably spam presorting incoming mail probably legitimate probably spam user agent save users fair amount work separating good stuff junk popular spam generated collections compromised computers called botnets content depends live fake diplomas topical asia cheap drugs dubious product offers topical u unclaimed nigerian bank accounts still abound pills enlarging various body parts common everywhere filing rules constructed users rule specifies condition action example rule could say message received boss goes one folder immediate reading message particular mailing list goes another folder later reading several folders shown important folders inbox incoming mail filed elsewhere junk mail messages thought spam well explicit constructs like folders user agents provide rich capabilities search mailbox feature also shown search capabilities let users find messages quickly message buy vegemite someone sent last month email come long way days file transfer providers routinely support mailboxes gb stored mail details user interactions long period time sophisticated mail handling user agents search automatic forms processing makes possible manage large volumes email people send receive thousands messages year tools invaluable another useful feature ability automatically respond messages way one response forward incoming email different address example computer operated commercial paging service pages user sec electronic mail using radio satellite displays subject line pager autoresponders must run mail server user agent may run time may occasionally retrieve email factors user agent provide true automatic response however interface automatic responses usually presented user agent different example automatic response vacation agent program examines incoming message sends sender insipid reply hi vacation back 24th august talk replies also specify handle urgent matters interim people contact specific problems etc vacation agents keep track sent canned replies refrain sending person second reply pitfalls agents however example advisable send canned reply large mailing list let us turn scenario one user sending message another user one basic features user agents support yet discussed mail composition involves creating messages answers messages sending messages rest mail system delivery although text editor used create body message editors usually integrated user agent provide assistance addressing numerous header fields attached message example answering message email system extract originator address incoming email automatically insert proper place reply common features appending signature block bottom message correcting spelling computing digital signatures show message valid messages sent mail system standard format must created information supplied user agent important part message transfer envelope important part envelope destination address address must format message transfer agents deal expected form address user dns address since studied dns earlier chapter repeat material however worth noting forms addressing exist particular x addresses look radically different dns addresses x iso standard message handling systems one time competitor smtp smtp handily though x systems still used mostly outside u x addresses composed attribute value pairs separated slashes example c us st massachusetts l cambridge pa memorial dr cn ken smith address specifies country state locality personal address common name ken smith many attributes possible send email 630 application layer someone whose exact email address know provided know enough attributes e g company job title although x names considerably less convenient dns names issue moot user agents user friendly aliases sometimes called nicknames allow users enter select person name get correct email address consequently usually necessary actually type strange strings final point touch sending mail mailing lists let users send message list people single command two choices mailing list maintained might maintained locally user agent case user agent send separate message intended recipient alternatively list may maintained remotely message transfer agent messages expanded message transfer system effect allowing multiple users send list example group bird watchers mailing list called birders installed transfer agent meadowlark arizona edu message sent birders meadowlark arizona edu routed university arizona expanded individual messages mailing list members wherever world may users mailing list tell mailing list could well personal mailbox prof gabriel birders message formats turn user interface format email messages messages sent user agent must placed standard format handled message transfer agents first look basic ascii email using rfc latest revision original internet message format described rfc look multimedia extensions basic format rfc internet message format messages consist primitive envelope described part smtp rfc number header fields blank line message body header field logically consists single line ascii text containing field name colon fields value original rfc designed decades ago clearly distinguish envelope fields header fields although revised rfc completely redoing possible due widespread usage normal usage user agent builds message passes message transfer agent uses header fields construct actual envelope somewhat oldfashioned mixing message envelope sec electronic mail principal header fields related message transport listed field gives dns address primary recipient multiple recipients also allowed cc field gives addresses secondary recipients terms delivery distinction primary secondary recipients entirely psychological difference may important people involved important mail system term cc carbon copy bit dated since computers use carbon paper well established bcc blind carbon copy field like cc field except line deleted copies sent primary secondary recipients feature allows people send copies third parties without primary secondary recipients knowing header meaning email address es primary recipient cc email address es secondary recipient bcc email address es blind carbon copies person people created message sender email address actual sender received line added transfer agent along route return path used identify path back sender rfc header fields related message transport next two fields sender tell wrote sent message respectively need example business executive may write message assistant may one actually transmits case executive would listed field assistant sender field field required sender field may omitted field fields needed case message undeliverable must returned sender line containing received added message transfer agent along way line contains agent identity date time message received information used debugging routing system return path field added final message transfer agent intended tell get back sender theory information gathered received headers except name sender mailbox rarely filled typically contains sender address addition fields rfc messages may also contain variety header fields used user agents human recipients common ones listed self explanatory go much detail 632 application layer header meaning date date time message sent reply email address replies sent message id unique number referencing message later reply message id message reply references relevant message ids keywords user chosen keywords subject short summary message one line display fields used rfc message header reply field sometimes used neither person composing message person sending message wants see reply example marketing manager may write email message telling customers new product message sent assistant reply field lists head sales department answer questions take orders field also useful sender two email accounts wants reply go one message id automatically generated number used link messages together e g used reply field prevent duplicate delivery rfc document explicitly says users allowed invent optional headers private use convention since rfc headers start string x guaranteed future headers use names starting x avoid conflicts official private headers sometimes wiseguy undergraduates make fields like x fruit day x disease week legal although always illuminating headers comes message body users put whatever want people terminate messages elaborate signatures including quotations greater lesser authorities political statements disclaimers kinds e g xyz corporation responsible opinions fact even comprehend mime multipurpose internet mail extensions early days arpanet email consisted exclusively text messages written english expressed ascii environment early rfc format job completely specified headers left content entirely users 1990s worldwide use internet demand send richer content mail system meant approach longer adequate problems included sending receiving messages sec electronic mail languages accents e g french german non latin alphabets e g hebrew russian alphabets e g chinese japanese well sending messages containing text e g audio images binary documents programs solution development mime multipurpose internet mail extensions widely used mail messages sent across internet well describe content applications web browsing mime described rfcs 2047 basic idea mime continue use rfc format precursor rfc time mime proposed add structure message body define encoding rules transfer non ascii messages deviating rfc allowed mime messages sent using existing mail transfer agents protocols based rfc rfc changed sending receiving programs users could mime defines five new message headers shown first simply tells user agent receiving message dealing mime message version mime uses message containing mime version header assumed english plaintext message least one using ascii characters processed header meaning mime version identifies mime version content description human readable string telling message content id unique identifier content transfer encoding body wrapped transmission content type type format content message headers added mime content description header ascii string telling message header needed recipient know whether worth decoding reading message string says photo barbara hamster person getting message big hamster fan message probably discarded rather decoded high resolution color photograph content id header identifies content uses format standard message id header content transfer encoding tells body wrapped transmission network key problem time mime developed mail transfer smtp protocols expected ascii messages line exceeded characters ascii characters use bits bit byte binary data executable programs images use bits byte 634 application layer extended character sets guarantee data would transferred safely hence method carrying binary data made look like regular ascii mail message needed extensions smtp since development mime allow bit binary data transferred though even today binary data may always go mail system correctly unencoded mime provides five transfer encoding schemes plus escape new schemes case simplest scheme ascii text messages ascii characters use bits carried directly email protocol provided line exceeds characters next simplest scheme thing using bit characters values including allowed messages using bit encoding must still adhere standard maximum line length messages use true binary encoding arbitrary binary files use bits also adhere character line limit executable programs fall category nowadays mail servers negotiate send data binary bit encoding falling back ascii ends support extension ascii encoding binary data called base64 encoding scheme groups bits broken four bit units unit sent legal ascii character coding b followed lowercase letters digits finally respectively sequences indicate last group contained bits respectively carriage returns line feeds ignored inserted encoded character stream keep lines short enough arbitrary binary text sent safely using scheme albeit inefficiently encoding popular binary capable mail servers widely deployed still commonly seen messages almost entirely ascii non ascii characters base64 encoding somewhat inefficient instead encoding known quoted printable encoding used bit ascii characters encoded equals sign followed character value two hexadecimal digits control characters punctuation marks math symbols well trailing spaces also encoded finally valid reasons use one schemes possible specify user defined encoding content transfer encoding header last header shown really interesting one specifies nature message body impact well beyond email instance content downloaded web labeled mime types browser knows present content sent streaming media real time transports voice ip initially seven mime types defined rfc type one available subtypes type subtype separated slash sec electronic mail content type video mpeg since hundreds subtypes added along another type additional entries added time new types content developed list assigned types subtypes maintained online iana www iana org assignments media types types along examples commonly used subtypes given let us briefly go starting text text plain combination ordinary messages displayed received encoding processing option allows ordinary messages transported mime extra headers text html subtype added web became popular rfc allow web pages sent rfc email subtype extensible markup language text xml defined rfc xml documents proliferated development web study html xml sec type example subtypes description text plain html xml css text various formats image gif jpeg tiff pictures audio basic mpeg mp4 sounds video mpeg mp4 quicktime movies model vrml 3d model application octet stream pdf javascript zip data produced applications message http rfc822 encapsulated message multipart mixed alternative parallel digest combination multiple types mime content types example subtypes next mime type image used transmit still pictures many formats widely used storing transmitting images nowadays without compression several including gif jpeg tiff built nearly browsers many formats corresponding subtypes exist well audio video types sound moving pictures respectively please note video may include visual information sound movie sound transmitted video audio portions may transmitted separately depending encoding system used first video format defined one devised modestly named moving picture experts group mpeg others added since addition audio basic new audio type audio mpeg added rfc allow people email mp3 audio files video mp4 audio mp4 types signal video audio data stored newer mpeg format model type added content types intended describing 3d model data however widely used date 636 application layer application type catchall formats covered one types require application interpret data listed subtypes pdf javascript zip examples pdf documents javascript programs zip archives respectively user agents receive content use third party library external program display content display may may appear integrated user agent using mime types user agents gain extensibility handle new types application content developed significant benefit hand many new forms content executed interpreted applications presents dangers obviously running arbitrary executable program arrived via mail system friends poses security hazard program may sorts nasty damage parts computer access especially read write files use network less obviously document formats pose hazards formats pdf full blown programming languages disguise interpreted restricted scope bugs interpreter often allow devious documents escape restrictions besides examples many application subtypes many applications fallback used subtype known fitting octet stream subtype denotes sequence uninterpreted bytes upon receiving stream likely user agent display suggesting user copied file subsequent processing user presumably knows kind content last two types useful composing manipulating messages message type allows one message fully encapsulated inside another scheme useful forwarding email example complete rfc message encapsulated inside outer message rfc822 subtype used similarly common html documents encapsulated partial subtype makes possible break encapsulated message pieces send separately example encapsulated message long parameters make possible reassemble parts destination correct order finally multipart type allows message contain one part beginning end part clearly delimited mixed subtype allows part different type additional structure imposed many email programs allow user provide one attachments text message attachments sent using multipart type contrast mixed alternative subtype allows message included multiple times expressed two different media example message could sent plain ascii hmtl pdf properly designed user agent getting message would display according user preferences likely pdf would first choice possible second choice would html neither possible flat ascii sec electronic mail text would displayed parts ordered simplest complex help recipients pre mime user agents make sense message e g even pre mime user read flat ascii text alternative subtype also used multiple languages context rosetta stone thought early multipart alternative message two example subtypes parallel subtype used parts must viewed simultaneously example movies often audio channel video channel movies effective two channels played back parallel instead consecutively digest subtype used multiple messages packed together composite message example discussion groups internet collect messages subscribers send group periodically single multipart digest message example mime types may used email messages multimedia message shown birthday greeting transmitted alternative forms html audio file assuming receiver audio capability user agent play sound file example sound carried reference message external body subtype first user agent must fetch sound file birthday snd using ftp user agent audio capability lyrics displayed screen stony silence two parts delimited two hyphens followed software generated string specified boundary parameter note content type header occurs three positions within example top level indicates message multiple parts within part gives type subtype part finally within body second part required tell user agent kind external file fetch indicate slight difference usage used lowercase letters although headers case insensitive content transfer encoding similarly required external body encoded bit ascii message transfer described user agents mail messages ready look message transfer agents relay messages originator recipient mail transfer done smtp protocol simplest way move messages establish transport connection source machine destination machine transfer message smtp originally worked years however two different uses smtp differentiated first use mail submission step email architecture means user agents send messages mail system delivery second use transfer messages message transfer agents step 638 application layer alice cs washington edu bob ee uwa edu au mime version message id aa00747 cs washington edu content type multipart alternative boundary qwertyuiopasdfghjklzxcvbnm subject earth orbits sun integral number times preamble user agent ignores nice day qwertyuiopasdfghjklzxcvbnm content type text html p happy birthday br happy birthday br happy birthday dear b bob b br happy birthday p qwertyuiopasdfghjklzxcvbnm content type message external body access type anon ftp site bicycle cs washington edu directory pub name birthday snd content type audio basic content transfer encoding base64 qwertyuiopasdfghjklzxcvbnm multipart message containing html audio alternatives sequence delivers mail way sending receiving message transfer agent one hop final delivery accomplished different protocols describe next section section describe basics smtp protocol extension mechanism discuss used differently mail submission message transfer smtp simple mail transfer protocol extensions within internet email delivered sending computer establish tcp connection port receiving computer listening port mail server speaks smtp simple mail transfer protocol server accepts incoming connections subject security checks accepts messages delivery message delivered error report containing first part undeliverable message returned sender smtp simple ascii protocol weakness feature using ascii text makes protocols easy develop test debug sec electronic mail tested sending commands manually records messages easy read application level internet protocols work way e g http walk simple message transfer mail servers delivers message establishing tcp connection port sending machine operating client waits receiving machine operating server talk first server starts sending line text giving identity telling whether prepared receive mail client releases connection tries later server willing accept email client announces email coming going recipient exists destination server gives client go ahead send message client sends message server acknowledges checksums needed tcp provides reliable byte stream email sent email exchanged directions connection released sample dialog sending message including numerical codes used smtp shown lines sent client e sender marked c sent server e receiver marked first command client indeed meant helo various four character abbreviations hello one numerous advantages biggest competitor commands four characters lost mists time message sent one recipient one rcpt command used commands allowed send single message multiple receivers one individually acknowledged rejected even recipients rejected exist destination message sent ones finally although syntax four character commands client rigidly specified syntax replies less rigid numerical code really counts implementation put whatever string wants code basic smtp works well limited several respects include authentication means command example could give sender address pleases quite useful sending spam another limitation smtp transfers ascii messages binary data base64 mime content transfer encoding needed however encoding mail transmission uses bandwidth inefficiently issue large messages third limitation smtp sends messages clear encryption provide measure privacy prying eyes allow many problems related message processing addressed smtp revised extension mechanism mechanism mandatory part rfc standard use smtp extensions called esmtp extended smtp 640 application layer ee uwa edu au smtp service ready c helo abcd com cs washington edu says hello ee uwa edu au c mail alice cs washington edu sender ok c rcpt bob ee uwa edu au recipient ok c data send mail end line c alice cs washington edu c bob ee uwa edu au c mime version c message id aa00747 ee uwa edu au c content type multipart alternative boundary qwertyuiopasdfghjklzxcvbnm c subject earth orbits sun integral number times c c preamble user agent ignores nice day c c qwertyuiopasdfghjklzxcvbnm c content type text html c c p happy birthday c happy birthday c happy birthday dear bold bob bold c happy birthday c c qwertyuiopasdfghjklzxcvbnm c content type message external body c access type anon ftp c site bicycle cs washington edu c directory pub c name birthday snd c c content type audio basic c content transfer encoding base64 c qwertyuiopasdfghjklzxcvbnm c message accepted c quit ee uwa edu au closing connection sending message alice cs washington edu bob ee uwa edu au clients wanting use extension send ehlo message instead helo initially rejected server regular smtp server client proceed usual way ehlo accepted server replies extensions supports client may use extensions several common extensions shown figure gives keyword sec electronic mail used extension mechanism along description new functionality go extensions detail keyword description auth client authentication binarymime server accepts binary messages chunking server accepts large messages chunks size check message size trying send starttls switch secure transport tls see chap utf8smtp internationalized addresses smtp extensions get better feel smtp protocols described chapter work try cases first go machine connected internet unix linux system shell type telnet mail isp com substituting dns name isp mail server mail isp com windows xp system click start run type command dialog box vista windows machine may first install telnet program equivalent start command establish telnet e tcp connection port machine port smtp port see ports common protocols probably get response something like trying 30 66 connected mail isp com escape character mail isp com smail ready thu sept 13 first three lines telnet telling last line smtp server remote machine announcing willingness talk accept email find commands accepts type help point command sequence one possible server willing accept mail mail submission originally user agents ran computer sending message transfer agent setting required send message user agent talk local mail server using dialog described however setting longer usual case 642 application layer user agents often run laptops home pcs mobile phones always connected internet mail transfer agents run isp company servers always connected internet difference means user agent boston may need contact regular mail server seattle send mail message user traveling remote communication poses problem exactly tcp ip protocols designed support however isp company usually want remote user able submit messages mail server delivered elsewhere isp company running server public service addition kind open mail relay attracts spammers provides way launder original sender thus make message difficult identify spam given considerations smtp normally used mail submission auth extension extension lets server check credentials username password client confirm server providing mail service several differences way smtp used mail submission example port used preference port smtp server check correct format messages sent user agent information restricted use smtp mail submission please see rfc message transfer sending mail transfer agent receives message user agent deliver receiving mail transfer agent using smtp sender uses destination address consider message addressed bob ee uwa edu au mail server message delivered determine correct mail server contact dns consulted previous section described dns contains multiple types records including mx mail exchanger record case dns query made mx records domain ee uwa edu au query returns ordered list names ip addresses one mail servers sending mail transfer agent makes tcp connection port ip address mail server reach receiving mail transfer agent uses smtp relay message receiving mail transfer agent place mail user bob correct mailbox bob read later time local delivery step may involve moving message among computers large mail infrastructure delivery process mail travels initial final mail transfer agent single hop intermediate servers message transfer stage possible however delivery process occur multiple times one example described already message transfer agent sec electronic mail implements mailing list case message received list expanded message member list sent individual member addresses another example relaying bob may graduated also reachable via address bob alum mit edu rather reading mail multiple accounts bob arrange mail sent address forwarded bob ee uwa edu case mail sent bob alum mit edu undergo two deliveries first sent mail server alum mit edu sent mail server ee uwa edu au legs complete separate delivery far mail transfer agents concerned another consideration nowadays spam nine ten messages sent today spam mcafee people want spam hard avoid masquerades regular mail accepting message additional checks may made reduce opportunities spam message bob sent alice cs washington edu receiving mail transfer agent look sending mail transfer agent dns lets check ip address end tcp connection matches dns name generally receiving agent may look sending domain dns see mail sending policy information often given txt spf records may indicate checks made example mail sent cs washington edu may always sent host june cs washington edu sending mail transfer agent june problem checks fail mail probably forged fake sending address case discarded however passing checks imply mail spam checks merely ensure mail seems coming region network purports come idea spammers forced use correct sending address send mail makes spam easier recognize delete unwanted final delivery mail message almost delivered arrived bob mailbox remains transfer copy message bob user agent display step architecture task straightforward early internet user agent mail transfer agent ran machine different processes mail transfer agent simply wrote new messages end mailbox file user agent simply checked mailbox file new mail nowadays user agent pc laptop mobile likely different machine isp company mail server users want able access mail remotely wherever want access email work home pcs laptops business trips cybercafes called vacation also want able work offline 644 application layer reconnect receive incoming mail send outgoing mail moreover user may run several user agents depending computer convenient use moment several user agents may even running time setting job user agent present view contents mailbox allow mailbox remotely manipulated several different protocols used purpose smtp one smtp push based protocol takes message connects remote server transfer message final delivery achieved manner mailbox must continue stored mail transfer agent user agent may connected internet moment smtp attempts relay messages imap internet message access protocol one main protocols used final delivery imap internet message access protocol version protocol defined rfc use imap mail server runs imap server listens port user agent runs imap client client connects server begins issue commands listed first client start secure transport one used order keep messages commands confidential log otherwise authenticate server logged many commands list folders messages fetch messages even parts messages mark messages flags later deletion organize messages folders avoid confusion please note use term folder consistent rest material section user single mailbox made multiple folders however imap specification term mailbox used instead one user thus many imap mailboxes typically presented user folder imap many features ability address mail message number using attributes e g give first message alice searches performed server find messages satisfy certain criteria messages fetched client imap improvement earlier final delivery protocol pop3 post office protocol version specified rfc pop3 simpler protocol supports fewer features less secure typical usage mail usually downloaded user agent computer instead remaining mail server makes life easier server harder user easy read mail multiple computers plus user agent computer breaks email may lost permanently nonetheless still find pop3 use proprietary protocols also used protocol runs mail server user agent supplied company microsoft exchange mail system proprietary protocol sec electronic mail command description capability list server capabilities starttls start secure transport tls see chap login log server authenticate log method select select folder examine select read folder create create folder delete delete folder rename rename folder subscribe add folder active set unsubscribe remove folder active set list list available folders lsub list active folders status get status folder append add message folder check get checkpoint folder fetch get messages folder search find messages folder store alter message flags copy make copy message folder expunge remove messages flagged deletion uid issue commands using unique identifiers noop nothing close remove flagged messages close folder logout log close connection imap version commands webmail increasingly popular alternative imap smtp providing email service use web interface sending receiving mail widely used webmail systems include google gmail microsoft hotmail yahoo mail webmail one example software case mail user agent provided service using web architecture provider runs mail servers usual accept messages users smtp port however user agent different instead 646 application layer standalone program user interface provided via web pages means users use browser like access mail send new messages yet studied web brief description might come back follows user goes email web page provider form presented user asked login name password login name password sent server validates login successful server finds user mailbox builds web page listing contents mailbox fly web page sent browser display many items page showing mailbox clickable messages read deleted make interface responsive web pages often include javascript programs programs run locally client response local events e g mouse clicks also download upload messages background prepare next message display new message submission model mail submission happens using normal web protocols posting data url web server takes care injecting messages traditional mail delivery system described security standard web protocols used well protocols concern encrypting web pages whether content web page mail message world wide web web world wide web popularly known architectural framework accessing linked content spread millions machines internet years went way coordinate design high energy physics experiments switzerland application millions people think internet enormous popularity stems fact easy beginners use provides access rich graphical interface enormous wealth information almost every conceivable subject aardvarks zulus web began cern european center nuclear research initial idea help large teams often members half dozen countries time zones collaborate using constantly changing collection reports blueprints drawings photos documents produced experiments particle physics proposal web linked documents came cern physicist tim berners lee first text based prototype operational months later public demonstration given hypertext conference caught attention researchers led marc andreessen university illinois develop first graphical browser called mosaic released february sec world wide web rest say history mosaic popular year later andreessen left form company netscape communications corp whose goal develop web software next three years netscape navigator microsoft internet explorer engaged browser war one trying capture larger share new market frantically adding features thus bugs one 1990s 2000s web sites web pages web content called grew exponentially millions sites billions pages small number sites became tremendously popular sites companies behind largely define web people experience today examples include bookstore amazon started market capitalization billion flea market ebay 30b search google 150b social networking facebook private company valued 15b period many web companies became worth hundreds millions dollars overnight go bust practically next day turned hype even name called dot com era new ideas still striking rich web many come students example mark zuckerberg harvard student started facebook sergey brin larry page students stanford started google perhaps come next big thing cern signed agreement setting w3c world wide web consortium organization devoted developing web standardizing protocols encouraging interoperability sites bernerslee became director since several hundred universities companies joined consortium although books web shake stick best place get date information web naturally web consortium home page www w3 org interested readers referred links pages covering consortium numerous documents activities architectural overview users point view web consists vast worldwide collection content form web pages often called pages short page may contain links pages anywhere world users follow link clicking takes page pointed process repeated indefinitely idea one page point another called hypertext invented visionary professor electrical engineering vannevar bush bush long internet invented fact commercial computers existed although several universities produced crude prototypes filled large rooms less power modern pocket calculator 648 application layer pages generally viewed program called browser firefox internet explorer chrome examples popular browsers browser fetches page requested interprets content displays page properly formatted screen content may mix text images formatting commands manner traditional document forms content video programs produce graphical interface users interact picture page shown top left side page computer science engineering department university washington page shows text graphical elements mostly small read parts page associated links pages piece text icon image associated another page called hyperlink follow link user places mouse cursor linked portion page area causes cursor change shape clicks following link simply way telling browser fetch another page early days web links highlighted underlining colored text would stand nowadays creators web pages ways control look linked regions link might appear icon change appearance mouse passes creators page make links visually distinct provide usable interface document program database youtube com http request hyperlink http response web page web browser web server www cs washington edu google analytics com architecture web sec world wide web students department learn following link page information especially link accessed clicking circled area browser fetches new page displays partially shown bottom left dozens pages linked first page besides example every page comprised content machine first page machines halfway around globe user tell page fetching done browser without help user thus moving machines viewing content seamless basic model behind display pages also shown browser displaying web page client machine page fetched sending request one servers respond contents page request response protocol fetching pages simple text based protocol runs tcp case smtp called http hypertext transfer protocol content may simply document read disk result database query program execution page static page document every time displayed contrast generated demand program contains program dynamic page dynamic page may present differently time displayed example front page electronic store may different visitor bookstore customer bought mystery novels past upon visiting store main page customer likely see new thrillers prominently displayed whereas culinary minded customer might greeted new cookbooks web site keeps track likes story told shortly briefly answer involves cookies even culinarily challenged visitors figure browser contacts three servers fetch two pages cs washington edu youtube com google analytics com content different servers integrated display browser display entails range processing depends kind content besides rendering text graphics may involve playing video running script presents user interface part page case cs washington edu server supplies main page youtube com server supplies embedded video google analytics com server supplies nothing user see tracks visitors site say trackers later client side let us examine web browser side detail essence browser program display web page catch mouse clicks items displayed page item selected browser follows hyperlink fetches page selected 650 application layer web first created immediately apparent one page point another web page required mechanisms naming locating pages particular three questions answered selected page could displayed page called page located page accessed every page somehow assigned unique name would ambiguity identifying pages nevertheless problem would solved consider parallel people pages united states almost everyone social security number unique identifier two people supposed one nevertheless armed social security number way find owner address certainly way tell whether write person english spanish chinese web basically problems solution chosen identifies pages way solves three problems page assigned url uniform resource locator effectively serves page worldwide name urls three parts protocol also known scheme dns name machine page located path uniquely indicating specific page file read program run machine general case path hierarchical name models file directory structure however interpretation path server may may reflect actual directory structure example url page shown http www cs washington edu index html url consists three parts protocol http dns name host www cs washington edu path name index html user clicks hyperlink browser carries series steps order fetch page pointed let us trace steps occur example link selected browser determines url seeing selected browser asks dns ip address server www cs washington edu dns replies 208 88 browser makes tcp connection 208 88 port well known port http protocol sends http request asking page index html sec world wide web www cs washington edu server sends page http response example sending file index html page includes urls needed display browser fetches urls using process case urls include multiple embedded images also fetched www cs washington edu embedded video youtube com script google analytics com browser displays page index html appears tcp connections released requests servers short period many browsers display step currently executing status line bottom screen way performance poor user see due dns responding server responding simply page transmission slow congested network url design open ended sense straightforward browsers use multiple protocols get different kinds resources fact urls various protocols defined slightly simplified forms common ones listed name used example http hypertext html http www ee uwa edu rob https hypertext security https www bank com accounts ftp ftp ftp ftp cs vu nl pub minix readme file local file file usr suzanne prog c mailto sending email mailto johnuser acm org rtsp streaming media rtsp youtube com montypython mpg sip multimedia calls sip eve adversary com browser information plugins common url schemes let us briefly go list http protocol web native language one spoken web servers http stands hypertext transfer protocol examine detail later section ftp protocol used access files ftp internet file transfer protocol ftp predates web use three decades web makes easy obtain files placed numerous ftp servers throughout world providing simple clickable interface instead command line interface improved access information one reason spectacular growth web 652 application layer possible access local file web page using file protocol simply naming approach require server course works local files remote ones mailto protocol really flavor fetching web pages useful anyway allows users send email web browser browsers respond mailto link followed starting user mail agent compose message address field already filled rtsp sip protocols establishing streaming media sessions audio video calls finally protocol convention provides information browser example following plugins link cause browsers show page lists mime types handle browser extensions called plug ins short urls designed allow users navigate web run older protocols ftp email well newer protocols audio video provide convenient access local files browser information approach makes specialized user interface programs services unnecessary integrates nearly internet access single program web browser fact idea thought british physicist working research lab switzerland could easily pass plan dreamed software company advertising department despite nice properties growing use web turned inherent weakness url scheme url points one specific host sometimes useful reference page without simultaneously telling example pages heavily referenced desirable multiple copies far apart reduce network traffic way say want page xyz care get solve kind problem urls generalized uris uniform resource identifiers uris tell locate resource urls uris tell name resource find uris called urns uniform resource names rules writing uris given rfc different uri schemes use tracked iana many different kinds uris besides schemes listed schemes dominate web used today mime types able display new page page browser understand format allow browsers understand web pages web pages written standardized language called html lingua franca web discuss detail later chapter sec world wide web although browser basically html interpreter browsers numerous buttons features make easier navigate web button going back previous page button going forward next page operative user gone back button going straight user preferred start page browsers button menu item set bookmark given page another one display list bookmarks making possible revisit mouse clicks example shows html pages contain rich content elements simply text hypertext added generality pages need contain html page may consist video mpeg format document pdf format photograph jpeg format song mp3 format one hundreds file types since standard html pages may link browser problem hits page know interpret rather making browsers larger larger building interpreters rapidly growing collection file types browsers chosen general solution server returns page also returns additional information page information includes mime type page see pages type text html displayed directly pages built types mime type one built ones browser consults table mime types determine display page table associates mime types viewers two possibilities plug ins helper applications plug third party code module installed extension browser illustrated common examples plug ins pdf flash quicktime render documents play audio video plug ins run inside browser access current page modify appearance browser plug process helper application browser process process b browser plug b helper application browser set procedures plug ins must implement browser call plug ins example typically procedure 654 application layer browser base code calls supply plug data display set procedures plug interface browser specific addition browser makes set procedures available plug provide services plug ins typical procedures browser interface allocating freeing memory displaying message browser status line querying browser parameters plug used must installed usual installation procedure user go plug web site download installation file executing installation file unpacks plug makes appropriate calls register plug mime type browser associate plug browsers usually come preloaded popular plug ins way extend browser make use helper application complete program running separate process illustrated fig b since helper separate program interface arm length browser usually accepts name scratch file content file stored opens file displays contents typically helpers large programs exist independently browser example microsoft word powerpoint many helper applications use mime type application consequence considerable number subtypes defined use example application vnd ms powerpoint powerpoint files vnd denotes vendor specific formats way url point directly powerpoint file user clicks powerpoint automatically started handed content displayed helper applications restricted using application mime type adobe photoshop uses image x photoshop example consequently browsers configured handle virtually unlimited number document types changes modern web servers often configured hundreds type subtype combinations new ones often added every time new program installed source conflicts multiple plug ins helper applications available subtypes video mpeg happens last one register overwrites existing association mime type capturing type consequence installing new program may change way browser handles existing types browsers also open local files network sight rather fetching remote web servers however browser needs way determine mime type file standard method operating system associate file extension mime type typical configuration opening foo pdf open browser using application pdf plug opening bar doc open word application msword helper conflicts arise since many programs willing make eager handle say mpg installation programs intended sophisticated users often display checkboxes mime types extensions sec world wide web prepared handle allow user select appropriate ones thus overwrite existing associations accident programs aimed consumer market assume user clue mime type simply grab everything without regard previously installed programs done ability extend browser large number new types convenient also lead trouble browser windows pc fetches file extension exe realizes file executable program therefore helper obvious action run program however could enormous security hole malicious web site produce web page pictures say movie stars sports heroes linked virus single click picture causes unknown potentially hostile executable program fetched run user machine prevent unwanted guests like firefox browsers come configured cautious running unknown programs automatically users understand choices safe rather convenient server side much client side let us take look server side saw user types url clicks line hypertext browser parses url interprets part http next slash dns name look armed ip address server browser establishes tcp connection port server sends command containing rest url path page server server returns page browser display first approximation simple web server similar server server given name file look return via network cases steps server performs main loop accept tcp connection client browser get path page name file requested get file disk send contents file client release tcp connection modern web servers features essence web server simple case content contained file dynamic content third step may replaced execution program determined path returns contents however web servers implemented different design serve many requests per second one problem simple design accessing files 656 application layer often bottleneck disk reads slow compared program execution files may read repeatedly disk using operating system calls another problem one request processed time file may large requests blocked transferred one obvious improvement used web servers maintain cache memory n recently read files certain number gigabytes content going disk get file server checks cache file served directly memory thus eliminating disk access although effective caching requires large amount main memory extra processing time check cache manage contents savings time nearly always worth overhead expense tackle problem serving single request time one strategy make server multithreaded one design server consists front end module accepts incoming requests k processing modules shown k threads belong process processing modules access cache within process address space request comes front end accepts builds short record describing hands record one processing modules processing module thread disk request cache front end client response server multithreaded web server front end processing modules processing module first checks cache see file needed updates record include pointer file record processing module starts disk operation read cache possibly discarding cached file make room file comes disk put cache also sent back client advantage scheme one processing modules blocked waiting disk network operation complete thus consuming cpu time modules actively working requests k processing modules throughput much k times higher single threaded server course disk network limiting sec world wide web factor necessary multiple disks faster network get real improvement single threaded model modern web servers accept path names return files fact actual processing request get quite complicated reason many servers processing module performs series steps front end passes incoming request first available module carries using subset following steps depending ones needed particular request steps occur tcp connection secure transport mechanism ssl tls described chap established resolve name web page requested perform access control web page check cache fetch requested page disk run program build determine rest response e g mime type send return response client make entry server log step needed incoming request may contain actual name file program literal string may contain built shortcuts need translated simple example url http www cs vu nl empty file name expanded default file name usually index html another common rule map user onto user web directory rules used together thus home page one authors ast reached http www cs vu nl ast even though actual file name index html certain default directory also modern browsers specify configuration information browser software user default language e g italian english makes possible server select web page small pictures mobile device preferred language available general name expansion quite trivial might first appear due variety conventions map paths file directory programs step checks see access restrictions associated page met pages available general public determining whether client fetch page may depend identity client e g given usernames passwords location client dns ip space example page may restricted users inside company 658 application layer accomplished depends design server popular apache server instance convention place file called htaccess lists access restrictions directory restricted page located steps involve getting page whether taken cache depends processing rules example pages created running programs always cached might produce different result time run even files occasionally checked see contents changed old contents removed cache page requires program run also issue setting program parameters input data come path parts request step determining parts response accompany contents page mime type one example may come file extension first words file program output configuration file possibly sources step returning page across network increase performance single tcp connection may used client server multiple page fetches reuse means logic needed map request shared connection return response associated correct request step makes entry system log administrative purposes along keeping important statistics logs later mined valuable information user behavior example order people access pages cookies navigating web described far involves series independent page fetches concept login session browser sends request server gets back file server forgets ever seen particular client model perfectly adequate retrieving publicly available documents worked well web first created however suited returning different pages different users depending already done server behavior needed many ongoing interactions web sites example web sites e g newspapers require clients register possibly pay money use raises question servers distinguish requests users previously registered everyone else second example e commerce user wanders around electronic store tossing items virtual shopping cart time time server keep track contents cart third example customized web portals yahoo users set personalized sec world wide web detailed initial page information want e g stocks favorite sports teams server display correct page know user first glance one might think servers could track users observing ip addresses however idea work many users share computers especially home ip address merely identifies computer user even worse many companies use nat outgoing packets bear ip address users computers behind nat box look server many isps assign ip addresses customers dhcp ip addresses change time server might suddenly look like neighbor reasons server use ip addresses track users problem solved oft critized mechanism called cookies name derives ancient programmer slang program calls procedure gets something back may need present later get work done sense unix file descriptor windows object handle considered cookie cookies first implemented netscape browser specified rfc client requests web page server supply additional information form cookie along requested page cookie rather small named string kb server associate browser association thing user much closer useful ip address browsers store offered cookies interval usually cookie directory client disk cookies persist across browser invocations unless user disabled cookies cookies strings executable programs principle cookie could contain virus since cookies treated data official way virus actually run damage however always possible hacker exploit browser bug cause activation cookie may contain five fields shown domain tells cookie came browsers supposed check servers lying domain domain store cookies per client path path server directory structure identifies parts server file tree may use cookie often means whole tree content field takes form name value name value anything server wants field cookie content stored expires field specifies cookie expires field absent browser discards cookie exits cookie called nonpersistent cookie time date supplied cookie said persistent cookie kept expires expiration times given greenwich mean time remove cookie client hard disk server sends expiration time past 660 domain application layer path content expires secure toms casino com customerid 10 17 yes jills store com cart 00501 07031 13721 14 aportal com prefs stk csco orcl spt jets 12 23 sneaky com userid 12 23 examples cookies finally secure field set indicate browser may return cookie server using secure transport namely ssl tls describe chap feature used e commerce banking secure applications seen cookies acquired used browser sends request page web site checks cookie directory see cookies placed domain request going cookies placed domain domain included request message server gets interpret way wants let us examine possible uses cookies first cookie set toms casino com used identify customer client returns next week throw away money browser sends cookie server knows armed customer id server look customer record database use information build appropriate web page display depending customer known gambling habits page might consist poker hand listing today horse races slot machine second cookie came jills store com scenario client wandering around store looking good things buy finds bargain clicks server adds shopping cart maintained server also builds cookie containing product code item sends cookie back client client continues wander around store clicking new pages cookie returned server every new page request purchases accumulate server adds cookie finally client clicks proceed checkout cookie containing full list purchases sent along request way server knows exactly customer wants buy third cookie web portal customer clicks link portal browser sends cookie tells portal build page containing stock prices cisco oracle new york jets football results since cookie kb plenty room detailed preferences concerning newspaper headlines local weather special offers etc sec world wide web controversial use cookies track online behavior users lets web site operators understand users navigate sites advertisers build profiles ads sites particular user viewed controversy users typically unaware activity tracked even detailed profiles across seemingly unrelated web sites nonetheless web tracking big business doubleclick provides tracks ads ranked among busiest web sites world web monitoring company alexa google analytics tracks site usage operators used half busiest 000 sites web easy server track user activity cookies suppose server wants keep track many unique visitors many pages visitor looked leaving site first request comes accompanying cookie server sends back cookie containing counter subsequent page views site send cookie back server time counter incremented sent back client keeping track counters server see many people give seeing first page many look two pages tracking browsing behavior users across sites slightly complicated works like advertising agency say sneaky ads contacts major web sites places ads clients products pages pays site owners fee instead giving sites ad gif file place page gives url add page url hands contains unique number path http www sneaky com gif user first visits page p containing ad browser fetches html file browser inspects html file sees link image file www sneaky com sends request image gif file containing ad returned along cookie containing unique user id sneaky records fact user id visited page p easy since path requested gif referenced page p course actual ad may appear thousands pages time different name sneaky probably collects fraction penny product manufacturer time ships ad later user visits another web page containing sneaky ads browser first fetches html file server sees link say http www sneaky com gif page requests file since already cookie domain sneaky com browser includes sneaky cookie containing user id sneaky knows second page user visited due course sneaky build detailed profile user browsing habits even though user never clicked ads course yet user name although ip address 662 application layer may enough deduce name databases however user ever supplies name site cooperating sneaky complete profile along name available sale anyone wants buy sale information may profitable enough sneaky place ads web sites thus collect information sneaky wants supersneaky ad need classical banner ad ad consisting single pixel background color thus invisible exactly effect banner ad requires browser go fetch pixel gif image send cookies originating pixel domain cookies become focal point debate online privacy tracking behavior like insidious part whole business many users completely unaware information collection may even think safe click ads reason cookies track users across sites considered many spyware look cookies already stored browser browsers display information along current privacy preferences might surprised find names email addresses passwords well opaque identifiers hopefully find credit card numbers potential abuse clear maintain semblance privacy users configure browsers reject cookies however cause problems many web sites work properly without cookies alternatively browsers let users block third party cookies third party cookie one different site main page fetched example sneaky com cookie used interacting page p completely different web site blocking cookies helps prevent tracking across web sites browser extensions also installed provide fine grained control cookies used rather used debate continues many companies developing privacy policies limit share information prevent abuse course policies simply companies say handle information example may use information collected conduct business might selling information static web pages basis web transferring web pages server client simplest form web pages static files sitting server present way time fetched viewed static mean pages inert browser however page containing video static web page mentioned earlier lingua franca web pages written html home pages teachers usually static html pages sec world wide web home pages companies usually dynamic pages put together web design company section take brief look static html pages foundation later material readers already familiar html skip ahead next section describe dynamic content web services html hypertext markup language html hypertext markup language introduced web allows users produce web pages include text graphics video pointers web pages html markup language language describing documents formatted term markup comes old days copyeditors actually marked documents tell printer days human fonts use markup languages thus contain explicit commands formatting example html b means start boldface mode b means leave boldface mode latex tex examples markup languages well known academic authors key advantage markup language one explicit markup separates content presented writing browser straightforward browser simply understand markup commands apply content embedding markup commands within html file standardizing makes possible web browser read reformat web page crucial page may produced window bit color high end computer may displayed window mobile phone certainly possible write documents like plain text editor many people also possible use word processors special html editors work correspondingly give user less direct control details final result simple web page written html presentation browser given web page consists head body enclosed html html tags formatting commands although browsers complain tags missing seen head bracketed head head tags body bracketed body body tags strings inside tags called directives html tags format use something mark beginning something something mark end tags either lowercase uppercase thus head head mean thing lower case best compatibility actual layout html document irrelevant html parsers ignore extra spaces carriage returns since reformat text make fit current display area consequently white space added make html documents 664 application layer readable something badly need another consequence blank lines used separate paragraphs simply ignored explicit tag required tags named parameters called attributes example img tag used including image inline text two attributes src alt first attribute gives url image html standard specify image formats permitted practice browsers support gif jpeg files browsers free support formats extension two edged sword user accustomed browser supports say tiff files may include web pages later surprised browsers ignore wonderful art second attribute gives alternate text use image displayed tag html standard gives list permitted parameters mean parameter named order parameters given significant technically html documents written iso latin character set users whose keyboards support ascii escape sequences present special characters e list special characters given standard begin ampersand end semicolon example nbsp produces space egrave produces e eacute produces e since special meanings expressed escape sequences lt gt amp respectively main item head title delimited title title certain kinds metainformation may also present though none present example title displayed page browsers use label page window several headings used heading generated hn tag n digit range thus h1 important heading h6 least important one browser render appropriately screen typically lower numbered headings displayed larger heavier font browser may also choose use different colors level heading usually h1 headings large boldface least one blank line contrast h2 headings smaller font less space tags b used enter boldface italics mode respectively hr tag forces break draws horizontal line across display p tag starts paragraph browser might display inserting blank line indentation example interestingly p tag exists mark end paragraph often omitted lazy html programmers html provides various mechanisms making lists including nested lists unordered lists like ones started ul li used mark start items also ol tag starts ordered list sec world wide web html head title amalgamated widget inc title head body h1 welcome awi home page h1 img src http www widget com images logo gif alt awi logo br happy chosen visit b amalgamated widget b home page hope find information need p links information many fine products order electronically www telephone email p hr h2 product information h2 ul li href http widget com products big big widgets li li href http widget com products little little widgets li ul h2 contact information h2 ul li telephone 800 widgets li li email info amalgamated widget com li ul body html welcome awi home page happy chosen visit amalgamated widget home page hope find information need links information many fine products order electronically www telephone email product information big widgets little widgets contact information telephone 800 widgets email info amalgamated widget com b html sample web page b formatted page 666 application layer individual items unordered lists often appear bullets front items ordered lists numbered browser finally come hyperlinks examples seen using anchor tags tag various parameters important href linked url text displayed selected hyperlink followed new page also permitted link elements example image given tags using img case image displayed clicking activates hyperlink many html tags attributes seen simple example instance tag take parameter name plant hyperlink allowing hyperlink point middle page useful example web pages start clickable table contents clicking item table contents user jumps corresponding section page example different tag br forces browser break start new line probably best way understand tags look action pick web page look html browser see page put together browsers view source menu item something similar selecting item displays current page html source instead formatted output sketched tags existed early web html keeps evolving shows features added successive versions html html refers version html used introduction web html versions appeared rapid succession space years web exploded html period almost ten years passed path standarization next major version html became clear major upgrade consolidates ways browsers handle rich content html effort ongoing expected produce standard earliest standards notwithstanding major browsers already support html functionality progression html versions adding new features people wanted handle nonstandard ways e g plug ins became standard example html html tables added html html table consists one rows consisting one table cells contain wide range material e g text images tables html authors needing table resort ad hoc methods including image showing table html new features added included accessibility features handicapped users object embedding generalization img tag objects also embedded pages support scripting languages allow dynamic content sec world wide web item html html html html html hyperlinks x x x x x images x x x x x lists x x x x x active maps images x x x x forms x x x x equations x x x toolbars x x x tables x x x accessibility features x x object embedding x x style sheets x x scripting x x video audio x inline vector graphics x xml representation x background threads x browser storage x drawing canvas x differences html versions html includes many features handle rich media routinely used web video audio included pages played browser without requiring user install plug ins drawings built browser vector graphics rather using bitmap image formats like jpeg gif also support running scripts browsers background threads computation access storage features help support web pages like traditional applications user interface documents direction web heading input forms one important capability discussed yet input html basically one way users could fetch pages information providers difficult send information back way quickly became apparent need two way traffic allow orders products placed via web pages registration cards filled online search terms entered much much 668 application layer sending input user server via browser requires two kinds support first requires http able carry data direction describe done later section uses post method second requirement able present user interface elements gather package input forms included functionality html forms contain boxes buttons allow users fill information make choices send information back page owner forms written like parts html seen example note forms still static content exhibit behavior regardless using dynamic content cover later provides sophisticated ways gather input sending program whose behavior may depend browser environment like forms one enclosed form form tags attributes tag tell data input case using post method send data specified url text enclosed tag displayed usual tags e g b allowed form let author page control look form screen three kinds input boxes used form uses input tag variety parameters determining size nature usage box displayed common forms blank fields accepting user text boxes checked submit buttons cause data returned server first kind input box text box follows text name box characters wide expects user type string stored variable customer next line form asks user street address characters wide comes line asking city state country since p tags used fields browser displays one line instead separate paragraphs fit far browser concerned one paragraph contains six items three strings alternating three boxes next line asks credit card number expiration date transmitting credit card numbers internet done adequate security measures taken discuss chap following expiration date encounter new feature radio buttons used choice must made among two alternatives intellectual model car radio half dozen buttons choosing stations clicking one button turns ones group visual presentation browser widget size also uses two radio buttons two groups distinguished name parameter static scoping using something like radiobutton radiobutton value parameters used indicate radio button pushed example depending credit card options user chosen variable cc set either string mastercard string visacard sec world wide web html head title awi customer ordering form title head body h1 widget order form h1 form action http widget com cgi bin order cgi method post p name input name customer size p p street address input name address size p p city input name city size state input name state size country input name country size p p credit card input name cardno size expires input name expires size c input name cc type radio value mastercard visa input name cc type radio value visacard p p widget size big input name product type radio value expensive little input name product type radio value cheap ship express courier input name express type checkbox p p input type submit value submit order p thank ordering awi widget best widget money buy form body html widget order form name street address city state credit card widget size big expires little c country visa ship express courier submit order thank ordering awi widget best widget money buy b html order form b formatted page two sets radio buttons come shipping option represented box type checkbox either unlike radio buttons exactly one set must chosen box type checkbox independently others 670 application layer finally come submit button value string label button displayed user clicks submit button browser packages collected information single long line sends back server url provided part form tag simple encoding used used separate fields used represent space example form line might look like contents customer john doe address main st city white plains state ny country usa cardno expires 14 cc mastercard product cheap express possible response browser server information filled user string sent back server one line broken three lines page wide enough server make sense string likely passing information program process discuss done next section also types input shown simple example two types password textarea password box text box default type need named except characters displayed typed textarea box also text box except contain multiple lines long lists choice must made select select tags provided bracket list alternatives list often rendered drop menu semantics radio buttons unless multiple parameter given case semantics checkboxes finally ways indicate default initial values user change example text box given value field contents displayed form user edit erase css cascading style sheets original goal html specify structure document appearance example h1 deborah photos h1 instructs browser emphasize heading say anything typeface point size color left browser knows properties display e g many pixels however many web page designers wanted absolute control pages appeared new tags added html control appearance font face helvetica size color red deborah photos font sec world wide web also ways added control positioning screen accurately trouble approach tedious produces bloated html portable although page may render perfectly browser developed may complete mess another browser another release browser different screen resolution better alternative use style sheets style sheets text editors allow authors associate text logical style instead physical style example initial paragraph instead italic text appearance style defined separately way author decides change initial paragraphs point italics blue point boldface shocking pink requires changing one definition convert entire document css cascading style sheets introduced style sheets web html though widespread use browser support take css defines simple language describing rules control appearance tagged content let us look example suppose awi wants snazzy web pages navy text arial font white background level headings extra larger text level respectively css definition gives rules body background color linen color navy font family arial h1 font size h2 font size css example seen style definitions compact line selects element applies gives values properties properties element apply defaults html elements contains thus style body sets style paragraphs text body also convenient shorthands color names e g red style parameters defined filled defaults browser behavior makes style sheet definitions optional reasonable presentation occur without style sheets placed html file e g using style tag common place separate file reference example head tag awi page modified refer style sheet file awistyle css shown example also shows mime type css files text css head title amalgamated widget inc title link rel stylesheet type text css href awistyle css head including css style sheet 672 application layer strategy two advantages first lets one set styles applied many pages web site organization lends consistent appearance pages even developed different authors different times allows look entire site changed editing one css file html method compared include file c program changing one macro definition changes program files include header second advantage html files downloaded kept small browser download one copy css file pages reference need download new copy definitions along web page dynamic web pages web applications static page model used far treats pages multimedia documents conveniently linked together fitting model early days web vast amounts information put online nowadays much excitement around web using applications services examples include buying products e commerce sites searching library catalogs exploring maps reading sending email collaborating documents new uses like traditional application software e g mail readers word processors twist applications run inside browser user data stored servers internet data centers use web protocols access information via internet browser display user interface advantage approach users need install separate application programs user data accessed different computers backed service operator proving successful rivaling traditional application software course fact applications offered free large providers helps model prevalent form cloud computing computing moves individual desktop computers shared clusters servers internet act applications web pages longer static dynamic content needed example page library catalog reflect books currently available books checked thus available similarly useful stock market page would allow user interact page see stock prices different periods time compute profits losses examples suggest dynamic content generated programs running server browser places section examine two cases turn general situation shown example consider map service lets user enter street address presents corresponding map location given request location web server must use program create page shows map location database streets geographic information action shown steps request step sec world wide web causes program run server program consults database generate appropriate page step returns browser step web page program program db program web browser web server dynamic pages dynamic content however page returned may contain programs run browser map example program would let user find routes explore nearby areas different levels detail would update page zooming directed user step handle interactions program may need data server case program send request server step retrieve information database step return response step program continue updating page step requests responses happen background user may even aware page url title typically change including client side programs page present responsive interface server side programs alone server side dynamic web page generation let us look case server side content generation detail simple situation server side processing necessary use forms consider user filling awi order form b clicking submit order button user clicks request sent server url specified form post http widget com cgi bin order cgi case along contents form filled user data must given program script process thus url identifies program run data provided program input case processing would involve entering order awi internal system updating customer records charging credit card page returned request depend happens processing fixed like static page order succeeds page returned might give expected shipping date unsuccessful returned page might say widgets requested stock credit card valid reason 674 application layer exactly server runs program instead retrieving file depends design web server specified web protocols interface proprietary browser need know details far browser concerned simply making request fetching page nonetheless standard apis developed web servers invoke programs existence interfaces makes easier developers extend different servers web applications briefly look two apis give sense entail first api method handling dynamic page requests available since beginning web called cgi common gateway interface defined rfc cgi provides interface allow web servers talk back end programs scripts accept input e g forms generate html pages response programs may written whatever language convenient developer usually scripting language ease development pick python ruby perl favorite language convention programs invoked via cgi live directory called cgi bin visible url server maps request directory program name executes program separate process provides data sent request input program output program gives web page returned browser example program order cgi invoked input form encoded shown parse parameters process order useful convention program return html order form form input provided way program sure know representation form second api look quite different approach embed little scripts inside html pages executed server generate page popular language writing scripts php php hypertext preprocessor use server understand php browser understand css interpret web pages style sheets usually servers identify web pages containing php file extension php rather html htm php simpler use cgi example works forms see example top part figure contains normal html page simple form time form tag specifies action php invoked handle parameters user submits form page displays two text boxes one request name one request age two boxes filled form submitted server parses type string sent back putting name name variable age age variable starts process action php file shown b reply processing file sec world wide web php commands executed user filled barbara boxes html file sent back one given c thus handling forms becomes extremely simple using php html body form action action php method post p please enter name input type text name name p p please enter age input type text name age p input type submit form body html html body h1 reply h1 hello php echo name prediction next year php echo age body html b html body h1 reply h1 hello barbara prediction next year body html c web page containing form b php script handling output form c output php script inputs barbara respectively although php easy use actually powerful programming language interfacing web server database variables strings arrays control structures found c much powerful printf php open source code freely available widely used designed specifically work well apache also open source world widely used web server information php see valade seen two different ways generate dynamic html pages cgi scripts embedded php several others choose jsp javaserver pages similar php except dynamic part written 676 application layer java programming language instead php pages using technique file extension jsp asp net active server pages net microsoft version php javaserver pages uses programs written microsoft proprietary net networked application framework generating dynamic content pages using technique extension aspx choice among three techniques usually politics open source vs microsoft technology since three languages roughly comparable client side dynamic web page generation php cgi scripts solve problem handling input interactions databases server accept incoming information forms look information one databases generate html pages results none respond mouse movements interact users directly purpose necessary scripts embedded html pages executed client machine rather server machine starting html scripts permitted using tag script technologies used produce interactive web pages broadly referred dynamic html popular scripting language client side javascript take quick look despite similarity names javascript almost nothing java programming language like scripting languages high level language example single line javascript possible pop dialog box wait text input store resulting string variable high level features like make javascript ideal designing interactive web pages hand fact mutating faster fruit fly trapped x ray machine makes extremely difficult write javascript programs work platforms maybe day stabilize example program javascript consider like displays form asking name age predicts old person next year body almost php example main difference declaration submit button assignment statement assignment statement tells browser invoke response script button click pass form parameter completely new declaration javascript function response head html file area normally reserved titles background colors function extracts value name field form stores variable person string also extracts value age field converts integer using eval function adds stores result years opens document output four sec world wide web html head script language javascript type text javascript function response test form var person test form name value var years eval test form age value document open document writeln html body document writeln hello person br document writeln prediction next year years document writeln body html document close script head body form please enter name input type text name name p please enter age input type text name age p input type button value submit onclick response form form body html use javascript processing form writes using writeln method closes document document html file seen various html tags browser displays document screen important understand php javascript look similar embed code html files processed totally differently php example user clicked submit button browser collects information long string sends server request php page server loads php file executes php script embedded produce new html page page sent back browser display browser even sure produced program processing shown steps fig javascript example submit button clicked browser interprets javascript function contained page work done locally inside browser contact server processing shown steps b consequence result displayed virtually instantaneously whereas php delay several seconds resulting html arrives client 678 application layer browser server browser server user user php module javascript b server side scripting php b client side scripting javascript difference mean javascript better php uses completely different php implication jsp asp used interaction database server needed javascript clientside languages mention vbscript used interaction user client computer certainly possible combine see shortly javascript way make web pages highly interactive alternative windows platforms vbscript based visual basic another popular method across platforms use applets small java programs compiled machine instructions virtual computer called jvm java virtual machine applets embedded html pages applet applet interpreted jvm capable browsers java applets interpreted rather directly executed java interpreter prevent bad things least theory practice applet writers found nearly endless stream bugs java libraries exploit microsoft answer sun java applets allowing web pages hold activex controls programs compiled x86 machine language executed bare hardware feature makes vastly faster flexible interpreted java applets anything program internet explorer sees activex control web page downloads verifies identity executes however downloading running foreign programs raises enormous security issues discuss chap since nearly browsers interpret java programs javascript designer wants make highly interactive web page choice least two techniques portability multiple platforms issue activex addition general rule javascript programs easier write java applets execute faster activex controls run fastest also since browsers implement exactly jvm two browsers implement version javascript java applets portable javascript programs information javascript many books many often pages see example flanagan sec world wide web ajax asynchronous javascript xml compelling web applications need responsive user interfaces seamless access data stored remote web servers scripting client e g javascript server e g php basic technologies provide pieces solution technologies commonly used several key technologies combination called ajax asynchronous javascript xml many full featured web applications google gmail maps docs written ajax ajax somewhat confusing language set technologies work together enable web applications every bit responsive powerful traditional desktop applications technologies html css present information pages dom document object model change parts pages viewed xml extensible markup language let programs exchange application data server asynchronous way programs send retrieve xml data javascript language bind functionality together quite collection go piece see contributes already seen html css standards describing content displayed program produce html css use web browser display engine dom document object model representation html page accessible programs representation structured tree reflects structure html elements instance dom tree html given root html element represents entire html block element parent body element turn parent form element form two attributes drawn right hand side one form method post one form action url request element three children reflecting two paragraph tags one input tag contained within form bottom tree leaves contain either elements literals text strings significance dom model provides programs straightforward way change parts page need rewrite entire page node contains change needs replaced change made browser correspondingly update display example image part page changed dom browser update image without changing parts page already seen dom action javascript example added lines 680 application layer elements html body form child elements attributes right action action php method post input p p please enter name input type txt name age please enter age input type submit type txt name age dom tree html document element cause new lines text appear bottom browser window dom powerful method producing pages evolve third technology xml extensible markup language language specifying structured content html mixes content formatting concerned presentation information however web applications become common increasing need separate structured content presentation example consider program searches web best price book needs analyze many web pages looking item title price web pages html difficult program figure title price reason w3c developed xml bray et al allow web content structured automated processing unlike html defined tags xml user define tags simple example xml document given defines structure called book list list books book three fields title author year publication structures extremely simple permitted structures repeated fields e g multiple authors optional fields e g url audio book alternative fields e g url bookstore print url auction site print example three fields indivisible entity also permitted subdivide fields example author field could done follows give finer grained control searching formatting author first name george first name last name zipf last name author field subdivided subfields subsubfields arbitrarily deeply sec world wide web xml version book list book title human behavior principle least effort title author george zipf author year year book book title mathematical theory communication title author claude e shannon author author warren weaver author year year book book title nineteen eighty four title author george orwell author year year book book list simple xml document file define book list containing three books well suited transporting information programs running browsers servers says nothing display document web page program consumes information judges fine year books might output html titles marked italic text alternatively language called xslt extensible stylesheet language transformations used define xml transformed html xslt like css much powerful spare details advantage expressing data xml instead html easier programs analyze html originally written manually often still lot bit sloppy sometimes closing tags like p left tags matching closing tag like br still tags may nested improperly case tag attribute names vary browsers best work probably intended xml stricter cleaner definition tag names attributes always lowercase tags must always closed reverse order opened indicate clearly empty tag corresponding close attribute values must enclosed quotation marks precision makes parsing easier unambiguous html even defined terms xml approach called xhtml extended hypertext markup language basically 682 application layer picky version html xhtml pages must strictly conform xml rules otherwise accepted browser shoddy web pages inconsistencies across browsers xml intent produce pages better programs case web applications process xhtml around since slow catch people produce html see need xhtml browser support lagged html defined page represented either html xhtml aid transition eventually xhtml replace html long time transition complete xml also proved popular language communication programs communication carried http protocol described next section called web service particular soap simple object access protocol way implementing web services performs rpc programs language system independent way client constructs request xml message sends server using http protocol server sends back reply xml formatted message way applications heterogeneous platforms communicate getting back ajax point simply xml useful format exchange data programs running browser server however provide responsive interface browser sending receiving data must possible scripts perform asynchronous block display awaiting response request example consider map scrolled browser notified scroll action script map page may request map data server view map near edge data interface freeze data fetched interface would win user awards instead scrolling continue smoothly data arrive script notified use data goes well new map data fetched needed modern browsers support model communication final piece puzzle scripting language holds ajax together providing access list technologies cases language javascript alternatives vbscript presented simple example javascript earlier fooled simplicity javascript many quirks full blown programming language power c java variables strings arrays objects functions usual control structures also interfaces specific browser web pages javascript track mouse motion objects screen makes easy make menu suddenly appear leads lively web pages use dom access pages manipulate html xml perform asynchronous http communication leaving subject dynamic pages let us briefly summarize technologies covered far relating single figure complete web pages generated fly various scripts server sec world wide web machine scripts written server extension languages like php jsp asp net run separate cgi processes thus written language options shown client machine java virtual machine vb script interpreter html css xml interpreter java script interpreter server machine web browser process helper application web browser process html css etc xml php asp cgi script jsp plug ins various technologies used generate dynamic pages web pages received browser treated normal pages html css mime types displayed plug ins run browser helper applications run outside browser installed extend mime types supported browser dynamic content generation also possible client side programs embedded web pages written javascript vbscript java languages programs perform arbitrary computations update display ajax programs web pages asynchronously exchange xml kinds data server model supports rich web applications look like traditional applications except run inside browser access information stored servers internet http hypertext transfer protocol understanding web content applications time look protocol used transport information web servers clients http hypertext transfer protocol specified rfc http simple request response protocol normally runs tcp specifies messages clients may send servers responses get back return request response headers given ascii like smtp contents given mime like format also like smtp simple model partly responsible early success web made development deployment straightforward section look important properties http used nowadays however getting details note way 684 application layer used internet evolving http application layer protocol runs top tcp closely associated web covering chapter however another sense http becoming like transport protocol provides way processes communicate content across boundaries different networks processes web browser web server media player could use http talk server request album information antivirus software could use http download latest updates developers could use http fetch project files consumer electronics products like digital photo frames often use embedded http server interface outside world machine machine communication increasingly runs http example airline server might use soap xml rpc http contact car rental server make car reservation part vacation package trends likely continue along expanding use http connections usual way browser contact server establish tcp connection port server machine although procedure formally required value using tcp neither browsers servers worry handle long messages reliability congestion control matters handled tcp implementation early web http connection established single request sent single response sent back tcp connection released world typical web page consisted entirely html text method adequate quickly average web page grew contain large numbers embedded links content icons eye candy establishing separate tcp connection transport single icon became expensive way operate observation led http supports persistent connections possible establish tcp connection send request get response send additional requests get additional responses strategy also called connection reuse amortizing tcp setup startup release costs multiple requests relative overhead due tcp reduced per request also possible pipeline requests send request response request arrived performance difference three cases shown part shows three requests one separate connection let us suppose represents web page two embedded images server urls images determined main page fetched fetched main page nowadays typical page around objects must fetched present would make figure far big use two embedded objects sec world wide web connection setup http request connection setup http response connection setup pipelined requests connection setup time connection setup b c http multiple connections sequential requests b persistent connection sequential requests c persistent connection pipelined requests b page fetched persistent connection tcp connection opened beginning three requests sent one connection closed observe fetch completes quickly two reasons speedup first time wasted setting additional connections tcp connection requires least one round trip time establish second transfer images proceeds quickly tcp congestion control start connection tcp uses slow start procedure increase throughput learns behavior network path consequence warmup period multiple short tcp connections take disproportionately longer transfer information one longer tcp connection finally c one persistent connection requests pipelined specifically second third requests sent rapid succession soon enough main page retrieved identify images must fetched responses requests follow eventually method cuts time server idle improves performance persistent connections come free however new issue raise close connection connection server stay open page loads good chance user click link requests another page server connection remains open next request sent immediately however guarantee client make another request server time soon practice 686 application layer clients servers usually keep persistent connections open idle short time e g seconds large number open connections need close observant reader may noticed one combination left far also possible send one request per tcp connection run multiple tcp connections parallel parallel connection method widely used browsers persistent connections disadvantage sequential connections extra overhead much better performance setting ramping connections parallel hides latency example connections embedded images could set time however running many tcp connections server discouraged reason tcp performs congestion control connection independently consequence connections compete causing added packet loss aggregate aggressive users network individual connection persistent connections superior used preference parallel connections avoid overhead suffer congestion problems methods although http designed use web intentionally made general necessary eye future object oriented uses reason operations called methods requesting web page supported generality permitted soap come existence request consists one lines ascii text first word first line name method requested built methods listed names case sensitive get allowed get method description get read web page head read web page header post append web page put store web page delete remove web page trace echo incoming request connect connect proxy options query options page built http request methods get method requests server send page say page mean object general case thinking page contents sec world wide web file sufficient understand concepts page suitably encoded mime vast majority requests web servers gets usual form get get filename http filename names page fetched protocol version head method asks message header without actual page method used collect information indexing purposes test url validity post method used forms submitted get also used soap web services like get bears url instead simply retrieving page uploads data server e contents form rpc parameters server something data depends url conceptually appending data object effect might purchase item example call procedure finally method returns page indicating result remaining methods used much browsing web put method reverse get instead reading page writes page method makes possible build collection web pages remote server body request contains page may encoded using mime case lines following put might include authentication headers prove caller indeed permission perform requested operation delete might expect removes page least indicates web server agreed remove page put authentication permission play major role trace method debugging instructs server send back request method useful requests processed correctly client wants know request server actually got connect method lets user make connection web server intermediate device web cache options method provides way client query server page obtain methods headers used page every request gets response consisting status line possibly additional information e g part web page status line contains three digit status code telling whether request satisfied first digit used divide responses five major groups shown 1xx codes rarely used practice 2xx codes mean request handled successfully content returned 3xx codes tell client look elsewhere either using different url cache discussed later 4xx codes mean request failed due client error invalid request nonexistent page finally 5xx errors mean server internal problem either due error code temporary overload 688 application layer code meaning examples 1xx information server agrees handle client request 2xx success request succeeded content present 3xx redirection page moved cached page still valid 4xx client error forbidden page page found 5xx server error internal server error try later status code response groups message headers request line e g line get method may followed additional lines information called request headers information compared parameters procedure call responses may also response headers headers used either direction selection important ones given list short might imagine often variety headers request response user agent header allows client inform server browser implementation e g mozilla chrome 125 information useful let servers tailor responses browser since different browsers widely varying capabilities behaviors four accept headers tell server client willing accept event limited repertoire acceptable first header specifies mime types welcome e g text html second gives character set e g iso unicode third deals compression methods e g gzip fourth indicates natural language e g spanish server choice pages use information supply one client looking unable satisfy request error code returned request fails modified since none match headers used caching let client ask page sent cached copy longer valid describe caching shortly host header names server taken url header mandatory used ip addresses may serve multiple dns names server needs way tell host hand request authorization header needed pages protected case client may prove right see page requested header used case client uses misspelled referer header give url referred url requested often url previous page sec header world wide web type contents user agent request information browser platform accept request type pages client handle accept charset request character sets acceptable client accept encoding request page encodings client handle accept language request natural languages client handle modified since request time date check freshness none match request previously sent tags check freshness host request server dns name authorization request list client credentials referer request previous url request came cookie request previously set cookie sent back server set cookie response cookie client store server response information server content encoding response content encoded e g gzip content language response natural language used page content length response page length bytes content type response page mime type content range response identifies portion page content last modified response time date page last changed expires response time date page stops valid location response tells client send request accept ranges response indicates server accept byte range requests date date time message sent range identifies portion page cache control directives treat caches etag tag contents page upgrade protocol sender wants switch http message headers header particularly useful tracking web browsing tells servers client arrived page although cookies dealt rfc rather rfc also headers set cookie header servers send cookies clients client expected save cookie return subsequent requests server using cookie header note recent specification cookies newer headers rfc largely rejected industry widely implemented 690 application layer many headers used responses server header allows server identify software build wishes next five headers starting content allow server describe properties page sending last modified header tells page last modified expires header tells long page remain valid headers play important role page caching location header used server inform client try different url used page moved allow multiple urls refer page possibly different servers also used companies main web page com domain redirect clients national regional page based ip addresses preferred language page large small client may want servers accept requests byte ranges page fetched multiple small units accept ranges header announces server willingness handle type partial page request come headers used directions date header used directions contains time date message sent range header tells byte range page provided response etag header gives short tag serves name content page used caching cache control header gives explicit instructions cache usually cache pages finally upgrade header used switching new communication protocol future http protocol secure transport allows client announce support server assert using caching people often return web pages viewed related web pages often embedded resources examples images used navigation across site well common style sheets scripts would wasteful fetch resources pages time displayed browser already copy squirreling away pages fetched subsequent use called caching advantage cached page reused necessary repeat transfer http built support help clients identify safely reuse pages support improves performance reducing network traffic latency trade browser must store pages nearly always worthwhile trade local storage inexpensive pages usually kept disk used browser run later date difficult issue http caching determine previously cached copy page page would fetched sec world wide web determination made solely url example url may give page displays latest news item contents page updated frequently even though url stays alternatively contents page may list gods greek roman mythology page change somewhat less rapidly http uses two strategies tackle problem shown forms processing request step response step first strategy page validation step cache consulted copy page requested url known fresh e still valid need fetch anew server instead cached page returned directly expires header returned cached page originally fetched current date time used make determination request check expiry conditional get 4a modified program cache response 4b response web browser web server http caching however pages come convenient expires header tells page must fetched making predictions hard especially future case browser may use heuristics example page modified past year told last modified header fairly safe bet change next hour guarantee however may bad bet example stock market might closed day page change hours change rapidly next trading session starts thus cacheability page may vary wildly time reason heuristics used care though often work well practice finding pages expired beneficial use caching means server need contacted unfortunately always work servers must use expires header conservatively since may unsure page updated thus cached copies may still fresh client know second strategy used case ask server cached copy still valid request conditional get shown step server knows cached copy still valid send short reply say step 4a otherwise must send full response step 4b 692 application layer header fields used let server check whether cached copy still valid client time cached page last updated lastmodified header send time server using modified since header ask page changed meantime alternatively server may return etag header page header gives tag short name content page like checksum better cryptographic hash describe chap client validate cached copies sending server none match header listing tags cached copies tags match content server would respond corresponding cached copy may used method used convenient useful determine freshness example server may return different content url depending languages mime types preferred case modification date alone help server determine cached page fresh finally note caching strategies overridden directives carried cache control header directives used restrict caching e g cache appropriate example dynamic page different next time fetched pages require authorization also cached much caching space make two important points first caching performed places besides browser general case http requests routed series caches use cache external browser called proxy caching added level caching help reduce requests chain common organizations isps companies run proxy caches gain benefits caching pages across different users discuss proxy caching broader topic content distribution sec end chapter second caches provide important boost performance much one might hope reason certainly popular documents web also great many unpopular documents people fetch many also long e g videos long tail unpopular documents take space caches number requests handled cache grows slowly size cache web caches always likely able handle less half requests see breslau et al information experimenting http http ascii protocol quite easy person terminal opposed browser directly talk web servers needed tcp connection port server readers encouraged experiment following command sequence work unix shells command window windows telnet program enabled sec world wide web telnet www ietf org get rfc html http host www ietf org sequence commands starts telnet e tcp connection port ietf web server www ietf org comes get command naming path url protocol try servers urls choosing next line mandatory host header blank line following last header mandatory tells server request headers server send response depending server url many different kinds headers pages observed mobile web web used every type computer includes mobile phones browsing web wireless network mobile useful also presents technical problems much web content designed flashy presentations desktop computers broadband connectivity section describe web access mobile devices mobile web developed compared desktop computers work home mobile phones present several difficulties web browsing relatively small screens preclude large pages large images limited input capabilities make tedious enter urls lengthy input network bandwidth limited wireless links particularly cellular 3g networks often expensive connectivity may intermittent computing power limited reasons battery life size heat dissipation cost difficulties mean simply using desktop content mobile web likely deliver frustrating user experience early approaches mobile web devised new protocol stack tailored wireless devices limited capabilities wap wireless application protocol well known example strategy wap effort started major mobile phone vendors included nokia ericsson motorola however something unexpected happened along way next decade network bandwidth device capabilities grew tremendously deployment 3g data services mobile phones larger color displays 694 application layer faster processors 11 wireless capabilities sudden possible mobiles run simple web browsers still gap mobiles desktops never close many technology problems gave impetus separate protocol stack faded approach increasingly used run web protocols mobiles desktops web sites deliver mobile friendly content user happens mobile device web servers able detect whether return desktop mobile versions web pages looking request headers user agent header especially useful regard identifies browser software thus web server receives request may look headers return page small images less text simpler navigation iphone full featured page user laptop w3c encouraging approach several ways one way standardize best practices mobile web content list best practices provided first specification rabin mccathienevile practices take sensible steps reduce size pages including use compression since costs communication higher computation maximizing effectiveness caching approach encourages sites especially large sites create mobile web versions content required capture mobile web users help users along also logo indicate pages viewed well mobile web another useful tool stripped version html called xhtml basic language subset xhtml intended use mobile phones televisions pdas vending machines pagers cars game machines even watches reason support style sheets scripts frames standard tags grouped modules required optional defined xml modules example tags listed however pages designed work well mobile web thus complementary approach use content transformation transcoding approach computer sits mobile server takes requests mobile fetches content server transforms mobile web content simple transformation reduce size large images reformatting lower resolution many small useful transformations possible transcoding used success since early days mobile web see example fox et al however approaches used tension mobile content decisions made server transcoder instance web site may select particular combination image text mobile web user transcoder change format image discussion far content protocols content biggest problem realizing mobile web however briefly mention issue protocols http tcp ip protocols used sec module world wide web req function example tags structure yes doc structure body head html title text yes information br code dfn em hn kbd p strong hypertext yes hyperlinks list yes itemized lists dl dt dd ol ul li forms fill forms form input label option textarea tables rectangular tables caption table td th tr image pictures img object applets maps etc object param meta information extra info meta link similar link base url starting point base xhtml basic modules tags web may consume significant amount bandwidth protocol overheads headers tackle problem wap solutions defined special purpose protocols turns largely unecessary header compression technologies rohc robust header compression described chap reduce overheads protocols way possible one set protocols http tcp ip use either high low bandwidth links use low bandwidth links simply requires header compression turned web search finish description web discuss arguably successful web application search sergey brin larry page graduate students stanford formed startup called google build better web search engine armed radical idea search algorithm counted many times page pointed pages better measure importance many times contained key words sought instance many pages link main cisco page makes page important user searching cisco page outside company happens use word cisco many times right prove possible build better search engine people flocked backed venture capital google grew tremendously became public company market capitalization billion estimated run one million servers data centers throughout world 696 application layer one sense search simply another web application albeit one mature web applications development since early days web however web search proved indispensible everyday usage one billion web searches estimated done day people looking manner information use search starting point example find buy vegemite seattle obvious web site use starting point chances search engine knows page desired information quickly direct answer perform web search traditional manner user directs browser url web search site major search sites include google yahoo bing next user submits search terms using form act causes search engine perform query database relevant pages images whatever kind resource searched return result dynamic page user follow links pages found web search interesting topic discussion implications design use networks first question web search finds pages web search engine must database pages run query html page may contain links pages everything interesting least searchable linked somewhere means theoretically possible start handful pages find pages web traversal pages links process called web crawling web search engines use web crawlers one issue crawling kind pages find fetching static documents following links easy however many web pages contain programs display different pages depending user interaction example online catalog store catalog may contain dynamic pages created product database queries different products kind content different static pages easy traverse web crawlers find dynamic pages answer part kind hidden content called deep web search deep web open problem researchers tackling see example madhavan et al also conventions sites make page known robots txt tell crawlers parts sites visited second consideration process crawled data let indexing algorithms run mass data pages must stored estimates vary main search engines thought index tens billions pages taken visible part web average page size estimated kb figures mean crawled copy web takes order petabytes bytes store truly huge number also amount data comfortably stored processed internet data centers chang et al example disk storage costs tb tb costs 000 exactly huge amount companies size google microsoft yahoo web sec world wide web expanding disk costs dropping dramatically storing entire web may continue feasible large companies foreseeable future making sense data another matter appreciate xml help programs extract structure data easily ad hoc formats lead much guesswork also issue conversion formats even translation languages even knowing structure data part problem hard bit understand means much value unlocked starting relevant result pages search queries ultimate goal able answer questions example buy cheap decent toaster oven city third aspect web search come provide higher level naming need remember long url reliable perhaps search web page person name assuming better remembering names urls strategy increasingly successful way dns names relegated ip addresses computers web search relegating urls computers also favor search corrects spelling typing errors whereas type url wrong get wrong page finally web search shows us something little network design much growth internet services much money advertising advertising economic engine driven growth web search main change print advertising ability target advertisements depending people searching increase relevance advertisements variations auction mechanism used match search query valuable advertisement edelman et al new model given rise new problems course click fraud programs imitate users click advertisements cause payments fairly earned streaming audio video web applications mobile web exciting developments use networks many people audio video holy grail networking word multimedia mentioned propellerheads suits begin salivating cue former see immense technical challenges providing voice ip video demand every computer latter see equally immense profits idea sending audio video internet around since 1970s least since roughly real time audio real time video traffic grown vengeance real time traffic different web traffic must played predetermined rate useful watching video slow motion fits starts 698 application layer people idea fun contrast web short interruptions page loads take less time within limits without major problem two things happened enable growth first computers became much powerful equipped microphones cameras input process output audio video data ease second flood internet bandwidth come available long haul links core internet run many gigabits sec broadband 11 wireless reaches users edge internet developments allow isps carry tremendous levels traffic across backbones mean ordinary users connect internet 1000 times faster kbps telephone modem flood bandwidth caused audio video traffic grow different reasons telephone calls take relatively little bandwidth principle kbps less compressed yet telephone service traditionally expensive companies saw opportunity carry voice traffic internet using existing bandwidth cut telephone bills startups skype saw way let customers make free telephone calls using internet connections upstart telephone companies saw cheap way carry traditional voice calls using ip networking equipment result explosion voice data carried internet networks called voice ip internet telephony unlike audio video takes large amount bandwidth reasonable quality internet video encoded compression rates around mbps typical dvd movie gb data broadband internet access sending movies network prohibitive spread broadband became possible first time users watch decent streamed video home people love around quarter internet users given day estimated visit youtube popular video sharing site movie rental business shifted online downloads sheer size videos changed overall makeup internet traffic majority internet traffic already video estimated internet traffic video within years cisco given enough bandwidth carry audio video key issue designing streaming conferencing applications network delay audio video need real time presentation meaning must played predetermined rate useful long delays mean calls interactive longer problem clear ever talked satellite phone delay half second quite distracting playing music movies network absolute delay matter affects media starts play variation delay called jitter still matters must masked player audio sound unintelligible video look jerky section discuss strategies handle delay problem well protocols setting audio video sessions introduction sec streaming audio video digital audio video presentation broken three cases different designs used first easiest case handle streaming stored media like watching video youtube next case terms difficulty streaming live media two examples internet radio iptv radio television stations broadcast many users live internet last difficult case call might made skype generally interactive audio video conference aside term multimedia often used context internet mean video audio literally multimedia two media definition makes book multimedia presentation contains text graphics figures however probably mind use term multimedia imply two continuous media media played well defined time interval two media normally video audio moving pictures sound many people also refer pure audio internet telephony internet radio multimedia well clearly actually better term cases streaming media nonetheless follow herd consider real time audio multimedia well digital audio audio sound wave one dimensional acoustic pressure wave acoustic wave enters ear eardrum vibrates causing tiny bones inner ear vibrate along sending nerve pulses brain pulses perceived sound listener similar way acoustic wave strikes microphone microphone generates electrical signal representing sound amplitude function time frequency range human ear runs hz 000 hz animals notably dogs hear higher frequencies ear hears loudness logarithmically ratio two sounds power b conventionally expressed db decibels quantity log10 b define lower limit audibility sound pressure pascals khz sine wave db ordinary conversation db pain threshold db dynamic range factor million ear surprisingly sensitive sound variations lasting milliseconds eye contrast notice changes light level last milliseconds result observation jitter milliseconds playout multimedia affects perceived sound quality much affects perceived image quality digital audio digital representation audio wave used recreate audio waves converted digital form adc analogto digital converter adc takes electrical voltage input generates binary number output see example sine wave 700 application layer represent signal digitally sample every seconds shown bar heights b sound wave pure sine wave linear superposition sine waves highest frequency component present f nyquist theorem see chap states sufficient make samples frequency 2f sampling often value since higher frequencies sampling could detect present 00 75 50 25 25 2t 50 75 00 b c sine wave b sampling sine wave c quantizing samples bits reverse process takes digital values produces analog electrical voltage done dac digital analog converter loudspeaker convert analog voltage acoustic waves people hear sounds digital samples never exact samples c allow nine values 00 00 steps 25 bit sample would allow distinct values bit sample would allow 536 distinct values error introduced finite number bits per sample called quantization noise large ear detects two well known examples sampled sound used telephone audio compact discs pulse code modulation used within telephone system uses bit samples made times per second scale nonlinear minimize perceived distortion samples sec frequencies khz lost north america japan law encoding used europe internationally law encoding used encoding gives data rate 000 bps audio cds digital sampling rate 100 samples sec enough capture frequencies 050 hz good enough people bad canine music lovers samples bits linear range amplitudes note bit samples allow 536 distinct values even though dynamic range ear million thus even though cd quality audio much better telephone quality audio using bits per sample introduces noticeable quantization noise although full dynamic range covered cds supposed hurt fanatic audiophiles sec streaming audio video still prefer rpm lp records cds records nyquist frequency cutoff khz quantization noise scratches unless handled carefully 100 samples sec bits uncompressed cd quality audio needs bandwidth kbps monaural 411 mbps stereo audio compression audio often compressed reduce bandwidth needs transfer times even though audio data rates much lower video data rates compression systems require two algorithms one compressing data source another decompressing destination literature algorithms referred encoding decoding algorithms respectively use terminology compression algorithms exhibit certain asymmetries important understand even though considering audio first asymmetries hold video well many applications multimedia document encoded stored multimedia server decoded thousands times played back customers asymmetry means acceptable encoding algorithm slow require expensive hardware provided decoding algorithm fast require expensive hardware operator popular audio video server might quite willing buy cluster computers encode entire library requiring customers listen music watch movies likely big success many practical compression systems go great lengths make decoding fast simple even price making encoding slow complicated hand live audio video voice ip calls slow encoding unacceptable encoding must happen fly real time consequently real time multimedia uses different algorithms parameters stored audio videos disk often appreciably less compression second asymmetry encode decode process need invertible compressing data file transmitting decompressing user expects get original back accurate last bit multimedia requirement exist usually acceptable audio video signal encoding decoding slightly different original long sounds looks decoded output exactly equal original input system said lossy input output identical system lossless lossy systems important accepting small amount information loss normally means huge payoff terms compression ratio possible historically long haul bandwidth telephone network expensive substantial body work vocoders short voice coders compress audio special case speech human speech tends 702 application layer hz hz range produced mechanical process depends speaker vocal tract tongue jaw vocoders make use models vocal system reduce speech parameters e g sizes shapes various cavities data rate little kbps vocoders work beyond scope book however concentrate audio sent internet typically closer cd quality also desirable reduce data rates kind audio 411 mbps stereo audio would tie many broadband links leaving less room video web traffic data rate compression reduced order magnitude little perceived loss quality compression decompression require signal processing fortunately digitized sound movies easily processed computers software fact dozens programs exist let users record display edit mix store media multiple sources led large amounts music movies available internet legal resulted numerous lawsuits artists copyright owners many audio compression algorithms developed probably popular formats mp3 mpeg audio layer aac advanced audio coding carried mp4 mpeg files avoid confusion note mpeg provides audio video compression mp3 refers audio compression portion part mpeg standard third version mpeg fact third version mpeg released mpeg mpeg mpeg aac successor mp3 default audio encoding used mpeg mpeg allows mp3 aac audio clear nice thing standards many choose like wait year two audio compression done two ways waveform coding signal transformed mathematically fourier transform frequency components chap showed example function time fourier amplitudes amplitude component encoded minimal way goal reproduce waveform fairly accurately end bits possible way perceptual coding exploits certain flaws human auditory system encode signal way sounds human listener even looks quite different oscilloscope perceptual coding based science psychoacoustics people perceive sound mp3 aac based perceptual coding key property perceptual coding sounds mask sounds imagine broadcasting live flute concert warm summer day sudden blue crew workmen nearby turn jackhammers start tearing street one hear flute sounds masked jackhammers transmission purposes sufficient encode frequency band used jackhammers sec streaming audio video listeners hear flute anyway called frequency masking ability loud sound one frequency band hide softer sound another frequency band would audible absence loud sound fact even jackhammers stop flute inaudible short period time ear turns gain start takes finite time turn effect called temporal masking make effects quantitative imagine experiment person quiet room puts headphones connected computer sound card computer generates pure sine wave hz low gradually increasing power subject instructed strike key hears tone computer records current power level repeats experiment hz hz frequencies limit human hearing averaged many people log log graph much power takes tone audible looks like direct consequence curve never necessary encode frequencies whose power falls threshold audibility example power hz db could omitted output perceptible loss quality db hz falls level audibility threshold audibility power db power db masked signal threshold audibility masking signal hz frequency khz frequency khz b threshold audibility function frequency b masking effect consider experiment computer runs experiment time constant amplitude sine wave say hz superimposed test frequency discover threshold audibility frequencies near hz raised shown b consequence new observation keeping track signals masked powerful signals nearby frequency bands omit frequencies encoded signal saving bits fig hz signal completely omitted output one able hear difference even powerful signal stops frequency band knowledge temporal masking properties allows us continue omit masked frequencies time interval ear recovers 704 application layer essence mp3 aac fourier transform sound get power frequency transmit unmasked frequencies encoding bits possible information background see encoding done audio compression done sampling waveform rate khz aac often khz mimic cd sound sampling done one mono two stereo channels next output bit rate chosen mp3 compress stereo rock n roll cd kbps little perceptible loss quality even rock n roll fans hearing loss piano concert aac least kbps needed difference signalto noise ratio rock n roll much higher piano concert engineering sense anyway also possible choose lower output rates accept loss quality samples processed small batches batch passed bank digital filters get frequency bands frequency information fed psychoacoustic model determine masked frequencies available bit budget divided among bands bits allocated bands unmasked spectral power fewer bits allocated unmasked bands less spectral power bits allocated masked bands finally bits encoded using huffman encoding assigns short codes numbers appear frequently long codes occur infrequently many details curious reader information see brandenburg digital video know ear time move eye section followed one nose human eye property image appears retina image retained number milliseconds decaying sequence images drawn images sec eye notice looking discrete images video systems exploit principle produce moving pictures simplest digital representation video sequence frames consisting rectangular grid picture elements pixels pixel single bit represent either black white however quality system awful try using favorite image editor convert pixels color image black white shades gray next step use bits per pixel represent gray levels scheme gives high quality black white video color video many systems use bits red green blue rgb primary color components representation possible color constructed linear superposition red green blue appropriate intensities sec streaming audio video bits per pixel million colors human eye distinguish color lcd computer monitors televisions discrete pixel made closely spaced red green blue subpixels frames displayed setting intensity subpixels eye blends color components common frame rates frames sec inherited 35mm motion picture film frames sec inherited ntsc u televisions frames sec inherited pal television system used nearly rest world truly picky ntsc color television runs 97 frames sec original black white system ran frames sec color introduced engineers needed bit extra bandwidth signaling reduced frame rate 97 ntsc videos intended computers really use pal invented ntsc really uses 000 frames sec make story complete third system secam used france francophone africa eastern europe first introduced eastern europe communist east germany east german people could watch west german pal television lest get bad ideas many countries switching pal technology politics best actually broadcast television frames sec quite good enough smooth motion images split two fields one odd numbered scan lines one even numbered scan lines two half resolution fields broadcast sequentially giving almost ntsc exactly pal fields sec system known interlacing videos intended viewing computer progressive use interlacing computer monitors buffers graphics cards making possible cpu put new image buffer times sec graphics card redraw screen even times sec eliminate flicker analog television sets frame buffer way computers interlaced video rapid movement displayed computer short horizontal lines visible near sharp edges effect known combing frame sizes used video sent internet vary widely simple reason larger frames require bandwidth may always available low resolution video might pixels full screen video pixels dimensions approximate early computer monitors ntsc television respectively aspect ratio width height ratio standard television hdtv high definition television videos downloaded pixels widescreen images aspect ratio closely match aspect ratio film comparison standard dvd video usually pixels video blu ray discs usually hdtv pixels internet number pixels part story media players present image different sizes video another window computer screen blown shrunk role 706 application layer pixels increase quality image look blurry expanded however many monitors show images hence videos even pixels even hdtv video compression obvious discussion digital video compression critical sending video internet even standard quality video pixel frames bits color information per pixel frames sec takes mbps far exceeds bandwidth company offices connected internet let alone home users single video stream since transmitting uncompressed video completely question least wide area networks hope massive compression possible fortunately large body research past decades led many compression techniques algorithms make video transmission feasible many formats used video sent internet proprietary standard popular encoding mpeg various forms open standard found files mpg mp4 extensions well container formats section look mpeg study video compression accomplished begin look compression still images jpeg video sequence images plus sound one way compress video encode image succession first approximation mpeg jpeg encoding frame plus extra features removing redundancy across frames jpeg standard jpeg joint photographic experts group standard compressing continuous tone still pictures e g photographs developed photographic experts working joint auspices itu iso iec another standards body widely used look files extension jpg often provides compression ratios better natural images jpeg defined international standard really like shopping list single algorithm four modes defined lossy sequential mode relevant discussion furthermore concentrate way jpeg normally used encode bit rgb video images leave options details sake simplicity algorithm illustrated step block preparation sake specificity let us assume jpeg input rgb image bits pixel shown rgb best color model use compression eye much sensitive luminance brightness video signals chrominance color video signals thus sec streaming audio video first compute luminance two chrominances cb cr r g b components following formulas used bit values range 26r 50g 09b cb 15r 29g 44b cr 44r 37g 07b input discrete cosine transform block preparation quantization runlength encoding differential quantization statistical output output encoding steps jpeg lossy sequential encoding separate matrices constructed cb cr next square blocks four pixels averaged cb cr matrices reduce reduction lossy eye barely notices since eye responds luminance chrominance nevertheless compresses total amount data factor two subtracted element three matrices put middle range finally matrix divided blocks matrix blocks two blocks shown b cb rgb bit pixel block bit pixel b block cr rgb input data b block preparation step jpeg encoding apply dct discrete cosine transformation blocks separately output dct matrix dct coefficients dct element average value block elements tell much spectral power present spatial frequency normally elements decay rapidly distance origin suggested dct complete jpeg encoding moves step called quantization less important dct coefficients wiped lossy 708 fy dct cb cr amplitude application layer x b fx one block matrix b dct coefficients transformation done dividing coefficients dct matrix weight taken table weights transformation nothing however weights increase sharply origin higher spatial frequencies dropped quickly example step given see initial dct matrix quantization table result obtained dividing dct element corresponding quantization table element values quantization table part jpeg standard application must supply allowing control loss compression trade quantization table dct coefficients 80 14 75 10 38 16 64 16 64 16 64 16 64 16 64 16 16 16 64 32 32 32 64 64 64 64 64 quantized coefficients 80 92 18 19 computation quantized dct coefficients step reduces value block one upper left corner replacing amount differs corresponding element previous block since elements averages respective blocks change slowly taking differential values reduce small values differentials computed values sec streaming audio video step linearizes elements applies run length encoding list scanning block left right top bottom concentrate zeros together zigzag scanning pattern used shown example zigzag pattern produces consecutive 0s end matrix string reduced single count saying zeros technique known run length encoding order quantized values transmitted list numbers represent image transform space step huffman encodes numbers storage transmission assigning common numbers shorter codes uncommon ones jpeg may seem complicated complicated still benefits compression worth decoding jpeg image requires running algorithm backward jpeg roughly symmetric decoding takes long encoding property true compression algorithms shall see mpeg standard finally come heart matter mpeg motion picture experts group standards though many proprietary algorithms standards define main algorithms used compress videos international standards since movies contain images sound mpeg compress audio video already examined audio compression still image compression let us examine video compression mpeg standard includes mp3 audio first published still widely used goal produce video recorder quality output compressed rates around mbps video suitable 710 application layer broad internet use web sites worry remember video recorders mpeg also used storing movies cds existed know cds move mpeg mpeg standard released designed compressing broadcast quality video common used basis video encoded dvds inevitably finds way onto internet digital broadcast television dvb dvd quality video typically encoded rates mbps mpeg standard two video formats first format released encodes video object based representation allows mixing natural synthetic images kinds media example weatherperson standing front weather map structure easy let programs interact movie data second format released known h avc advanced video coding goal encode video half rate earlier encoders quality level better support transmission video networks encoder used hdtv blu ray discs details standards many varied later standards also many features encoding options earlier standards however go details part gains video compression time come numerous small improvements rather fundamental shifts video compressed thus sketch overall concepts mpeg compresses audio video since audio video encoders work independently issue two streams get synchronized receiver solution single clock outputs timestamps current time encoders timestamps included encoded output propagated way receiver use synchronize audio video streams mpeg video compression takes advantage two kinds redundancies exist movies spatial temporal spatial redundancy utilized simply coding frame separately jpeg approach occasionally used especially random access frame needed editing video productions mode jpeg levels compression achieved additional compression achieved taking advantage fact consecutive frames often almost identical effect smaller might first appear since many movie directors cut scenes every seconds time movie fragment count scenes nevertheless runs highly similar frames offer potential major reduction simply encoding frame separately jpeg scenes camera background stationary one two actors moving around slowly nearly pixels identical frame frame subtracting frame previous one running sec streaming audio video jpeg difference would fine however scenes camera panning zooming technique fails badly needed way compensate motion precisely mpeg main difference mpeg jpeg mpeg output consists three kinds frames intracoded frames self contained compressed still pictures p predictive frames block block difference previous frames b bidirectional frames block block differences previous future frames frames still pictures coded jpeg something similar valuable frames appear output stream periodically e g twice per second three reasons first mpeg used multicast transmission viewers tuning frames depended predecessors going back first frame anybody missed first frame could never decode subsequent frames second frame received error decoding would possible everything would unintelligble junk third without frames fast forward rewind decoder would calculate every frame passed would know full value one stopped p frames contrast code interframe differences based idea macroblocks cover example pixels luminance space pixels chrominance space macroblock encoded searching previous frame something slightly different example p frames would useful given see three consecutive frames background differ position one person macroblocks containing background scene match exactly macroblocks containing person offset position unknown amount tracked three consecutive frames mpeg standards specify search far search good match order count implementation 712 application layer example implementation might search macroblock current position previous frame positions offset x x direction direction position number matches luminance matrix could computed position highest score would declared winner provided predefined threshold otherwise macroblock would said missing much sophisticated algorithms also possible course macroblock found encoded taking difference current value one previous frame luminance chrominances difference matrices subjected discrete cosine transformation quantization run length encoding huffman encoding usual value macroblock output stream motion vector far macroblock moved previous position direction followed encoding difference macroblock located previous frame current value encoded frame clearly algorithm highly asymmetric implementation free try every plausible position previous frame wants desperate attempt locate every last macroblock matter moved approach minimize encoded mpeg stream expense slow encoding approach might fine one time encoding film library would terrible real time videoconferencing similarly implementation free decide constitutes found macroblock freedom allows implementers compete quality speed algorithms always produce compliant mpeg output far decoding mpeg straightforward decoding frames similar decoding jpeg images decoding p frames requires decoder buffer previous frames build new one separate buffer based fully encoded macroblocks macroblocks containing differences previous frames new frame assembled macroblock macroblock b frames similar p frames except allow reference macroblock either previous frames succeeding frames additional freedom allows improved motion compensation useful example objects pass front behind objects b frame encoding encoder needs hold sequence frames memory past frames current frame encoded future frames decoding similarly complicated adds delay given b frame decoded successive frames depends decoded thus although bframes give best compression always used due greater complexity buffering requirements mpeg standards contain many enhancements techniques achieve excellent levels compression avc used compress video ratios excess reduces network bandwidth requirements factor information avc see sullivan wiegand sec streaming audio video streaming stored media let us move network applications first case streaming media already stored files common example watching videos internet one form vod video demand forms video demand use provider network separate internet deliver movies e g cable network next section look streaming live media example broadcast iptv internet radio look third case real time conferencing example voice ip call video conference skype three cases place increasingly stringent requirements deliver audio video network must pay increasing attention delay jitter internet full music video sites stream stored media files actually easiest way handle stored media stream imagine want create online movie rental site compete apple itunes regular web site let users download watch videos pay course sequence steps shown spell contrast next example server client media request http media player play media browser disk save media media response http web server disk playing media web via simple downloads browser goes action user clicks movie step sends http request movie web server movie linked step server fetches movie file mp4 format sends back browser using mime type example video mp4 browser looks supposed display file case media player shown helper application though could also plug browser saves entire movie scratch file disk step starts media player passing name scratch file finally step media player starts reading file playing movie principle approach completely correct play movie real time network issue address either download simply 714 application layer file download trouble entire video must transmitted network movie starts customers want wait hour video demand model problematic even audio imagine previewing song purchasing album song mb typical size mp3 song broadband connectivity mbps user greeted half minute silence preview starts model unlikely sell many albums get around problem without changing browser works sites use design shown page linked movie actual movie file instead called metafile short file naming movie possibly key descriptors simple metafile might one line ascii text look like rtsp joes movie server movie mp4 browser gets page usual one line file steps starts media player hands one line file step usual media player reads metafile sees url get movie contacts joes video server asks movie step movie streamed back media player step advantage arrangement media player starts quickly short metafile downloaded happens browser loop media sent directly media player start showing movie entire file downloaded server client metafile request http web server browser metafile response http server handoff metafile media request rtsp media player media server media response via tcp udp disk streaming media using web media server shown two servers server named metafile often web server fact generally even sec streaming audio video http server specialized media server example media server uses rtsp real time streaming protocol indicated scheme name rtsp media player four major jobs manage user interface handle transmission errors decompress content eliminate jitter media players nowadays glitzy user interface sometimes simulating stereo unit buttons knobs sliders visual displays often interchangeable front panels called skins user drop onto player media player manage interact user jobs related depend network protocols go one turn starting handling transmission errors dealing errors depends whether tcp based transport like http used transport media udp based transport like rtp used used practice tcp based transport used errors media player correct tcp already provides reliability using retransmissions easy way handle errors least media player complicate removal jitter later step alternatively udp based transport like rtp used move data studied chap protocols retransmissions thus packet loss due congestion transmission errors mean media arrive media player deal problem let us understand difficulty loss problem customers like large gaps songs movies however much problem loss regular file transfer loss small amount media need degrade presentation user video user unlikely notice occasionally new frames second instead new frames audio short gaps playout masked sounds close time user unlikely detect substitution unless paying close attention key reasoning however gaps short network congestion transmission error generally cause entire packet lost packets often lost small bursts two strategies used reduce impact packet loss media lost fec interleaving describe turn fec forward error correction simply error correcting coding studied chap applied application level parity across packets provides example shacham mckenny every four data packets 716 application layer sent fifth parity packet constructed sent shown packets b c parity packet p contains redundant bits parity exclusive sums bits four data packets hopefully packets arrive groups five packets happens parity packet simply discarded receiver parity packet lost harm done client repair loss b p c media player lost packet b parity packet c p server construct parity media server p b c disk using parity packet repair loss occasionally however data packet may lost transmission b media player receives three data packets c plus parity packet p design bits missing data packet reconstructed parity bits specific using represent exclusive modulo addition b reconstructed b p c properties exclusive e x x fec reduce level loss seen media player repairing packet losses works certain level two packets group five lost nothing recover data property note fec cost paid gain protection every four packets become five packets bandwidth requirements media larger latency decoding increased may need wait parity packet arrived reconstruct data packet came also one clever trick technique chap described parity providing error detection providing error correction answer case known packet lost lost data called erasure chap considered frame received bits error know bit errored case harder deal erasures thus erasures parity provide error correction without erasures parity provide error detection see another unexpected benefit parity soon get multicast scenarios second strategy called interleaving approach based mixing interleaving order media transmission unmixing sec streaming audio video deinterleaving reception way packet burst packets lost loss spread time unmixing result single large gap media played example packet might contain stereo samples containing pair bit numbers normally good msec music samples sent order lost packet would represent msec gap music instead samples transmitted shown fig even samples msec interval sent one packet followed odd samples next one loss packet represent msec gap music loss every sample msec loss handled easily media player interpolate using previous succeeding samples result lower temporal resolution msec noticeable time gap media packet contains even time samples packet contains odd time samples legend lost packet even time sample odd time sample b time msec packets carry alternate samples loss packet reduces temporal resolution rather creating gap time interleaving scheme works uncompressed sampling however interleaving short periods time individual samples also applied compression long way find sample boundaries compressed stream rfc gives scheme works compressed audio interleaving attractive technique used needs additional bandwidth unlike fec however interleaving adds latency like fec need wait group packets arrive de interleaved media player third job decompressing content although task computationally intensive fairly straightforward thorny issue decode media network protocol correct transmission errors many compression schemes later data decompressed earlier data decompressed later data encoded relative earlier data udp based transport packet loss thus encoding 718 application layer process must designed permit decoding despite packet loss requirement mpeg uses p b frames frame decoded independently frames recover loss earlier frames fourth job eliminate jitter bane real time systems general solution described sec use playout buffer streaming systems start buffering 10 sec worth media starting play shown playing drains media regularly buffer audio clear video smooth startup delay gives buffer chance fill low water mark idea data arrive regularly enough buffer never completely emptied happen media playout would stall value buffering data sometimes slow arrive due congestion buffered media allow playout continue normally new media arrive buffer replenished client machine server machine buffer media player media server lowwater mark highwater mark media player buffers input media server plays buffer rather directly network much buffering needed fast media server sends media fill buffer depend network protocols many possibilities largest factor design whether udp based transport tcp based transport used suppose udp based transport like rtp used suppose ample bandwidth send packets media server media player little loss little traffic network case packets sent exact rate media played packet transit network propagation delay arrive right time media player present media little buffering needed variability delay interleaving fec used buffering needed least group packets interleaving fec performed however adds small amount buffering unfortunately scenario unrealistic two respects first bandwidth varies network paths usually clear media server whether sufficient bandwidth tries stream media simple solution encode media multiple resolutions let user choose sec streaming audio video resolution supported internet connectivity often two levels high quality say encoded mbps better low quality say encoded kbps less second jitter variation long takes media samples cross network jitter comes two sources often appreciable amount competing traffic network come multitasking users browsing web ostensibly watching streamed movie traffic cause fluctuations media arrives moreover care arrival video frames audio samples packets compression video frames particular may larger smaller depending content action sequence typically take bits encode placid landscape network bandwidth constant rate media delivery versus time vary jitter variation delay sources larger low water mark buffer needs avoid underrun suppose tcp based transport like http used send media performing retransmissions waiting deliver packets order tcp increase jitter observed media player perhaps significantly result larger buffer higher low water mark needed however advantage tcp send data fast network carry sometimes media may delayed loss must repaired much time network able deliver media faster player consumes periods buffer fill prevent future underruns network significantly faster average media rate often case buffer fill rapidly startup emptying soon cease concern tcp udp transmission rate exceeds playout rate question far ahead playout point media player media server willing proceed often willing download entire file however proceeding far ahead playout point performs work yet needed may require significant storage necessary avoid buffer underruns wanted solution media player define high water mark buffer basically server pumps data buffer filled high water mark media player tells pause since data continue pour server gotten pause request distance high water mark end buffer greater bandwidth delay product network server stopped buffer begin empty hits low water mark media player tells media server start avoid underrun low water mark must also take bandwidth delay product network account asking media server resume sending media start stop flow media media player needs remote control rtsp provides defined rfc provides 720 application layer mechanism player control server well starting stopping stream seek back forward position play specified intervals play fast slow speeds provide data stream though usually rtp udp rtp http tcp main commands provided rtsp listed simple text format like http messages usually carried tcp rtsp run udp since command acknowledged resent acknowledged command server action describe list media parameters setup establish logical channel player server play start sending data client record start accepting data client pause temporarily stop sending data teardown release logical channel rtsp commands player server even though tcp would seem poor fit real time traffic often used practice main reason able pass firewalls easily udp especially run http port administrators configure firewalls protect networks unwelcome visitors almost always allow tcp connections remote port pass http web traffic blocking port quickly leads unhappy campers however ports blocked including rstp rtp use ports amongst others thus easiest way get streaming media firewall web site pretend http server sending regular http response least firewall advantages tcp provides reliability tcp gives client complete copy media makes easy user rewind previously viewed playout point without concern lost data finally tcp buffer much media possible quickly possible buffer space cheap disk used storage media player download media user watches download complete user watch uninterrupted even loses connectivity property helpful mobiles connectivity change rapidly motion disadvantage tcp added startup latency tcp startup also higher low water mark however rarely much penalty long network bandwidth exceeds media rate large factor sec streaming audio video streaming live media recorded videos tremendously popular web live media streaming popular became possible stream audio video internet commercial radio tv stations got idea broadcasting content internet well air long college stations started putting signals internet college students started internet broadcasts today people companies sizes stream live audio video area hotbed innovation technologies standards evolve live streaming used online presence major television stations called iptv ip television also used broadcast radio stations like bbc called internet radio iptv internet radio reach audiences worldwide events ranging fashion shows world cup soccer test matches live melbourne cricket ground live streaming ip used technology cable providers build broadcast systems widely used low budget operations adult sites zoos current technology virtually anyone start live streaming quickly little expense one approach live streaming record programs disk viewers connect server archives pull program download listening podcast episode retrieved manner scheduled events also possible store content broadcast live archive running say half hour less behind live feed fact approach exactly used streaming media discussed easy techniques discussed work viewers pick choose among programs archive different approach broadcast live internet viewers tune ongoing media stream like turning television however media players provide added features letting user pause rewind playout live media continue streamed buffered player user ready browser point view looks exactly like case streaming stored media matter player whether content comes file sent live usually player able tell except possible skip forward live stream given similarity mechanism much previous discussion applies also key differences importantly still need buffering client side smooth jitter fact larger amount buffering often needed live streaming independent consideration user may pause playback streaming file media pushed rate greater playback rate build buffer quickly compensate network jitter player stop stream want buffer data contrast live media streaming always transmitted precisely rate 722 application layer generated rate played back sent faster consequence buffer must large enough handle full range network jitter practice 15 second startup delay usually adequate large problem important difference live streaming events usually hundreds thousands simultaneous viewers content circumstances natural solution live streaming use multicasting case streaming stored media users typically stream different content given time streaming many users consists many individual streaming sessions happen occur time multicast streaming scheme works follows server sends media packet using ip multicast group address network delivers copy packet member group clients want receive stream joined group clients using igmp rather sending rtsp message media server media server already sending live stream except first user joins needed arrange stream received locally since multicast one many delivery service media carried rtp packets udp transport tcp operates single sender single receiver since udp provide reliability packets may lost reduce level media loss acceptable level use fec interleaving case fec beneficial interaction multicast shown parity example packets multicast different clients may lose different packets example client lost packet b client lost parity packet p client lost client lose packets however even though three different packets lost across clients client recover data packets example required client lose one packet whichever one may missing packet recovered parity computation nonnenmacher et al describe idea used boost reliability server large number clients multicast media rtp udp packets clearly efficient way operate otherwise server must transmit n streams n clients require large amount network bandwidth server large streaming events may surprise learn internet work like practice usually happens user establishes separate tcp connection server media streamed connection client streaming stored media streaming stored media several reasons seemingly poor choice first reason ip multicast broadly available internet isps networks support internally usually available across network boundaries needed wide area streaming reasons sec streaming audio video p c b client parity packet rtp udp data packet p c b different packets lost p c b p c b p c b client server multicast client client multicast streaming media parity packet advantages tcp udp discussed earlier streaming tcp reach nearly clients internet particularly disguised http pass firewalls reliable media delivery allows users rewind easily one important case udp multicast used streaming however within provider network example cable company might decide broadcast tv channels customer set top boxes using ip technology instead traditional video broadcasts use ip distribute broadcast video broadly called iptv discussed since cable company complete control network engineer support ip multicast sufficient bandwidth udp based distribution invisible customer ip technology exists within walled garden provider looks like cable tv terms service ip underneath set top box computer running udp tv set simply monitor attached computer back internet case disadvantage live streaming tcp server must send separate copy media client feasible moderate number clients especially audio trick place server location good internet connectivity sufficient bandwidth usually means renting server data center hosting provider using server home broadband internet connectivity competitive hosting market need expensive fact easy anybody even student set operate streaming media server internet radio station main components 724 application layer station illustrated basis station ordinary pc decent sound card microphone popular software used capture audio encode various formats example mp4 media players used listen audio usual microphone media player audio capture plug codec plug internet media server tcp connections listeners student pc student radio station audio stream captured pc fed internet media server good network connectivity either podcasts stored file streaming live streaming server handles task distributing media via large numbers tcp connections also presents front end web site pages station links content available streaming commercial software packages managing pieces well open source packages icecast however large number clients becomes infeasible use tcp send media client single server simply enough bandwidth one server large streaming sites streaming done using set servers geographically spread client connect nearest server content distribution network study end chapter real time conferencing upon time voice calls carried public switched telephone network network traffic primarily voice traffic little bit data traffic came internet web data traffic grew grew much data traffic voice traffic since voice digitized measured bits volume data traffic order magnitude volume voice traffic still growing exponentially voice traffic staying almost flat consequence growth flip telephone network head voice traffic carried using internet technologies represents sec streaming audio video tiny fraction network bandwidth disruptive technology known voice ip also internet telephony voice ip used several forms driven strong economic factors english translation saves money people use one form look like regular old fashioned telephones plug ethernet send calls network pehr anderson undergraduate student friends prototyped design class project got b grade content started company called nbx pioneered kind voice ip sold 3com million three years later companies love approach lets away separate telephone lines make networks already another approach use ip technology build long distance telephone network countries u network accessed competitive long distance service dialing special prefix voice samples put packets injected network pulled packets leave since ip equipment much cheaper telecommunications equipment leads cheaper services aside difference price entirely technical many decades telephone service regulated monopoly guaranteed phone companies fixed percentage profit costs surprisingly led run costs example lots lots redundant hardware justified name better reliability telephone system allowed total hours every years min year average effect often referred gold plated telephone pole syndrome since deregulation effect decreased course legacy equipment still exists industry never history operating like always lean mean however concentrate form voice ip likely visible users using one computer call another computer form became commonplace pcs began shipping microphones speakers cameras cpus fast enough process media people started connecting internet home broadband rates well known example skype software released starting skype companies also provide gateways make easy call regular telephone numbers well computers ip addresses network bandwidth increased video calls joined voice calls initially video calls domain companies videoconferencing systems designed exchange video two locations enabling executives different locations see held meetings however good broadband internet connectivity video compression software home users also videoconference tools skype started audio routinely include video calls friends family across world see well hear 726 application layer point view internet voice video calls also media streaming problem one much constrained streaming stored file live event added constraint low latency needed two way conversation telephone network allows one way latency msec acceptable usage delay begins perceived annoying participants international calls may latency msec point far positive user experience low latency difficult achieve certainly buffering 10 seconds media going work would broadcasting live sports event instead video voice ip systems must engineered variety techniques minimize latency goal means starting udp clear choice rather tcp tcp retransmissions introduce least one round trip worth delay forms latency reduced however even udp example distance seattle amsterdam close 000 km speed light propagation delay distance optical fiber msec good luck beating practice propagation delay network longer cover larger distance bits follow great circle route transmission delays ip router stores forwards packet fixed delay eats acceptable delay budget another source latency related packet size normally large packets best way use network bandwidth efficient however audio sampling rate kbps kb packet would take msec fill even longer samples compressed delay would consume overall delay budget addition kb packet sent broadband access link runs mbps take msec transmit add another msec packet go broadband link end clearly large packets work instead voice ip systems use short packets reduce latency cost bandwidth efficiency batch audio samples smaller units commonly msec kbps bytes data less compression however definition delay packetization msec transmission delay smaller well packet shorter example would reduce around msec using short packets minimum one way delay seattle amsterdam packet reduced unacceptable msec acceptable msec even talked software overhead eat delay budget especially true video since compression usually needed fit video available bandwidth unlike streaming stored file time computationally intensive encoder high levels compression encoder decoder must run quickly buffering still needed play media samples time avoid unintelligible audio jerky video amount buffering must kept small since time remaining delay budget measured milliseconds sec streaming audio video packet takes long arrive player skip missing samples perhaps playing ambient noise repeating frame mask loss user trade size buffer used handle jitter amount media lost smaller buffer reduces latency results loss due jitter eventually size buffer shrinks loss become noticeable user observant readers may noticed said nothing network layer protocols far section network reduce latency least jitter using quality service mechanisms reason issue come streaming able operate substantial latency even live streaming case latency major concern buffer end host sufficient handle problem jitter however real time conferencing usually important network reduce delay jitter help meet delay budget time important much network bandwidth everyone gets good service chap described two quality service mechanisms help goal one mechanism ds differentiated services packets marked belonging different classes receive different handling within network appropriate marking voice ip packets low delay practice systems set ds codepoint well known value expedited forwarding class low delay type service especially useful broadband access links links tend congested web traffic traffic competes use link given stable network path delay jitter increased congestion every kb packet takes msec send mbps link voice ip packet incur delays sitting queue behind web traffic however low delay marking voice ip packets jump head queue bypassing web packets lowering delay second mechanism reduce delay make sure sufficient bandwidth available bandwidth varies transmission rate fluctuates compressed video sometimes sufficient bandwidth queues build add delay occur even ds ensure sufficient bandwidth reservation made network capability provided integrated services unfortunately widely deployed instead networks engineered expected traffic level network customers provided service level agreements given traffic level applications must operate level avoid causing congestion introducing unnecessary delays casual videoconferencing home user may choose video quality proxy bandwidth needs software may test network path select appropriate quality automatically factors cause latency become unacceptable real time conferencing requires attention paid overview voice ip analysis factors see goode 728 application layer discussed problem latency media streaming path move main problem conferencing systems must address problem set tear calls look two protocols widely used purpose h sip skype another important system inner workings proprietary h one thing clear everyone voice video calls made internet vendor designed protocol stack system would never work avoid problem number interested parties got together itu auspices work standards itu issued recommendation h entitled visual telephone systems equipment local area networks provide non guaranteed quality service telephone industry would think name quickly changed packet based multimedia communications systems revision h basis first widespread internet conferencing systems remains widely deployed solution seventh version h architectural overview internet telephony specific protocol references large number specific protocols speech coding call setup signaling data transport areas rather specifying things general model depicted center gateway connects internet telephone network speaks h protocols internet side pstn protocols telephone side communicating devices called terminals lan may gatekeeper controls end points jurisdiction called zone zone terminal gateway gatekeeper internet telephone network h architectural model internet telephony telephone network needs number protocols start protocol encoding decoding audio video standard telephony representations single voice channel kbps digital audio samples bits per second defined itu recommendation g h systems sec streaming audio video must support g encodings compress speech permitted required use different compression algorithms make different tradeoffs quality bandwidth video mpeg forms video compression described supported including h since multiple compression algorithms permitted protocol needed allow terminals negotiate one going use protocol called h also negotiates aspects connection bit rate rtcp need control rtp channels also required protocol establishing releasing connections providing dial tones making ringing sounds rest standard telephony itu q used terminals need protocol talking gatekeeper present well purpose h used pc gatekeeper channel manages called ras registration admission status channel channel allows terminals join leave zone request return bandwidth provide status updates among things finally protocol needed actual data transmission rtp udp used purpose managed rtcp usual positioning protocols shown audio video g 7xx h 26x control rtcp rtp h ras q signaling udp h call control tcp ip link layer protocol physical layer protocol h protocol stack see protocols fit together consider case pc terminal lan gatekeeper calling remote telephone pc first discover gatekeeper broadcasts udp gatekeeper discovery packet port gatekeeper responds pc learns gatekeeper ip address pc registers gatekeeper sending ras message udp packet accepted pc sends gatekeeper ras admission message requesting bandwidth bandwidth granted may call setup begin idea requesting bandwidth advance allow gatekeeper limit number calls avoid oversubscribing outgoing line order help provide necessary quality service 730 application layer aside telephone system thing pick receiver signal sent local end office office enough spare capacity another call generates dial tone hear nothing nowadays system overdimensioned dial tone nearly always instantaneous early days telephony often took seconds grandchildren ever ask dial tones know except probably telephones longer exist pc establishes tcp connection gatekeeper begin call setup call setup uses existing telephone network protocols connection oriented tcp needed contrast telephone system nothing like ras allow telephones announce presence h designers free use either udp tcp ras chose lower overhead udp bandwidth allocated pc send q setup message tcp connection message specifies number telephone called ip address port computer called gatekeeper responds q call proceeding message acknowledge correct receipt request gatekeeper forwards setup message gateway gateway half computer half telephone switch makes ordinary telephone call desired ordinary telephone end office telephone attached rings called telephone also sends back q alert message tell calling pc ringing begun person end picks telephone end office sends back q connect message signal pc connection connection established gatekeeper longer loop although gateway course subsequent packets bypass gatekeeper go directly gateway ip address point bare tube running two parties physical layer connection moving bits neither side knows anything one h protocol used negotiate parameters call uses h control channel always open side starts announcing capabilities example whether handle video h handle video conference calls codecs supports etc side knows one handle two unidirectional data channels set codec parameters assigned one since side may different equipment entirely possible codecs forward reverse channels different negotiations complete data flow begin using rtp managed using rtcp plays role congestion control video present rtcp handles audio video synchronization various channels shown either party hangs q call signaling channel used tear connection call completed order free resources longer needed sec streaming audio video call signaling channel q call control channel h caller forward data channel rtp callee reverse data channel rtp data control channel rtcp logical channels caller callee call call terminated calling pc contacts gatekeeper ras message release bandwidth assigned alternatively make another call said anything quality service part h even though said important part making real time conferencing success reason qos falls outside scope h underlying network capable producing stable jitter free connection calling pc gateway qos call good otherwise however portion call telephone side jitter free telephone network designed sip session initiation protocol h designed itu many people internet community saw typical telco product large complex inflexible consequently ietf set committee design simpler modular way voice ip major result date sip session initiation protocol latest version described rfc written protocol describes set internet telephone calls video conferences multimedia connections unlike h complete protocol suite sip single module designed interwork well existing internet applications example defines telephone numbers urls web pages contain allowing click link initiate telephone call way mailto scheme allows click link bring program send email message sip establish two party sessions ordinary telephone calls multiparty sessions everyone hear speak multicast sessions one sender many receivers sessions may contain audio video data latter useful multiplayer real time games example sip handles setup management termination sessions protocols rtp rtcp 732 application layer also used data transport sip application layer protocol run udp tcp required sip supports variety services including locating callee may home machine determining callee capabilities well handling mechanics call setup termination simplest case sip sets session caller computer callee computer examine case first telephone numbers sip represented urls using sip scheme example sip ilse cs university edu user named ilse host specified dns name cs university edu sip urls may also contain ipv4 addresses ipv6 addresses actual telephone numbers sip protocol text based protocol modeled http one party sends message ascii text consisting method name first line followed additional lines containing headers passing parameters many headers taken mime allow sip interwork existing internet applications six methods defined core specification listed method description invite request initiation session ack confirm session initiated bye request termination session options query host capabilities cancel cancel pending request register inform redirection server user current location sip methods establish session caller either creates tcp connection callee sends invite message sends invite message udp packet cases headers second subsequent lines describe structure message body contains caller capabilities media types formats callee accepts call responds http type reply code three digit number using groups acceptance following reply code line callee also may supply information capabilities media types formats connection done using three way handshake caller responds ack message finish protocol confirm receipt message either party may request termination session sending message bye method side acknowledges session terminated options method used query machine capabilities typically used session initiated find machine even capable voice ip whatever type session contemplated sec streaming audio video register method relates sip ability track connect user away home message sent sip location server keeps track server later queried find user current location operation redirection illustrated caller sends invite message proxy server hide possible redirection proxy looks user sends invite message acts relay subsequent messages three way handshake lookup reply messages part sip convenient protocol used depending kind location server used caller reply lookup location server proxy callee invite ok ack invite ok ack data use proxy server redirection sip sip variety features describe including call waiting call screening encryption authentication also ability place calls computer ordinary telephone suitable gateway internet telephone system available comparison h sip h sip allow two party multiparty calls using computers telephones end points support parameter negotiation encryption rtp rtcp protocols summary similarities differences given although feature sets similar two protocols differ widely philosophy h typical heavyweight telephone industry standard specifying complete protocol stack defining precisely allowed forbidden approach leads well defined protocols layer easing task interoperability price paid large complex rigid standard difficult adapt future applications contrast sip typical internet protocol works exchanging short lines ascii text lightweight module interworks well internet protocols less well existing telephone system signaling protocols 734 application layer item h sip designed itu ietf compatibility pstn yes largely compatibility internet yes time yes architecture monolithic modular completeness full protocol stack sip handles setup parameter negotiation yes yes call signaling q tcp sip tcp udp message format binary ascii media transport rtp rtcp rtp rtcp multiparty calls yes yes multimedia conferences yes addressing url phone number url call termination explicit tcp release explicit timeout instant messaging yes encryption yes yes size standards pages pages implementation large complex moderate issues status widespread esp video alternative esp voice comparison h sip ietf model voice ip highly modular flexible adapted new applications easily downside suffered ongoing interoperability problems people try interpret standard means content delivery internet used communication like telephone network early academics would communicate remote machines logging network perform tasks people used email communicate long time use video voice ip well since web grew however internet become content communication many people use web find information tremendous amount peer peer file sharing driven access movies music programs switch content pronounced majority internet bandwidth used deliver stored videos sec content delivery task distributing content different communication places different requirements network example sally wants talk jitu may make voice ip call mobile communication must particular computer good call paul computer jitu wants watch team latest cricket match happy stream video whichever computer provide service mind whether computer sally paul likely unknown server internet location matter content except affects performance legality difference web sites provide content become tremendously popular youtube prime example allows users share videos creation every conceivable topic many people want rest us want watch bandwidth hungry videos estimated youtube accounts internet traffic today single server powerful reliable enough handle startling level demand instead youtube large content providers build content distribution networks networks use data centers spread around world serve content extremely large number clients good performance availability techniques used content distribution developed time early growth web popularity almost undoing demands content led servers networks frequently overloaded many people began call www world wide wait response consumer demand large amounts bandwidth provisioned core internet faster broadband connectivity rolled edge network bandwidth key improving performance part solution reduce endless delays researchers also developed different architectures use bandwidth distributing content one architecture cdn content distribution network provider sets distributed collection machines locations inside internet uses serve content clients choice big players alternative architecture p2p peer peer network collection computers pool resources serve content without separately provisioned servers central point control idea captured people imagination acting together many little players pack enormous punch section look problem distributing content internet solutions used practice briefly discussing content popularity internet traffic describe build powerful web servers use caching improve performance web clients come two main architectures distributing content cdns p2p networks design properties quite different see 736 application layer content internet traffic design engineer networks work well need understanding traffic must carry shift content example servers migrated company offices internet data centers provide large numbers machines excellent network connectivity run even small server nowadays easier cheaper rent virtual server hosted internet data center operate real machine home office broadband connectivity internet fortunately two facts internet traffic essential know first fact changes quickly details overall makeup traffic traditional ftp file transfer moving programs data sets computers email web arrived grew exponentially web traffic left ftp email traffic dust long dot com bubble starting around p2p file sharing music movies took internet traffic p2p traffic leaving web dust sometime late 2000s video streamed using content distribution methods sites like youtube began exceed p2p traffic cisco predicts internet traffic video one form another cisco always traffic volume matters instance voice ip traffic boomed even skype started always minor blip chart bandwidth requirements audio two orders magnitude lower video however voice ip traffic stresses network ways sensitive latency another example online social networks grown furiously since facebook started first time facebook reached users web per day google even putting traffic aside awful lot traffic online social networks important changing way people interact via internet point making seismic shifts internet traffic happen quickly regularity come next please check back 6th edition book let know second essential fact internet traffic highly skewed many properties familiar clustered around average instance adults close average height tall people short people tall short people kinds properties possible design range large nonetheless captures majority population internet traffic like long time known small number web sites massive traffic vast number web site much smaller traffic feature become part language networking early papers talked traffic terms packet trains idea sec content delivery express trains large number packets would suddenly travel link jain routhier formalized notion selfsimilarity purposes thought network traffic exhibits many short many long gaps even viewed different time scales leland et al later work spoke long traffic flows elephants short traffic flows mice idea elephants many mice elephants matter big returning web content sort skew evident experience video rental stores public libraries organizations shows items equally popular experimentally n movies available fraction requests kth popular one approximately c k c computed normalize sum namely c n thus popular movie seven times popular number seven movie result known zipf law zipf named george zipf professor linguistics harvard university noted frequency word usage large body text inversely proportional rank example 40th common word used twice much 80th common word three times much 120th common word zipf distribution shown captures notion small number popular items great many unpopular items recognize distributions form convenient plot data log scale axes shown b result straight line relative frequency relative frequency rank rank b zipf distribution linear scale b log log scale people looked popularity web pages also turned roughly follow zipf law breslau et al zipf distribution one example family distributions known power laws power laws evident 738 application layer many human phenomena distribution city populations wealth propensity describe large players great many smaller players appear straight line log log plot soon discovered topology internet could roughly described power laws faloutsos et al next researchers began plotting every imaginable property internet log scale observing straight line shouting power law however matters straight line log log plot distributions mean design use networks given many forms content zipf power law distributions seems fundamental web sites internet zipf like popularity turn means average site useful representation sites better described either popular unpopular kinds sites matter popular sites obviously matter since popular sites may responsible traffic internet perhaps surprisingly unpopular sites matter total amount traffic directed unpopular sites add large fraction overall traffic reason many unpopular sites notion collectively many unpopular choices matter popularized books long tail anderson 2008a curves showing decay like common particular situations rate decay proportional much material left unstable radioactive atoms exhibit exponential decay drops much faster zipf law number items say atoms left time usually expressed e constant determines fast decay difference exponential decay zipf law exponential decay safe ignore end tail zipf law total weight tail significant ignored work effectively skewed world must able build kinds web sites unpopular sites easy handle using dns many different sites may actually point computer internet runs sites hand popular sites difficult handle single computer even remotely powerful enough using single computer would make site inaccessible millions users fails handle sites must build content distribution systems start quest next server farms web proxies web designs seen far single server machine talking multiple client machines build large web sites perform well speed processing either server side client side server side powerful web servers built server farm cluster computers acts single server client side better performance sec content delivery achieved better caching techniques particular proxy caches provide large shared cache group clients describe techniques turn however note neither technique sufficient build largest web sites popular sites require content distribution methods describe following sections combine computers many different locations server farms matter much bandwidth one machine serve many web requests load great solution case use one computer make web server leads server farm model internet access balances load across servers backend database front end server farm servers clients server farm difficulty seemingly simple model set computers make server farm must look like single logical web site clients set different web sites run parallel several possible solutions make set servers appear one web site solutions assume servers handle request client server must copy web site servers shown connected common back end database dashed line purpose one solution use dns spread requests across servers server farm dns request made web url dns server returns rotating list ip addresses servers client tries one ip address typically first list effect different clients contact different servers access web site intended dns method heart cdns revisit later section solutions based front end sprays incoming requests pool servers server farm happens even client 740 application layer contacts server farm using single destination ip address front end usually link layer switch ip router device handles frames packets solutions based servers peeking network transport application layer headers using nonstandard ways web request response carried tcp connection work correctly front end must distribute packets request server simple design front end broadcast incoming requests servers server answers fraction requests prior agreement example servers might look source ip address reply request last bits source ip address match configured selectors packets discarded wasteful incoming bandwidth often responses much longer request nearly inefficient sounds general design front end may inspect ip tcp http headers packets arbitrarily map server mapping called load balancing policy goal balance workload across servers policy may simple complex simple policy might use servers one turn round robin approach front end must remember mapping request subsequent packets part request sent server also make site reliable single server front end notice servers failed stop sending requests much like nat general design perilous least fragile created device violates basic principle layered protocols layer must use header control purposes may inspect use information payload purpose people design systems anyway break future due changes higher layers tend surprised front end case switch router may take action based transport layer information higher box called middlebox interposes middle network path business according protocol stack case front end best considered internal part server farm terminates layers application layer hence use header information layers nonetheless nat design useful practice reason looking tcp headers possible better job load balancing ip information alone example one ip address may represent entire company make many requests looking tcp higherlayer information requests mapped different servers reason looking http headers somewhat different many web interactions access update databases customer looks recent purchase server fields request query back end database useful direct subsequent requests user sec content delivery server server already cached information user simplest way cause happen use web cookies information distinguish user inspect http headers find cookies final note although described design web sites server farm built kinds servers well example servers streaming media udp change required front end able load balance requests different protocol header fields web requests web proxies web requests responses sent using http sec described browsers cache responses reuse answer future requests various header fields rules used browser determine cached copy web page still fresh repeat material caching improves performance shortening response time reducing network load browser determine cached page fresh page fetched cache immediately network traffic however even browser must ask server confirmation page still fresh response time shortened network load reduced especially large pages since small message needs sent however best browser cache web pages user previously visited discussion popularity may recall well popular pages many people visit repeatedly many many unpopular pages practice limits effectiveness browser caching large number pages visited given user pages always fetched server one strategy make caches effective share cache among multiple users way page already fetched one user returned another user user makes request without browser caching users would need fetch page server course sharing done encrypted traffic pages require authentication uncacheable pages e g current stock prices returned programs dynamic pages created programs especially growing case caching effective nonetheless plenty web pages visible many users look matter user makes request e g images web proxy used share cache among users proxy agent acts behalf someone else user many kinds proxies instance arp proxy replies arp requests behalf user elsewhere reply web proxy fetches web requests behalf users normally provides caching web responses since shared across users substantially larger cache browser 742 application layer proxy used typical setup organization operate one web proxy users organization might company isp stand benefit speeding web requests users reducing bandwidth needs flat pricing independent usage common end users companies isps charged according bandwidth use setup shown use proxy browser configured make page requests proxy instead page real server proxy page returns page immediately fetches page server adds cache future use returns client requested browser cache organization internet proxy cache servers clients proxy cache web browsers web servers well sending web requests proxy instead real server clients perform caching using browser cache proxy consulted browser tried satisfy request cache proxy provides second level caching proxies may added provide additional levels caching proxy browser makes requests via upstream proxy upstream proxy caches downstream proxies browsers thus possible browsers company use company proxy uses isp proxy contacts web servers directly however single level proxy caching shown often sufficient gain potential benefits practice problem long tail popularity studies web traffic shown shared caching especially beneficial number users reaches size small company say people number people grows larger benefits sharing cache become marginal unpopular requests cached due lack storage space wolman et al web proxies provide additional benefits often factor decision deploy one benefit filter content administrator may configure sec content delivery proxy blacklist sites otherwise filter requests makes example many administrators frown employees watching youtube videos worse yet pornography company time set filters accordingly another benefit proxies privacy anonymity proxy shields identity user server content delivery networks server farms web proxies help build large sites improve web performance sufficient truly popular web sites must serve content global scale sites different approach needed cdns content delivery networks turn idea traditional web caching head instead clients look copy requested page nearby cache provider places copy page set nodes different locations directs client use nearby node server example path data follows distributed cdn shown tree origin server cdn distributes copy content nodes cdn sydney boston amsterdam example shown dashed lines clients fetch pages nearest node cdn shown solid lines way clients sydney fetch page copy stored sydney fetch page origin server may europe cdn origin server distribution cdn nodes cdn node sydney page fetch boston amsterdam worldwide clients cdn distribution tree using tree structure three virtues first content distribution scaled many clients needed using nodes cdn levels tree distribution among cdn nodes becomes bottleneck matter many clients tree structure efficient origin server overloaded talks many clients via tree 744 application layer cdn nodes answer request page second client gets good performance fetching pages nearby server instead distant server round trip time setting connection shorter tcp slow start ramps quickly shorter round trip time shorter network path less likely pass regions congestion internet finally total load placed network also kept minimum cdn nodes well placed traffic given page pass part network important someone pays network bandwidth eventually idea using distribution tree straightforward less simple organize clients use tree example proxy servers would seem provide solution looking client configured use sydney boston amsterdam cdn node caching web proxy distribution would follow tree however strategy falls short practice three reasons first reason clients given part network probably belong different organizations probably using different web proxies recall caches usually shared across organizations limited benefit caching large number clients security reasons second multiple cdns client uses single proxy cache cdn client use proxy finally perhaps practical issue web proxies configured clients may may configured benefit content distribution cdn little cdn another simple way support distribution tree one level use mirroring approach origin server replicates content cdn nodes cdn nodes different network regions called mirrors web pages origin server contain explicit links different mirrors usually telling user location design lets user manually select nearby mirror use downloading content typical use mirroring place large software package mirrors located example east west coasts u asia europe mirrored sites generally completely static choice sites remains stable months years tried tested technique however depend user distribution mirrors really different web sites even linked together third approach overcomes difficulties previous two approaches uses dns called dns redirection suppose client wants fetch page url http www cdn com page html fetch page browser use dns resolve www cdn com ip address dns lookup proceeds usual manner using dns protocol browser learns ip address name server cdn com contacts name server ask resolve www cdn com comes really clever bit name server run cdn instead returning ip address request look ip address client making request return sec content delivery different answers answer ip address cdn node nearest client client sydney asks cdn name server resolve www cdn com name server return ip address sydney cdn node client amsterdam makes request name server return ip address amsterdam cdn node instead strategy perfectly legal according semantics dns previously seen name servers may return changing lists ip addresses name resolution sydney client fetch page directly sydney cdn node pages server fetched directly sydney cdn node well dns caching overall sequence steps shown sydney cdn node cdn origin server amsterdam cdn node distribute content fetch page query dns contact sydney sydney clients cdn dns server contact amsterdam amsterdam clients directing clients nearby cdn nodes using dns complex question process means find nearest cdn node go define nearest really geography matters least two factors consider mapping client cdn node one factor network distance client short high capacity network path cdn node situation produce quick downloads cdns use map previously computed translate ip address client network location cdn node selected might one shortest distance crow flies might matters combination length network path capacity limits along second factor load already carried cdn node cdn nodes overloaded deliver slow responses like overloaded web server sought avoid first place thus may necessary balance load across cdn nodes mapping clients nodes slightly away lightly loaded techniques using dns content distribution pioneered akamai starting web groaning load early 746 application layer growth akamai first major cdn became industry leader probably even clever idea using dns connect clients nearby nodes incentive structure business companies pay akamai deliver content clients responsive web sites customers like use cdn nodes must placed network locations good connectivity initially meant inside isp networks isps benefit cdn node networks namely cdn node cuts amount upstream network bandwidth need must pay proxy caches addition cdn node improves responsiveness isp customers makes isp look good eyes giving competitive advantage isps cdn node benefits cost isp makes installing cdn node brainer isp thus content provider isp customers benefit cdn makes money since companies gotten business competitive industry multiple providers description implies companies build cdn instead use services cdn provider akamai actually deliver content let companies use service cdn need add one last step picture contract signed cdn distribute content behalf web site owner owner gives cdn content content pushed cdn nodes addition owner rewrites web pages link content instead linking content web site pages link content via cdn example scheme works consider source code fluffy video web page given preprocessing transformed b placed fluffy video server www fluffyvideo com index html user types url www fluffyvideo com browser dns returns ip address fluffy video web site allowing main html page fetched normal way user clicks hyperlinks browser asks dns look www cdn com lookup contacts cdn dns server returns ip address nearby cdn node browser sends regular http request cdn node example fluffyvideo koalas mpg url identifies page return starting path fluffyvideo cdn node separate requests different companies serves finally video returned user sees cute fluffy animals strategy behind split content hosted cdn entry pages hosted content owner gives content owner control letting cdn move bulk data entry pages tiny html text pages often link large files videos images precisely large files served cdn even though use cdn completely transparent users site looks performs faster sec content delivery html head title fluffy video title head body h1 fluffy video product list h1 p click free samples p href koalas mpg koalas today br href kangaroos mpg funny kangaroos br href wombats mpg nice wombats br body html html head title fluffy video title head body h1 fluffy video product list h1 p click free samples p href http www cdn com fluffyvideo koalas mpg koalas today br href http www cdn com fluffyvideo kangaroos mpg funny kangaroos br href http www cdn com fluffyvideo wombats mpg nice wombats br body html b original web page b page linking cdn another advantage sites using shared cdn future demand web site difficult predict frequently surges demand known flash crowds surge may happen latest product released fashion show event company otherwise news even web site previously unknown unvisited backwater suddenly become focus internet newsworthy linked popular sites since sites prepared handle massive increases traffic result many crash traffic surges case point normally florida secretary state web site busy place although look information florida corporations notaries cultural affairs well information voting elections odd reason nov date u presidential election bush vs gore whole lot people suddenly interested election results page site site suddenly became one busiest web sites world naturally crashed result using cdn would probably survived using cdn site access large content serving capacity largest cdns tens thousands servers deployed countries world since small number sites experiencing flash crowd 748 application layer one time definition sites may use cdn capacity handle load storm passes cdn quickly scale site serving capacity preceding discussion simplified description akamai works many details matter practice cdn nodes pictured example normally clusters machines dns redirection done two levels one map clients approximate network location another spread load nodes location reliability performance concerns able shift client one machine cluster another dns replies second level given short ttls client repeat resolution short finally concentrated distributing static objects like images videos cdns also support dynamic page creation streaming media information cdns see dilley et al peer peer networks everyone set node cdn locations around world distribute content actually hard rent virtual machines around globe well developed competitive hosting industry however setting cdn starts getting nodes luckily alternative rest us simple use distribute tremendous amount content p2p peer peer network p2p networks burst onto scene starting first widespread application mass crime million napster users exchanging copyrighted songs without copyright owners permission napster shut courts amid great controversy nevertheless peer peer technology many interesting legal uses systems continued development great interest users p2p traffic quickly eclipsed web traffic today bittorrent popular p2p protocol used widely share licensed public domain videos well content accounts large fraction internet traffic look section basic idea p2p peer peer file sharing network many computers come together pool resources form content distribution system computers often simply home computers need machines internet data centers computers called peers one alternately act client another peer fetching content server providing content peers makes peer peer systems interesting dedicated infrastructure unlike cdn everyone participates task distributing content often central point control many people excited p2p technology seen empowering little guy reason takes large company run sec content delivery cdn anyone computer join p2p network p2p networks formidable capacity distribute content match largest web sites consider p2p network made n average users broadband connectivity mbps aggregate upload capacity p2p network rate users send traffic internet n mbps download capacity rate users receive traffic also n mbps user upload download time mbps link direction obvious true turns capacity used productively distribute content even case sharing single copy file users see imagine users organized binary tree non leaf user sending two users tree carry single copy file users use upload bandwidth many users possible times hence distribute large file low latency need pipeline network activity users imagine file divided pieces user receive new piece somewhere tree send previously received piece tree time way pipeline started small number pieces equal depth tree sent non leaf users busy uploading file users since approximately n non leaf users upload bandwidth tree n mbps repeat trick create another tree uses n mbps upload bandwidth swapping roles leaf non leaf nodes together construction uses capacity argument means p2p networks self scaling usable upload capacity grows tandem download demands made users always large enough sense without need dedicated infrastructure contrast capacity even large web site fixed either large small consider site clusters capable gbps enormous capacity help small number users site get information n users rate faster n mbps limit users web site one million mbps users web site pump data fast enough keep users busy downloading may seem like large number users large bittorrent networks e g pirate bay claim 000 users like terabits sec terms example take back envelope numbers grain better yet metric ton salt oversimplify situation significant challenge p2p networks use bandwidth well users come shapes sizes different download upload capacities nevertheless numbers indicate enormous potential p2p 750 application layer another reason p2p networks important cdns centrally run services put providers position trove personal information many users browsing preferences people shop online people locations email addresses information used provide better personalized service used intrude people privacy latter may happen either intentionally say part new product accidental disclosure compromise p2p systems single provider capable monitoring entire system mean p2p systems necessarily provide privacy users trusting extent means provide different form privacy centrally managed systems p2p systems explored services beyond file sharing e g storage streaming time tell whether advantage significant p2p technology followed two related paths developed practical side systems used every day well known systems based bittorrent protocol academic side intense interest dht distributed hash table algorithms let p2p systems perform well whole yet rely centralized components look technologies bittorrent bittorrent protocol developed brahm cohen let set peers share files quickly easily dozens freely available clients speak protocol many browsers speak http protocol web servers protocol available open standard www bittorrent org typical peer peer system like formed bittorrent users information may interest users information may free software music videos photographs three problems need solved share content setting peer find peers content wants download content replicated peers provide high speed downloads everyone peers encourage upload content others well download content first problem exists peers content least initially approach taken bittorrent every content provider create content description called torrent torrent much smaller sec content delivery content used peer verify integrity data downloads peers users want download content must first obtain torrent say finding web page advertising content torrent file specified format contains two key kinds information one kind name tracker server leads peers content torrent kind information list equal sized pieces chunks make content different chunk sizes used different torrents typically kb kb torrent file contains name chunk given bit sha hash chunk cover cryptographic hashes sha chap think hash longer secure checksum given size chunks hashes torrent file least three orders magnitude smaller content transferred quickly download content described torrent peer first contacts tracker torrent tracker server maintains list peers actively downloading uploading content set peers called swarm members swarm contact tracker regularly report still active well leave swarm new peer contacts tracker join swarm tracker tells peers swarm getting torrent contacting tracker first two steps downloading content shown get torrent metafile unchoked peers torrent trade chunks peers get peers tracker peer source content tracker seed peer bittorrent second problem share content way gives rapid downloads swarm first formed peers must chunks make content peers called seeders peers join swarm chunks peers downloading content peer participates swarm simultaneously downloads chunks missing peers uploads chunks peers 752 application layer need trading shown last step content distribution fig time peer gathers chunks downloaded content peer leave swarm return time normally peer stay short period finishes download peers coming going rate churn swarm quite high method work well chunk available many peers everyone get chunks order likely many peers would depend seeders next chunk would create bottleneck instead peers exchange lists chunks select rare chunks hard find download idea downloading rare chunk make copy make chunk easier peers find download peers short chunks widely available third problem perhaps interesting cdn nodes set exclusively provide content users p2p nodes users computers users may interested getting movie helping users downloads nodes take resources system without contributing kind called free riders leechers many system function well earlier p2p systems known host saroiu et al bittorrent sought minimize approach taken bittorrent clients reward peers show good upload behavior peer randomly samples peers retrieving chunks uploads chunks peer continues trade chunks small number peers provide highest download performance also randomly trying peers find good partners randomly trying peers also allows newcomers obtain initial chunks trade peers peers node currently exchanging chunks said unchoked time algorithm intended match peers comparable upload download rates peer contributing peers expect return using set peers also helps saturate peer download bandwidth high performance conversely peer uploading chunks peers slowly cut choked sooner later strategy discourages antisocial behavior peers free ride swarm choking algorithm sometimes described implementing tit tat strategy encourages cooperation repeated interactions however prevent clients gaming system strong sense piatek et al nonetheless attention issue mechanisms make difficult casual users free ride likely contributed success bittorrent see discussion bittorrent comes rich vocabulary torrents swarms leechers seeders trackers well snubbing sec content delivery choking lurking information see short paper bittorrent cohen look web starting www bittorrent org dhts distributed hash tables emergence p2p file sharing networks around sparked much interest research community essence p2p systems avoid centrally managed structures cdns systems significant advantage centrally managed components become bottleneck system grows large single point failure central components also used point control e g shut p2p network however early p2p systems partly decentralized fully decentralized inefficient traditional form bittorrent described uses peer peer transfers centralized tracker swarm tracker turns hard part decentralize peer peer system key problem find peers specific content sought example user might one data items songs photographs programs files users might want read users find making one index simple centralized every peer keep index help true distributed however requires much work keep indexes peers date content moved system worth effort question tackled research community whether possible build p2p indexes entirely distributed performed well perform well mean three things first node keeps small amount information nodes property means expensive keep index date second node look entries index quickly otherwise useful index third node use index time even nodes come go property means performance index grows number nodes answer question yes four different solutions invented chord stoica et al ratnasamy et al pastry rowstron druschel tapestry zhao et al solutions invented soon afterwards including kademlia used practice maymounkov mazieres solutions known dhts distributed hash tables basic functionality index map key value like hash table solutions distributed versions course dhts work imposing regular structure communication nodes see behavior quite different traditional p2p networks use whatever connections peers happen make 754 application layer reason dhts called structured p2p networks traditional p2p protocols build unstructured p2p networks dht solution describe chord scenario consider replace centralized tracker traditionally used bittorrent fully distributed tracker chord used solve problem scenario overall index listing swarms computer may join download content key used look index torrent description content uniquely identifies swarm content downloaded hashes content chunks value stored index key list peers comprise swarm peers computers contact download content person wanting download content movie torrent description question dht must answer lacking central database person find peers millions bittorrent nodes download movie chord dht consists n participating nodes nodes running bittorrent scenario node ip address may contacted overall index spread across nodes implies node stores bits pieces index use nodes key part chord navigates index using identifiers virtual space ip addresses nodes names content like movies conceptually identifiers simply bit numbers arranged ascending order ring turn node address identifier mapped bit number using hash function hash chord uses sha hash hash mentioned describing bittorrent look discuss cryptography chap suffice say function takes variable length byte string argument produces highly random bit number thus use convert ip address bit number called node identifier show node identifier circle ignore arcs middle moment identifiers correspond nodes example nodes identifiers correspond actual nodes shaded figure rest exist let us define function successor k node identifier first actual node following k around circle clockwise example successor successor successor key also produced hashing content name hash e sha generate bit number scenario content name torrent thus order convert torrent torrent description file key compute key hash torrent computation local procedure call hash start new swarm node needs insert new key value pair consisting torrent ip address index accomplish node asks successor hash torrent store ip address way index distributed nodes random fault tolerance p different hash functions 2 node finger table node finger table ddr su cc es ip ar r st ip node identifier ar st ddr su cc es ddr su cc es r ar ip actual node content delivery st node finger table b set node identifiers arranged circle shaded ones correspond actual machines arcs show fingers nodes labels arcs table indices b examples finger tables could used store data p nodes consider subject fault tolerance time dht constructed another node wants find torrent join swarm download content node looks torrent first hashing get key second using successor key find ip address node storing corresponding value value list peers swarm node add ip address list contact peers download content bittorrent protocol first step easy second one easy make possible find ip address node corresponding certain key node required 756 application layer maintain certain administrative data structures one ip address successor node along node identifier circle example node successor node successor lookup proceed follows requesting node sends packet successor containing ip address key looking packet propagated around ring locates successor node identifier sought node checks see information matching key returns directly requesting node whose ip address however linearly searching nodes inefficient large peerto peer system since mean number nodes required per search n greatly speed search node also maintains chord calls finger table finger table entries indexed one pointing different actual node entries two fields start ip address successor start shown three example nodes b values fields entry node identifier k start k 2i modulo 2m ip address successor start note node stores ip addresses relatively small number nodes fairly close terms node identifier using finger table lookup key node k proceeds follows key falls k successor k node holding information key successor k search terminates otherwise finger table searched find entry whose start field closest predecessor key request sent directly ip address finger table entry ask continue search since closer key still chances good able return answer small number additional queries fact since every lookup halves remaining distance target shown average number lookups log2 n first example consider looking key node since node knows lies successor desired node search terminates returning node ip address second example consider looking key node since lie finger table consulted closest predecessor request forwarded ip address entry namely node node also know answer looks node closely preceding finds yields ip address node query sent node observes lies successor returns ip address caller works way back node since nodes join leave time chord needs way handle operations assume system began operation small enough nodes could exchange information directly build first circle sec content delivery finger tables automated procedure needed new node r wants join must contact existing node ask look ip address successor r next new node asks successor r predecessor new node asks insert r circle example wants join asks node look successor asks predecessor tells existence uses successor uses predecessor addition node hands keys range 24 belong point fully inserted however many finger tables wrong correct every node runs background process periodically recomputes finger calling successor one queries hits new node corresponding finger entry updated node leaves gracefully hands keys successor informs predecessor departure predecessor link departing node successor node crashes problem arises predecessor longer valid successor alleviate problem node keeps track direct successor also direct successors allow skip consecutive failed nodes reconnect circle disaster strikes tremendous amount research dhts since invented give idea much research let us pose question cited networking paper time find difficult come paper cited seminal chord paper stoica et al despite veritable mountain research applications dhts slowly beginning emerge bittorrent clients use dhts provide fully distributed tracker kind described large commercial cloud services amazon dynamo also incorporate dht techniques decandia et al summary naming arpanet started simple way ascii text file listed names hosts corresponding ip addresses every night machines downloaded file arpanet morphed internet exploded size far sophisticated dynamic naming scheme required one used hierarchical scheme called domain name system organizes machines internet set trees top level well known generic domains including com edu well country domains dns implemented distributed database servers world querying dns server process 758 application layer map internet domain name onto ip address used communicate computer domain email original killer app internet still widely used everyone small children grandparents email systems world use mail system defined rfcs messages simple ascii headers many kinds content sent using mime mail submitted message transfer agents delivery retrieved presentation variety user agents including web applications submitted mail delivered using smtp works making tcp connection sending message transfer agent receiving one web application people think internet originally system seamlessly linking hypertext pages written html across machines pages downloaded making tcp connection browser server using http nowadays much content web produced dynamically either server e g php browser e g javascript combined back end databases dynamic server pages allow web applications e commerce search dynamic browser pages evolving full featured applications email run inside browser use web protocols communicate remote servers caching persistent connections widely used enhance web performance using web mobile devices challenging despite growth bandwidth processing power mobiles web sites often send tailored versions pages smaller images less complex navigation devices small displays web protocols increasingly used machine machine communication xml preferred html description content easy machines process soap rpc mechanism sends xml messages using http digital audio video key drivers internet since majority internet traffic today video much streamed web sites mix protocols including rtp udp rtp http tcp live media streamed many consumers includes internet radio tv stations broadcast manner events audio video also used real time conferencing many calls use voice ip rather traditional telephone network include videoconferencing small number tremendously popular web sites well large number less popular ones serve popular sites content distribution networks deployed cdns use dns direct clients nearby server servers placed data centers around world alternatively p2p networks let collection machines share content movies among provide content distribution capacity scales number machines p2p network rival largest sites chap problems problems many business computers three distinct worldwide unique identifiers period laserjet consider situation cyberterrorist makes dns servers world crash simultaneously change one ability use internet dns uses udp instead tcp dns packet lost automatic recovery cause problem solved john wants original domain name uses randomized program generate secondary domain name wants register domain name com generic domain domain name generated characters long com registrar allow domain name registered machine single dns name multiple ip addresses could occur number companies web site grown explosively recent years result thousands companies registered com domain causing heavy load top level server domain suggest way alleviate problem without changing naming scheme e without introducing new top level domain names permitted solution requires changes client code email systems support content return header field specifies whether body message returned event nondelivery field belong envelope header electronic mail systems need directories people email addresses looked build directories names broken standard components e g first name last name make searching possible discuss problems must solved worldwide standard acceptable large law firm many employees provides single email address employee employee email address login lawfirm com however firm explicitly define format login thus employees use first names login names use last names use initials etc firm wishes make fixed format example firstname lastname lawfirm com used email addresses employees done without rocking boat much binary file bytes long long encoded using base64 encoding cr lf pair inserted every bytes sent end name five mime types listed book check browser internet information 760 problems suppose want send mp3 file friend friend isp limits size incoming message mb mp3 file mb way handle situation using rfc mime suppose john set auto forwarding mechanism work email address receives business related emails forward personal email address shares wife john wife unaware activated vacation agent personal account john forwarded email set vacation daemon work machine happens email received john work email address standard rfc precise grammar allowed needed different implementations interwork even simple items defined carefully smtp headers allow white space tokens give two plausible alternative definitions white space tokens vacation agent part user agent message transfer agent course set using user agent user agent actually send replies explain answer simple version chord algorithm peer peer lookup searches use finger table instead linear around circle either direction node accurately predict direction search discuss answer imap allows users fetch download email remote mailbox mean internal format mailboxes standardized imap program client side read mailbox mail server discuss answer consider chord circle suppose node suddenly goes online finger tables shown figure affected webmail use pop3 imap neither one one chosen neither one closer spirit web pages sent prefixed mime headers possible user clicks link firefox particular helper started clicking link internet explorer causes completely different helper started even though mime type returned cases identical explain answer although mentioned text alternative form url use ip address instead dns name use information explain dns name end digit imagine someone math department stanford written new document including proof wants distribute ftp colleagues review puts program ftp directory ftp pub forreview newproof pdf url program likely www aportal com keeps track user preferences cookie disadvantage scheme cookies limited kb preferences chap problems extensive example many stocks sports teams types news stories weather multiple cities specials numerous product categories kb limit may reached design alternative way keep track preferences problem sloth bank wants make online banking easy lazy customers customer signs authenticated password bank returns cookie containing customer id number way customer identify type password future visits online bank think idea work good idea consider following html tag h1 title header header h1 conditions browser use title attribute b title attribute differ alt attribute make image clickable html give example write html page includes link email address username domainname com happens user clicks link write xml page university registrar listing multiple students name address gpa following applications tell whether would possible better use php script javascript displaying calendar requested month since september b displaying schedule flights amsterdam new york c graphing polynomial user supplied coefficients write program javascript accepts integer greater tells whether prime number note javascript statements syntax c java modulo operator need square root x use math sqrt x html page follows html body href www info source com welcome html click info body html user clicks hyperlink tcp connection opened series lines sent server list lines sent modified since header used check whether cached page still valid requests made pages containing images sound video well html think effectiveness technique better worse jpeg images compared html think carefully effectiveness means explain answer day major sporting event championship game popular sport many people go official web site flash crowd sense florida presidential election 762 problems make sense single isp function cdn would work wrong idea assume compression used audio cds many mb data must compact disc contain order able play two hours music c quantization noise occurs due use bit samples represent nine signal values first sample exact next percent error samples 32 32 32 period could psychoacoustic model used reduce bandwidth needed internet telephony conditions would met make work audio streaming server one way distance msec media player outputs mbps media player mb buffer say position low water mark high water mark voice ip problems firewalls streaming audio discuss answer bit rate transmitting uncompressed pixel color frames bits pixel frames sec bit error mpeg frame affect frame error occurs explain answer consider 000 customer video server customer watches three movies per month two thirds movies served p many movies server transmit time period movie requires mbps many oc connections server need network suppose zipf law holds accesses 000 movie video server server holds popular movies memory remaining disk give expression fraction references memory write little program evaluate expression numerically cybersquatters registered domain names misspellings common corporate sites example www microsfot com make list least five domains numerous people registered dns names consist www word com word common word following categories list five web sites briefly summarize e g www stomach com belongs gastroenterologist long island list categories animals foods household objects body parts last category please stick body parts waist rewrite server true web server using get command http also accept host message server maintain cache files recently fetched disk serve requests cache possible 8 network security first decades existence computer networks primarily used university researchers sending email corporate employees sharing printers conditions security get lot attention millions ordinary citizens using networks banking shopping filing tax returns weakness weakness found network security become problem massive proportions chapter study network security several angles point numerous pitfalls discuss many algorithms protocols making networks secure security broad topic covers multitude sins simplest form concerned making sure nosy people read worse yet secretly modify messages intended recipients concerned people trying access remote services authorized use also deals ways tell whether message purportedly irs pay friday else really irs mafia security also deals problems legitimate messages captured replayed people later trying deny sent certain messages security problems intentionally caused malicious people trying gain benefit get attention harm someone common perpetrators listed clear list making network secure involves lot keeping free programming errors involves outsmarting often intelligent dedicated sometimes wellfunded adversaries also clear measures thwart casual 764 network security attackers little impact serious ones police records show damaging attacks perpetrated outsiders tapping phone line insiders bearing grudge security systems designed accordingly adversary goal student fun snooping people email cracker test someone security system steal data sales rep claim represent europe andorra corporation discover competitor strategic marketing plan ex employee get revenge fired accountant embezzle money company stockbroker deny promise made customer email identity thief steal credit card numbers sale government learn enemy military industrial secrets terrorist steal biological warfare secrets people may cause security problems network security problems divided roughly four closely intertwined areas secrecy authentication nonrepudiation integrity control secrecy also called confidentiality keeping information grubby little hands unauthorized users usually comes mind people think network security authentication deals determining talking revealing sensitive information entering business deal nonrepudiation deals signatures prove customer really placed electronic order ten million left handed doohickeys cents later claims price cents maybe claims never placed order finally integrity control sure message received really one sent something malicious adversary modified transit concocted issues secrecy authentication nonrepudiation integrity control occur traditional systems significant differences integrity secrecy achieved using registered mail locking documents robbing mail train harder jesse james day also people usually tell difference original paper document photocopy often matters test make photocopy valid check try cashing original check bank monday try cashing photocopy check tuesday observe difference bank behavior electronic checks original copy indistinguishable may take banks learn handle people authenticate people various means including recognizing faces voices handwriting proof signing handled signatures letterhead paper raised seals tampering usually detected 765 handwriting ink paper experts none options available electronically clearly solutions needed getting solutions worth spending moments considering protocol stack network security belongs probably one single place every layer something contribute physical layer wiretapping foiled enclosing transmission lines better yet optical fibers sealed tubes containing inert gas high pressure attempt drill tube release gas reducing pressure triggering alarm military systems use technique data link layer packets point point line encrypted leave one machine decrypted enter another details handled data link layer higher layers oblivious going solution breaks packets traverse multiple routers however packets decrypted router leaving vulnerable attacks within router also allow sessions protected e g involving online purchases credit card others nevertheless link encryption method called added network easily often useful network layer firewalls installed keep good packets bad packets ip security also functions layer transport layer entire connections encrypted end end process process maximum security end end security required finally issues user authentication nonrepudiation handled application layer since security fit neatly layer fit chapter book reason rates chapter chapter long technical essential also quasi irrelevant moment well documented security failures banks example due lax security procedures incompetent employees numerous implementation bugs enable remote break ins unauthorized users socalled social engineering attacks customers tricked revealing account details security problems prevalent clever criminals tapping phone lines decoding encrypted messages person walk random branch bank atm slip found street claiming forgotten pin get new one spot name good customer relations cryptography world prevent abuse respect ross anderson 2008a book real eye opener documents hundreds examples security failures numerous industries nearly due might politely called sloppy business practices inattention security nevertheless technical foundation e commerce built factors done well cryptography except physical layer security nearly network security based cryptographic principles reason begin study security 766 network security examining cryptography detail sec look basic principles sec sec examine fundamental algorithms data structures used cryptography examine detail concepts used achieve security networks conclude brief thoughts technology society starting one last thought order covered tried focus networking issues rather operating system application issues although line often hard draw example nothing user authentication using biometrics password security buffer overflow attacks trojan horses login spoofing code injection cross site scripting viruses worms like topics covered length chap modern operating systems tanenbaum interested reader referred book systems aspects security let us begin journey cryptography cryptography comes greek words secret writing long colorful history going back thousands years section sketch highlights background information follows complete history cryptography kahn book recommended reading comprehensive treatment modern security cryptographic algorithms protocols applications related material see kaufman et al mathematical approach see stinson less mathematical approach see burnett paine professionals make distinction ciphers codes cipher character character bit bit transformation without regard linguistic structure message contrast code replaces one word another word symbol codes used although glorious history successful code ever devised used u armed forces world war ii pacific simply navajo indians talking using specific navajo words military terms example chay dagahi nail tsaidi literally tortoise killer antitank weapon navajo language highly tonal exceedingly complex written form single person japan knew anything september san diego union described code saying three years wherever marines landed japanese got earful strange gurgling noises interspersed sounds resembling call tibetan monk sound hot water bottle emptied japanese never broke code many navajo code talkers awarded high military honors extraordinary service bravery fact u broke japanese code japanese never broke navajo code played crucial role american victories pacific sec cryptography introduction cryptography historically four groups people used contributed art cryptography military diplomatic corps diarists lovers military important role shaped field centuries within military organizations messages encrypted traditionally given poorly paid low level code clerks encryption transmission sheer volume messages prevented work done elite specialists advent computers one main constraints cryptography ability code clerk perform necessary transformations often battlefield little equipment additional constraint difficulty switching quickly one cryptographic method another one since entails retraining large number people however danger code clerk captured enemy made essential able change cryptographic method instantly need conflicting requirements given rise model passive intruder listens plaintext p active intruder alter messages intruder encryption method e decryption method plaintext p ciphertext c ek p encryption key k decryption key k encryption model symmetric key cipher messages encrypted known plaintext transformed function parameterized key output encryption process known ciphertext transmitted often messenger radio assume enemy intruder hears accurately copies complete ciphertext however unlike intended recipient know decryption key decrypt ciphertext easily sometimes intruder listen communication channel passive intruder also record messages play back later inject messages modify legitimate messages get receiver active intruder art 768 network security breaking ciphers known cryptanalysis art devising cryptography collectively known cryptology often useful notation relating plaintext ciphertext keys use c ek p mean encryption plaintext p using key k gives ciphertext c similarly p dk c represents decryption c get plaintext follows dk ek p p notation suggests e mathematical functions tricky part functions two parameters written one parameters key subscript rather argument distinguish message fundamental rule cryptography one must assume cryptanalyst knows methods used encryption decryption words cryptanalyst knows encryption method e decryption work detail amount effort necessary invent test install new algorithm every time old method compromised thought compromised always made impractical keep encryption algorithm secret thinking secret harm good key enters key consists relatively short string selects one many potential encryptions contrast general method may changed every years key changed often required thus basic model stable publicly known general method parameterized secret easily changed key idea cryptanalyst knows algorithms secrecy lies exclusively keys called kerckhoff principle named flemish military cryptographer auguste kerckhoff first stated kerckhoff thus kerckhoff principle algorithms must public keys secret nonsecrecy algorithm emphasized enough trying keep algorithm secret known trade security obscurity never works also publicizing algorithm cryptographer gets free consulting large number academic cryptologists eager break system publish papers demonstrating smart many experts tried break algorithm long time publication one succeeded probably pretty solid since real secrecy key length major design issue consider simple combination lock general principle enter digits sequence everyone knows key secret key length two digits means possibilities key length three digits means possibilities key length six digits means million longer key higher work factor cryptanalyst deal work factor breaking system exhaustive search key space exponential sec cryptography key length secrecy comes strong public algorithm long key prevent kid brother reading email bit keys routine commercial use least bits used keep major governments bay keys least bits preferably needed cryptanalyst point view cryptanalysis problem three principal variations quantity ciphertext plaintext confronted ciphertext problem cryptograms appear puzzle section newspapers pose kind problem cryptanalyst matched ciphertext plaintext problem called known plaintext problem finally cryptanalyst ability encrypt pieces plaintext choosing chosen plaintext problem newspaper cryptograms could broken trivially cryptanalyst allowed ask questions encryption abcdefghijkl novices cryptography business often assume cipher withstand ciphertext attack secure assumption naive many cases cryptanalyst make good guess parts plaintext example first thing many computers say call login equipped matched plaintext ciphertext pairs cryptanalyst job becomes much easier achieve security cryptographer conservative make sure system unbreakable even opponent encrypt arbitrary amounts chosen plaintext encryption methods historically divided two categories substitution ciphers transposition ciphers deal briefly background information modern cryptography substitution ciphers substitution cipher letter group letters replaced another letter group letters disguise one oldest known ciphers caesar cipher attributed julius caesar method becomes b becomes e c becomes f z becomes c example attack becomes dwwdfn examples plaintext given lowercase letters ciphertext uppercase letters slight generalization caesar cipher allows ciphertext alphabet shifted k letters instead always three case k becomes key general method circularly shifted alphabets caesar cipher may fooled pompey fooled anyone since next improvement symbols plaintext say letters simplicity map onto letter example plaintext ciphertext b c e f g h j k l mn p q r u vwx z qw e r u p f g h j k l z x c v b nm 770 network security general system symbol symbol substitution called monoalphabetic substitution cipher key letter string corresponding full alphabet key given plaintext attack would transformed ciphertext qzzqea first glance might appear safe system although cryptanalyst knows general system letter letter substitution know possible keys use contrast caesar cipher trying promising approach even nsec per solution million computer chips working parallel would take 000 years try keys nevertheless given surprisingly small amount ciphertext cipher broken easily basic attack takes advantage statistical properties natural languages english example e common letter followed n etc common two letter combinations digrams th er common three letter combinations trigrams ing ion cryptanalyst trying break monoalphabetic cipher would start counting relative frequencies letters ciphertext might tentatively assign common one e next common one would look trigrams find common one form txe strongly suggests x h similarly pattern thyt occurs frequently probably stands information look frequently occurring trigram form azw likely making guesses common letters digrams trigrams knowing likely patterns vowels consonants cryptanalyst builds tentative plaintext letter letter another approach guess probable word phrase example consider following ciphertext accounting firm blocked groups five characters ctbmn byctc bt jds qxbns gst jc btswx ctqtz cqvu j qj sgs jqzz mnqj vlnsx vsz j u jdsts jquus j ubx j dsksu j sntk bgaqj zbgyq lctz bnybn qj sw likely word message accounting firm financial using knowledge financial repeated letter four letters occurrences look repeated letters ciphertext spacing find hits positions however two next letter corresponding n plaintext repeated proper place two also correctly positioned know financial begins position point deducing key easy using frequency statistics english text looking nearly complete words finish sec cryptography transposition ciphers substitution ciphers preserve order plaintext symbols disguise transposition ciphers contrast reorder letters disguise depicts common transposition cipher columnar transposition cipher keyed word phrase containing repeated letters example megabuck key purpose key order columns column key letter closest start alphabet plaintext written horizontally rows padded fill matrix need ciphertext read columns starting column whose key letter lowest e g b u c k 1 6 p l e e r n f e r n e l l n l r w l b n k c c u n w b c x w plaintext pleasetransferonemilliondollarsto myswissbankaccountsixtwotwo ciphertext afllsksoselawaiatoossctclnmomant esilyntwrnntsowdpaedobuoeriricxb transposition cipher break transposition cipher cryptanalyst must first aware dealing transposition cipher looking frequency e n etc easy see fit normal pattern plaintext cipher clearly transposition cipher cipher every letter represents keeping frequency distribution intact next step make guess number columns many cases probable word phrase may guessed context example suppose cryptanalyst suspects plaintext phrase milliondollars occurs somewhere message observe digrams mo il la ir os occur ciphertext result phrase wrapping around ciphertext letter follows ciphertext letter e vertically adjacent column separated probable phrase distance equal key length key length seven used digrams md io ia ns would occurred instead fact key length different set digrams produced ciphertext hunting various possibilities cryptanalyst often easily determine key length 772 network security remaining step order columns number columns k small k k column pairs examined turn see digram frequencies match english plaintext pair best match assumed correctly positioned remaining columns tentatively tried successor pair column whose digram trigram frequencies give best match tentatively assumed correct next column found way entire process continued potential ordering found chances plaintext recognizable point e g milloin occurs clear error transposition ciphers accept fixed length block input produce fixed length block output ciphers completely described giving list telling order characters output example cipher seen character block cipher output words fourth input character first output followed twelfth f one time pads constructing unbreakable cipher actually quite easy technique known decades first choose random bit string key convert plaintext bit string example using ascii representation finally compute xor exclusive two strings bit bit resulting ciphertext broken sufficiently large sample ciphertext letter occur equally often every digram every trigram method known one time pad immune present future attacks matter much computational power intruder reason derives information theory simply information message possible plaintexts given length equally likely example one time pads used given first message love converted bit ascii one time pad pad chosen xored message get ciphertext cryptanalyst could try possible one time pads see plaintext came one example one time pad listed pad figure could tried resulting plaintext elvis lives may may plausible subject beyond scope book fact every character ascii plaintext one time pad generates mean saying information ciphertext get message correct length one time pads great theory number disadvantages practice start key memorized sender receiver must carry written copy either one subject capture written keys clearly undesirable additionally total amount data transmitted limited amount key available spy strikes rich discovers wealth data may find unable transmit back sec cryptography message 0100000 1101111 1100101 1111001 1110101 pad 1001011 1010101 1100011 0101010 1100110 ciphertext 1101011 0111010 0000110 1010011 0010011 pad 0000111 1010011 0100110 0111010 1110110 plaintext 1101100 1101001 0100000 1101001 1100101 use one time pad encryption possibility getting possible plaintext ciphertext use pad headquarters key used another problem sensitivity method lost inserted characters sender receiver get synchronization data appear garbled advent computers one time pad might potentially become practical applications source key could special dvd contains several gigabytes information transported dvd movie box prefixed minutes video would even suspicious course gigabit network speeds insert new dvd every sec could become tedious dvds must personally carried sender receiver messages sent greatly reduces practical utility quantum cryptography interestingly may solution problem transmit one time pad network comes unlikely source quantum mechanics area still experimental initial tests promising perfected made efficient virtually cryptography eventually done using one time pads since provably secure briefly explain method quantum cryptography works particular describe protocol called bb84 authors publication year bennet brassard suppose user alice wants establish one time pad second user bob alice bob called principals main characters story example bob banker alice would like business names alice bob used principals virtually every paper book cryptography since ron rivest introduced many years ago rivest et al cryptographers love tradition use andy barbara principals one would believe anything chapter alice bob could establish one time pad could use communicate securely question establish without previously exchanging dvds assume alice bob opposite ends 774 network security optical fiber send receive light pulses however intrepid intruder trudy cut fiber splice active tap trudy read bits sent directions also send false messages directions situation might seem hopeless alice bob quantum cryptography shed new light subject quantum cryptography based fact light comes little packets called photons peculiar properties furthermore light polarized passed polarizing filter fact well known sunglasses wearers photographers beam light e stream photons passed polarizing filter photons emerging polarized direction filter axis e g vertically beam passed second polarizing filter intensity light emerging second filter proportional square cosine angle axes two axes perpendicular photons get absolute orientation two filters matter angle axes counts generate one time pad alice needs two sets polarizing filters set one consists vertical filter horizontal filter choice called rectilinear basis basis plural bases coordinate system second set filters except rotated degrees one filter runs lower left upper right filter runs upper left lower right choice called diagonal basis thus alice two bases rapidly insert beam reality alice four separate filters crystal whose polarization switched electrically four allowed directions great speed bob equipment alice fact alice bob two bases available essential quantum cryptography basis alice assigns one direction example presented assume chooses vertical horizontal independently also chooses lower left upper right upper left lower right sends choices bob plaintext alice picks one time pad example based random number generator complex subject transfers bit bit bob choosing one two bases random bit send bit photon gun emits one photon polarized appropriately basis using bit example might choose bases diagonal rectilinear rectilinear diagonal rectilinear etc send one time pad bases would send photons shown given one time pad sequence bases polarization use bit uniquely determined bits sent one photon time called qubits bob know bases use picks one random arriving photon uses shown b picks correct basis gets correct bit picks incorrect basis gets random bit sec cryptography bit number data alice sends b bob bases c bob gets yes yes e yes yes yes yes yes yes onetime pad trudy bases f g correct basis x x x x x x x x trudy pad example quantum cryptography photon hits filter polarized degrees polarization randomly jumps polarization filter polarization perpendicular filter equal probability property photons fundamental quantum mechanics thus bits correct random bob know bob results depicted c bob find bases got right got wrong simply tells alice basis used bit plaintext tells right wrong plaintext shown information build bit string correct guesses shown e average bit string half length original bit string since parties know use one time pad alice transmit bit string slightly twice desired length bob one time pad desired length done wait minute forgot trudy suppose curious alice say cuts fiber inserting detector transmitter unfortunately know basis use photon either best pick one random photon bob example choices shown f bob later reports plaintext bases used alice tells plaintext ones 776 network security correct trudy knows got right got wrong got right bits knows alice reply bits part one time pad four bits guessed right captured correct bit four guessed wrong know bit transmitted thus bob knows one time pad starts e trudy g course alice bob aware trudy may captured part one time pad would like reduce information trudy performing transformation example could divide one time pad blocks bits square one form bit number use concatenation bit numbers one time pad partial knowledge bit string transmitted trudy way generate square nothing transformation original one time pad different one reduces trudy knowledge called privacy amplification practice complex transformations every output bit depends every input bit used instead squaring poor trudy idea one time pad presence secret either must relay received bit bob trick thinking talking alice trouble best transmit qubit received using polarization used receive half time wrong causing many errors bob one time pad alice finally starts sending data encodes using heavy forwarderror correcting code bob point view bit error one time pad bit transmission error either way gets wrong bit enough forward error correction recover original message despite errors easily count many errors corrected number far expected error rate equipment knows trudy tapped line act accordingly e g tell alice switch radio channel call police etc trudy way clone photon one photon inspect identical photon send bob could avoid detection present way clone photon perfectly known even trudy could clone photons value quantum cryptography establish onetime pads would reduced although quantum cryptography shown operate distances km fiber equipment complex expensive still idea promise information quantum cryptography see mullins two fundamental cryptographic principles although study many different cryptographic systems pages ahead two principles underlying important understand pay attention violate peril sec cryptography redundancy first principle encrypted messages must contain redundancy information needed understand message example may make clear needed consider mail order company couch potato tcp 000 products thinking efficient tcp programmers decide ordering messages consist 16byte customer name followed byte data field byte quantity bytes product number last bytes encrypted using long key known customer tcp first might seem secure sense passive intruders decrypt messages unfortunately also fatal flaw renders useless suppose recently fired employee wants punish tcp firing leaving takes customer list works night writing program generate fictitious orders using real customer names since list keys puts random numbers last bytes sends hundreds orders tcp messages arrive tcp computer uses customers name locate key decrypt message unfortunately tcp almost every 3byte message valid computer begins printing shipping instructions might seem odd customer order sets children swings sandboxes computer knows customer might planning open chain franchised playgrounds way active intruder exemployee cause massive amount trouble even though understand messages computer generating problem solved addition redundancy messages example order messages extended bytes first must zeros attack longer works ex employee longer generate large stream valid messages moral story messages must contain considerable redundancy active intruders send random junk interpreted valid message however adding redundancy makes easier cryptanalysts break messages suppose mail order business highly competitive couch potato main competitor sofa tuber would dearly love know many sandboxes tcp selling taps tcp phone line original scheme byte messages cryptanalysis nearly impossible guessing key cryptanalyst way telling whether right almost every message technically legal new byte scheme easy cryptanalyst tell valid message invalid one thus cryptographic principle messages must contain redundancy words upon decrypting message recipient must able tell whether valid simply inspecting message perhaps performing 778 network security simple computation redundancy needed prevent active intruders sending garbage tricking receiver decrypting garbage acting plaintext however redundancy makes much easier passive intruders break system tension furthermore redundancy never form n 0s start end message since running messages cryptographic algorithms gives predictable results making cryptanalysts job easier crc polynomial much better run 0s since receiver easily verify generates work cryptanalyst even better use cryptographic hash concept explore later moment think better crc getting back quantum cryptography moment also see redundancy plays role due trudy interception photons bits bob one time pad wrong bob needs redundancy incoming messages determine errors present one crude form redundancy repeating message two times two copies identical bob knows either fiber noisy someone tampering transmission course sending everything twice overkill hamming reed solomon code efficient way error detection correction clear redundancy needed distinguish valid message invalid message especially face active intruder freshness second cryptographic principle measures must taken ensure message received verified fresh sent recently measure needed prevent active intruders playing back old messages measures taken ex employee could tap tcp phone line keep repeating previously sent valid messages thus cryptographic principle method needed foil replay attacks one measure including every message timestamp valid say seconds receiver keep messages around seconds compare newly arrived messages previous ones filter duplicates messages older seconds thrown since replays sent seconds later rejected old measures timestamps discussed later symmetric key algorithms modern cryptography uses basic ideas traditional cryptography transposition substitution emphasis different traditionally cryptographers used simple algorithms nowadays reverse true object sec symmetric key algorithms make encryption algorithm complex involuted even cryptanalyst acquires vast mounds enciphered text choosing able make sense without key first class encryption algorithms study chapter called symmetric key algorithms use key encryption decryption illustrates use symmetric key algorithm particular focus block ciphers take n bit block plaintext input transform using key n bit block ciphertext cryptographic algorithms implemented either hardware speed software flexibility although treatment concerns algorithms protocols independent actual implementation words building cryptographic hardware may interest transpositions substitutions implemented simple electrical circuits figure shows device known p box p stands permutation used effect transposition bit input bits designated top bottom output particular p box appropriate internal wiring p box made perform transposition practically speed light since computation involved signal propagation design follows kerckhoff principle attacker knows general method permuting bits know bit goes p box product cipher encoder decoder box b s1 p1 s2 s3 s4 s5 p2 s6 s7 s8 s9 p3 s10 s11 p4 s12 c basic elements product ciphers p box b box c product substitutions performed boxes shown b example bit plaintext entered bit ciphertext output bit input selects one eight lines exiting first stage sets lines second stage p box third stage encodes selected input line binary wiring shown eight octal numbers input one another output sequence would words replaced replaced etc appropriate wiring p box inside box substitution accomplished furthermore device built hardware achieve great speed since encoders decoders one two subnanosecond gate delays propagation time across p box may well less picosec 780 network security real power basic elements becomes apparent cascade whole series boxes form product cipher shown c example input lines transposed e permuted first stage p second stage input broken four groups bits substituted independently others arrangement shows method approximating larger box multiple smaller boxes useful small boxes practical hardware implementation e g bit box realized entry lookup table large sboxes become unwieldy build e g bit box would minimum need crossed wires middle stage although method less general still powerful inclusion sufficiently large number stages product cipher output made exceedingly complicated function input product ciphers operate k bit inputs produce k bit outputs common typically k hardware implementation usually least physical stages instead c software implementation programmed loop least eight iterations one performing box type substitutions subblocks bit data block followed permutation mixes outputs boxes often special initial permutation one end well literature iterations called rounds des data encryption standard january u government adopted product cipher developed ibm official standard unclassified information cipher des data encryption standard widely adopted industry use security products longer secure original form modified form still useful explain des works outline des shown plaintext encrypted blocks bits yielding bits ciphertext algorithm parameterized bit key distinct stages first stage key independent transposition bit plaintext last stage exact inverse transposition stage prior last one exchanges leftmost bits rightmost bits remaining stages functionally identical parameterized different functions key algorithm designed allow decryption done key encryption property needed symmetric key algorithm steps run reverse order operation one intermediate stages illustrated b stage takes two bit inputs produces two bit outputs left output simply copy right input right output bitwise xor left input function right input key stage ki pretty much complexity algorithm lies function sec symmetric key algorithms bit plaintext l r initial transposition bit key iteration iteration l f ri ki iteration bit swap inverse transposition bit ciphertext bits li bits ri b data encryption standard general outline b detail one iteration circled means exclusive function consists four steps carried sequence first bit number e constructed expanding bit ri according fixed transposition duplication rule second e ki xored together output partitioned eight groups bits fed different box possible inputs box mapped onto 4bit output finally bits passed p box iterations different key used algorithm starts bit transposition applied key iteration key partitioned two bit units rotated left number bits dependent iteration number ki derived rotated key applying yet another bit transposition different bit subset bits extracted permuted round technique sometimes used make des stronger called whitening consists xoring random bit key plaintext block feeding des xoring second bit key resulting ciphertext transmitting whitening easily removed running 782 network security reverse operations receiver two whitening keys since technique effectively adds bits key length makes exhaustive search key space much time consuming note whitening key used block e one whitening key des enveloped controversy since day launched based cipher developed patented ibm called lucifer except ibm cipher used bit key instead bit key u federal government wanted standardize one cipher unclassified use invited ibm discuss matter nsa u government code breaking arm world largest employer mathematicians cryptologists nsa secret industry joke goes q nsa stand agency actually nsa stands national security agency discussions took place ibm reduced key bits bits decided keep secret process des designed many people suspected key length reduced make sure nsa could break des organization smaller budget could point secret design supposedly hide back door could make even easier nsa break des nsa employee discreetly told ieee cancel planned conference cryptography make people comfortable nsa denied everything two stanford cryptography researchers diffie hellman designed machine break des estimated could built million dollars given small piece plaintext matched ciphertext machine could find key exhaustive search entry key space day nowadays game machine exists sale costs less 000 make kumar et al triple des early ibm realized des key length short devised way effectively increase using triple encryption tuchman method chosen since incorporated international standard illustrated two keys three stages used first stage plaintext encrypted using des usual way k second stage des run decryption mode using k key finally another des encryption done k design immediately gives rise two questions first two keys used instead three second ede encrypt decrypt encrypt used instead eee encrypt encrypt encrypt reason two keys used even paranoid cryptographers believe bits sec p symmetric key algorithms k1 k2 k1 e e c c k1 k2 k1 e p b triple encryption using des b decryption adequate routine commercial applications time among cryptographers paranoia considered feature bug going bits would add unnecessary overhead managing transporting another key little real gain reason encrypting decrypting encrypting backward compatibility existing single key des systems encryption decryption functions mappings sets bit numbers cryptographic point view two mappings equally strong using ede however instead eee computer using triple encryption speak one using single encryption setting k k property allows triple encryption phased gradually something concern academic cryptographers considerable importance ibm customers aes advanced encryption standard des began approaching end useful life even triple des nist national institute standards technology agency u dept commerce charged approving standards u federal government decided government needed new cryptographic standard unclassified use nist keenly aware controversy surrounding des well knew announced new standard everyone knowing anything cryptography would automatically assume nsa built back door nsa could read everything encrypted conditions probably one would use standard would died quietly nist took surprisingly different approach government bureaucracy sponsored cryptographic bake contest january researchers world invited submit proposals new standard called aes advanced encryption standard bake rules algorithm must symmetric block cipher full design must public key lengths bits must supported 784 network security software hardware implementations must possible algorithm must public licensed nondiscriminatory terms fifteen serious proposals made public conferences organized presented attendees actively encouraged find flaws august nist selected five finalists primarily basis security efficiency simplicity flexibility memory requirements important embedded systems conferences held potshots taken october nist announced selected rijndael joan daemen vincent rijmen name rijndael pronounced rhine doll less derived last names authors rijmen daemen november rijndael became aes u government standard published fips federal information processing standard due extraordinary openness competition technical properties rijndael fact winning team consisted two young belgian cryptographers unlikely built back door please nsa rijndael become world dominant cryptographic cipher aes encryption decryption part instruction set microprocessors e g intel rijndael supports key lengths block sizes bits bits steps bits key length block length may chosen independently however aes specifies block size must bits key length must bits doubtful anyone ever use bit keys de facto aes two variants bit block bit key bit block bit key treatment algorithm examine 128 case likely become commercial norm bit key gives key space keys even nsa manages build machine billion parallel processors able evaluate one key per picosecond would take machine years search key space sun burned folks present read results candlelight rijndael mathematical perspective rijndael based galois field theory gives provable security properties however also viewed c code without getting mathematics like des rijndael uses substitution permutations also uses multiple rounds number rounds depends key size block size bit keys bit blocks moving largest key largest block however unlike des operations involve entire bytes sec symmetric key algorithms allow efficient implementations hardware software outline code given note code purpose illustration good implementations security code follow additional practices zeroing sensitive memory used see example ferguson et al define length define nrows define ncols define rounds typedef unsigned char byte bytes data block key number rows state number columns state number iterations unsigned bit integer rijndael byte plaintext length byte ciphertext length byte key length int r loop index byte state nrows ncols current state struct byte k nrows ncols rk rounds round keys expand key key rk copy plaintext state state plaintext xor roundkey state state rk construct round keys init current state xor key state r r rounds r substitute state rotate rows state r rounds mix columns state xor roundkey state state rk r copy state ciphertext ciphertext state apply box byte rotate row bytes mix function xor key state return result outline rijndael c function rijndael three parameters plaintext array bytes containing input data ciphertext array bytes enciphered output returned key byte key calculation current state data maintained byte array state whose size nrows ncols bit blocks array bytes bytes full bit data block stored state array initialized plaintext modified every step computation steps byte byte substitution performed others bytes permuted within array transformations also used end contents state returned ciphertext code starts expanding key arrays size state stored rk array structs containing state array one used start calculation used rounds one per round calculation round 786 network security keys encryption key complicated us get suffice say round keys produced repeated rotation xoring various groups key bits details see daemen rijmen next step copy plaintext state array processed rounds copied column order first bytes going column next bytes going column columns rows numbered starting although rounds numbered starting initial setup byte arrays size illustrated bit plaintext state rk bit encryption key rk rk rk rk rk rk rk rk rk rk round keys creating state rk arrays one step main computation begins rk xored state byte byte words bytes state replaced xor corresponding byte rk time main attraction loop executes iterations one per round transforming state iteration contents round produced four steps step byte byte substitution state byte turn used index box replace value contents box entry step straight monoalphabetic substitution cipher unlike des multiple boxes rijndael one box step rotates four rows left row rotated bytes e changed row rotated byte row rotated bytes row rotated bytes step diffuses contents current data around block analogous permutations step mixes column independently ones mixing done using matrix multiplication new column product old column constant matrix multiplication done using finite galois field gf although may sound complicated algorithm exists allows element new column computed using two table lookups three xors daemen rijmen appendix e sec symmetric key algorithms finally step xors key round state array use next round since every step reversible decryption done running algorithm backward however also trick available decryption done running encryption algorithm using different tables algorithm designed great security also great speed good software implementation ghz machine able achieve encryption rate mbps fast enough encrypt mpeg videos real time hardware implementations faster still cipher modes despite complexity aes des block cipher matter basically monoalphabetic substitution cipher using big characters bit characters aes bit characters des whenever plaintext block goes front end ciphertext block comes back end encrypt plaintext abcdefgh times des key get ciphertext times intruder exploit property help subvert cipher electronic code book mode see monoalphabetic substitution cipher property used partially defeat cipher use triple des easier depict bit blocks bit blocks aes exactly problem straightforward way use des encrypt long piece plaintext break consecutive byte bit blocks encrypt one another key last piece plaintext padded bits need technique known ecb mode electronic code book mode analogy old fashioned code books plaintext word listed followed ciphertext usually five digit decimal number start computer file listing annual bonuses company decided award employees file consists consecutive byte records one per employee format shown bytes name bytes position bytes bonus sixteen byte blocks numbered encrypted triple des leslie fight boss expecting much bonus kim contrast boss favorite everyone knows leslie get access file encrypted sent bank leslie rectify unfair situation given encrypted file problem leslie make copy 12th ciphertext block contains kim bonus use replace fourth ciphertext block contains leslie bonus even without knowing 12th 788 network security name position l e l b l c k r b n c l l n v e k b b b e bytes bonus c l e r k b n g e r j n r plaintext file encrypted des blocks block says leslie expect much merrier christmas year copying eighth ciphertext block also possibility likely detected besides leslie greedy person cipher block chaining mode thwart type attack block ciphers chained various ways replacing block way leslie cause plaintext decrypted starting replaced block garbage one way chaining cipher block chaining method shown plaintext block xored previous ciphertext block encrypted consequently plaintext block longer maps onto ciphertext block encryption longer big monoalphabetic substitution cipher first block xored randomly chosen iv initialization vector transmitted plaintext along ciphertext p0 p1 p2 p3 iv key e e e e c0 c1 c2 c3 c0 c1 c2 c3 key encryption box iv decryption box p0 p1 p2 p3 exclusive b cipher block chaining encryption b decryption see cipher block chaining mode works examining example start computing c e p xor iv compute c e p xor c decryption also uses xor reverse process p iv xor c note encryption block sec symmetric key algorithms function plaintext blocks plaintext generates different ciphertext depending occurs transformation type leslie made result nonsense two blocks starting leslie bonus field astute security officer peculiarity might suggest start ensuing investigation cipher block chaining also advantage plaintext block result ciphertext block making cryptanalysis difficult fact main reason used cipher feedback mode however cipher block chaining disadvantage requiring entire bit block arrive decryption begin byte byte encryption cipher feedback mode using triple des used shown aes idea exactly bit shift register used figure state encryption machine shown bytes encrypted sent plaintext byte arrives illustrated fig des algorithm operates bit shift register generate bit ciphertext leftmost byte ciphertext extracted xored p byte transmitted transmission line addition shift register shifted left bits causing c fall left end c inserted position vacated right end c bit shift register bit shift register c2 c3 c4 c5 c6 c7 c8 c9 c2 c3 c4 c c6 c7 c8 c key e encryption box key e c10 select leftmost byte p10 encryption box c10 select leftmost byte c10 c10 p10 exclusive b cipher feedback mode encryption b decryption note contents shift register depend entire previous history plaintext pattern repeats multiple times plaintext encrypted differently time ciphertext cipher block chaining initialization vector needed start ball rolling 790 network security decryption cipher feedback mode works way encryption particular content shift register encrypted decrypted selected byte xored c get p one xored p generate c first place long two shift registers remain identical decryption works correctly illustrated b problem cipher feedback mode one bit ciphertext accidentally inverted transmission bytes decrypted bad byte shift register corrupted bad byte pushed shift register correct plaintext generated thus effects single inverted bit relatively localized ruin rest message ruin many bits shift register wide stream cipher mode nevertheless applications exist bit transmission error mess bits plaintext large effect applications fourth option stream cipher mode exists works encrypting initialization vector using key get output block output block encrypted using key get second output block block encrypted get third block arbitrarily large sequence output blocks called keystream treated like one time pad xored plaintext get ciphertext shown note iv used first step output encrypted also note keystream independent data computed advance need completely insensitive transmission errors decryption shown b iv iv encryption box key e encryption box key e keystream plaintext ciphertext keystream ciphertext plaintext b stream cipher encryption b decryption decryption occurs generating keystream receiving side since keystream depends iv key affected transmission errors ciphertext thus bit error transmitted ciphertext generates bit error decrypted plaintext sec symmetric key algorithms essential never use key iv pair twice stream cipher generate keystream time using keystream twice exposes ciphertext keystream reuse attack imagine plaintext block p encrypted keystream get p xor k later second plaintext block q encrypted keystream get q xor k intruder captures ciphertext blocks simply xor together get p xor q eliminates key intruder xor two plaintext blocks one known guessed also found event xor two plaintext streams attacked using statistical properties message example english text common character stream probably xor two spaces followed xor space letter e etc short equipped xor two plaintexts cryptanalyst excellent chance deducing counter mode one problem modes except electronic code book mode random access encrypted data impossible example suppose file transmitted network stored disk encrypted form might reasonable way operate receiving computer notebook computer might stolen storing critical files encrypted form greatly reduces damage due secret information leaking event computer falls wrong hands however disk files often accessed nonsequential order especially files databases file encrypted using cipher block chaining accessing random block requires first decrypting blocks ahead expensive proposition reason yet another mode invented counter mode illustrated plaintext encrypted directly instead initialization vector plus constant encrypted resulting ciphertext xored plaintext stepping initialization vector new block easy decrypt block anywhere file without first decrypt predecessors although counter mode useful weakness worth pointing suppose key k used future different plaintext iv attacker acquires ciphertext runs keystreams cases exposing cipher keystream reuse attack kind saw stream ciphers cryptanalyst xor two ciphertexts together eliminate cryptographic protection get xor plaintexts weakness mean counter mode bad idea means keys initialization vectors chosen independently random even key accidentally used twice iv different time plaintext safe 792 network security iv iv iv iv key e key e key e key e p0 p1 p2 p3 c0 c1 c2 encryption box c3 encryption using counter mode ciphers aes rijndael des best known symmetric key cryptographic algorithms standard industry choices liability reasons one blame use aes product aes cracked certainly blame use nonstandard cipher later broken however worth mentioning numerous symmetric key ciphers devised embedded inside various products common ones listed possible use combinations ciphers example aes twofish ciphers need broken recover data cipher author des ibm key length rc4 ronald rivest 2048 bits caution keys weak rc5 ronald rivest 256 bits good patented bits comments weak use aes rijndael daemen rijmen 256 bits best choice serpent anderson biham knudsen 256 bits strong triple des ibm twofish bruce schneier bits 256 bits good getting old strong widely used common symmetric key cryptographic algorithms cryptanalysis leaving subject symmetric key cryptography worth least mentioning four developments cryptanalysis first development differential cryptanalysis biham shamir technique used sec symmetric key algorithms attack block cipher works beginning pair plaintext blocks differing small number bits watching carefully happens internal iteration encryption proceeds many cases bit patterns common others lead probabilistic attacks second development worth noting linear cryptanalysis matsui break des known plaintexts works xoring certain bits plaintext ciphertext together examining result done repeatedly half bits 0s half 1s often however ciphers introduce bias one direction bias however small exploited reduce work factor details see matsui paper third development using analysis electrical power consumption find secret keys computers typically use around volts represent bit volts represent bit thus processing takes electrical energy processing cryptographic algorithm consists loop key bits processed order attacker replaces main n ghz clock slow e g hz clock puts alligator clips cpu power ground pins precisely monitor power consumed machine instruction data deducing key surprisingly easy kind cryptanalysis defeated carefully coding algorithm assembly language make sure power consumption independent key also independent individual round keys fourth development timing analysis cryptographic algorithms full statements test bits round keys else parts take different amounts time slowing clock seeing long various steps take may also possible deduce round keys round keys known original key usually computed power timing analysis also employed simultaneously make job easier power timing analysis may seem exotic reality powerful techniques break cipher specifically designed resist public key algorithms historically distributing keys always weakest link cryptosystems matter strong cryptosystem intruder could steal key system worthless cryptologists always took granted encryption key decryption key easily derived one another key distributed users system thus seemed inherent problem keys protected theft also distributed could locked bank vault two researchers stanford university diffie hellman proposed radically new kind cryptosystem one encryption decryption keys different decryption key could feasibly 794 network security derived encryption key proposal keyed encryption algorithm e keyed decryption algorithm meet three requirements requirements stated simply follows e p p exceedingly difficult deduce e e broken chosen plaintext attack first requirement says apply encrypted message e p get original plaintext message p back without property legitimate receiver could decrypt ciphertext second requirement speaks third requirement needed shall see moment intruders may experiment algorithm hearts content conditions reason encryption key made public method works like person say alice wants receive secret messages first devises two algorithms meeting requirements encryption algorithm alice key made public hence name publickey cryptography alice might put public key home page web example use notation ea mean encryption algorithm parameterized alice public key similarly secret decryption algorithm parameterized alice private key da bob thing publicizing eb keeping db secret let us see solve problem establishing secure channel alice bob never previous contact alice encryption key ea bob encryption key eb assumed publicly readable files alice takes first message p computes eb p sends bob bob decrypts applying secret key db e computes db eb p p one else read encrypted message eb p encryption system assumed strong difficult derive db publicly known eb send reply r bob transmits ea r alice bob communicate securely note terminology perhaps useful public key cryptography requires user two keys public key used entire world encrypting messages sent user private key user needs decrypting messages consistently refer keys public private keys respectively distinguish secret keys used conventional symmetric key cryptography rsa catch need find algorithms indeed satisfy three requirements due potential advantages public key cryptography many researchers hard work algorithms already published sec public key algorithms one good method discovered group rivest et al known initials three discoverers rivest shamir adleman rsa survived attempts break years considered strong much practical security based reason rivest shamir adleman given acm turing award major disadvantage requires keys least bits good security versus bits symmetric key algorithms makes quite slow rsa method based principles number theory summarize use method details consult paper choose two large primes p q typically bits compute n p q z p q choose number relatively prime z call find e e mod z parameters computed advance ready begin encryption divide plaintext regarded bit string blocks plaintext message p falls interval p n grouping plaintext blocks k bits k largest integer 2k n true encrypt message p compute c p e mod n decrypt c compute p c mod n proven p specified range encryption decryption functions inverses perform encryption need e n perform decryption need n therefore public key consists pair e n private key consists n security method based difficulty factoring large numbers cryptanalyst could factor publicly known n could find p q z equipped knowledge z e found using euclid algorithm fortunately mathematicians trying factor large numbers least years accumulated evidence suggests exceedingly difficult problem according rivest colleagues factoring digit number would require years using brute force cases assumed best known algorithm computer sec instruction time million chips running parallel instruction time nsec would still take years even computers continue get faster order magnitude per decade many years factoring digit number becomes feasible time descendants simply choose p q still larger trivial pedagogical example rsa algorithm works given example chosen p q giving n z suitable value since common factors choices e found solving equation 7e mod yields e ciphertext c corresponding plaintext message p 796 network security given c p mod ciphertext decrypted receiver making use rule p c mod figure shows encryption plaintext suzanne example plaintext p symbolic numeric u z n n e 01 ciphertext c decryption p3 p3 mod c7 c7 mod symbolic 01 u z n n e sender computation receiver computation example rsa algorithm primes chosen example small p must less plaintext block contain single character result monoalphabetic substitution cipher impressive instead chosen p q block could would n bits eight bit characters versus characters des characters aes pointed using rsa described similar using symmetric algorithm ecb mode input block gives output block therefore form chaining needed data encryption however practice rsa based systems use public key cryptography primarily distributing one time session keys use symmetric key algorithm aes triple des rsa slow actually encrypting large volumes data widely used key distribution public key algorithms although rsa widely used means public key algorithm known first public key algorithm knapsack algorithm merkle hellman idea someone owns large number objects different weight owner encodes message secretly selecting subset objects placing knapsack total weight objects knapsack made public list possible objects corresponding weights list objects knapsack kept secret certain additional restrictions problem figuring possible list objects given weight thought computationally infeasible formed basis public key algorithm sec public key algorithms algorithm inventor ralph merkle quite sure algorithm could broken offered reward anyone could break adi shamir rsa promptly broke collected reward undeterred merkle strengthened algorithm offered reward anyone could break new one ronald rivest r rsa promptly broke new one collected reward merkle dare offer 000 next version leonard adleman luck nevertheless knapsack algorithm considered secure used practice public key schemes based difficulty computing discrete logarithms algorithms use principle invented el gamal schnorr schemes exist based elliptic curves menezes vanstone two major categories based difficulty factoring large numbers computing discrete logarithms modulo large prime problems thought genuinely difficult solve mathematicians working many years without great breakthroughs digital signatures authenticity many legal financial documents determined presence absence authorized handwritten signature photocopies count computerized message systems replace physical transport paper ink documents method must found allow documents signed unforgeable way problem devising replacement handwritten signatures difficult one basically needed system one party send signed message another party way following conditions hold receiver verify claimed identity sender sender later repudiate contents message receiver possibly concocted message first requirement needed example financial systems customer computer orders bank computer buy ton gold bank computer needs able make sure computer giving order really belongs customer whose account debited words bank authenticate customer customer authenticate bank second requirement needed protect bank fraud suppose bank buys ton gold immediately thereafter price gold 798 network security drops sharply dishonest customer might proceed sue bank claiming never issued order buy gold bank produces message court customer may deny sent property party contract later deny signed called nonrepudiation digital signature schemes study help provide third requirement needed protect customer event price gold shoots bank tries construct signed message customer asked one bar gold instead one ton fraud scenario bank keeps rest gold symmetric key signatures one approach digital signatures central authority knows everything everyone trusts say big brother bb user chooses secret key carries hand bb office thus alice bb know alice secret key ka alice wants send signed plaintext message p banker bob generates ka b ra p b bob identity ra random number chosen alice timestamp ensure freshness ka b ra p message encrypted key ka sends depicted bb sees message alice decrypts sends message bob shown message bob contains plaintext alice message also signed message kbb p bob carries alice request bob ka b ra p bb alice kb ra p kbb p digital signatures big brother happens alice later denies sending message step everyone sues everyone least united states finally case comes court alice vigorously denies sending bob disputed message judge ask bob sure disputed message came alice trudy bob first points bb accept message alice unless encrypted ka possibility trudy sending bb false message alice without bb detecting immediately bob dramatically produces exhibit kbb p bob says message signed bb proves alice sent p bob judge asks bb everyone trusts decrypt exhibit bb testifies bob telling truth judge decides favor bob case dismissed sec digital signatures one potential problem signature protocol trudy replaying either message minimize problem timestamps used throughout furthermore bob check recent messages see ra used message discarded replay note based timestamp bob reject old messages guard instant replay attacks bob checks ra every incoming message see message received alice past hour bob safely assume new request public key signatures structural problem using symmetric key cryptography digital signatures everyone agree trust big brother furthermore big brother gets read signed messages logical candidates running big brother server government banks accountants lawyers unfortunately none inspire total confidence citizens hence would nice signing documents require trusted authority fortunately public key cryptography make important contribution area let us assume public key encryption decryption algorithms property e p p addition course usual property e p p rsa property assumption unreasonable assuming case alice send signed plaintext message p bob transmitting eb da p note carefully alice knows private key da well bob public key eb constructing message something alice bob receives message transforms using private key usual yielding da p shown stores text safe place applies ea get original plaintext transmission line alice computer p bob public key eb alice private key da da p bob computer alice public key ea bob private key db eb da p p da p digital signatures using public key cryptography see signature property works suppose alice subsequently denies sent message p bob case comes court bob produce p da p judge easily verify bob indeed valid message encrypted da simply applying ea since bob 800 network security know alice private key way bob could acquired message encrypted alice indeed send jail perjury fraud alice much time devise interesting new public key algorithms although using public key cryptography digital signatures elegant scheme problems related environment operate rather basic algorithm one thing bob prove message sent alice long da remains secret alice discloses secret key argument longer holds anyone could sent message including bob problem might arise example bob alice stockbroker suppose alice tells bob buy certain stock bond immediately thereafter price drops sharply repudiate message bob alice runs police claiming home burglarized pc holding key stolen depending laws state country may may legally liable especially claims discovered break getting home work several hours allegedly happened another problem signature scheme happens alice decides change key clearly legal probably good idea periodically court case later arises described judge apply current ea da p discover produce p bob look pretty stupid point principle public key algorithm used digital signatures de facto industry standard rsa algorithm many security products use however nist proposed using variant el gamal public key algorithm new digital signature standard dss el gamal gets security difficulty computing discrete logarithms rather difficulty factoring large numbers usual government tries dictate cryptographic standards uproar dss criticized secret nsa designed protocol using el gamal slow times slower rsa checking signatures new el gamal yet thoroughly analyzed insecure fixed bit key subsequent revision fourth point rendered moot keys bits allowed nevertheless first two points remain valid message digests one criticism signature methods often couple two distinct functions authentication secrecy often authentication needed secrecy always needed also getting export license often easier system sec digital signatures question provides authentication secrecy describe authentication scheme require encrypting entire message scheme based idea one way hash function takes arbitrarily long piece plaintext computes fixed length bit string hash function md often called message digest four important properties given p easy compute md p given md p effectively impossible find p given p one find p md p md p change input even bit produces different output p da md p bob alice meet criterion hash least bits long preferably meet criterion hash must mangle bits thoroughly unlike symmetric key encryption algorithms seen computing message digest piece plaintext much faster encrypting plaintext public key algorithm message digests used speed digital signature algorithms see works consider signature protocol instead signing p kbb p bb computes message digest applying md p yielding md p bb encloses kbb md p fifth item list encrypted kb sent bob instead kbb p dispute arises bob produce p kbb md p big brother decrypted judge bob md p guaranteed genuine alleged p however since effectively impossible bob find message gives hash judge easily convinced bob telling truth using message digests way saves encryption time message transport costs message digests work public key cryptosystems shown fig alice first computes message digest plaintext signs message digest sends signed digest plaintext bob trudy replaces p along way bob see computes md p digital signatures using message digests 802 network security sha sha variety message digest functions proposed one widely used functions sha secure hash algorithm nist like message digests operates mangling bits sufficiently complicated way every output bit affected every input bit sha developed nsa blessed nist fips processes input data bit blocks generates bit message digest typical way alice send nonsecret signed message bob illustrated plaintext message fed sha algorithm get bit sha hash alice signs hash rsa private key sends plaintext message signed hash bob alice plaintext message arbitrary length alice private key da bit sha hash sha algorithm h signed hash rsa algorithm da h sent bob use sha rsa signing nonsecret messages receiving message bob computes sha hash also applies alice public key signed hash get original hash h two agree message considered valid since way trudy modify plaintext message transit produce new one hashes h bob easily detect changes trudy made message messages whose integrity important whose contents secret scheme widely used relatively small cost computation guarantees modifications made plaintext message transit detected high probability let us briefly see sha works starts padding message adding bit end followed many bits necessary least make length multiple bits bit number containing message length padding ored low order bits message shown padding right english text figures go left right e lower right generally perceived end figure computers orientation corresponds big endian machines sparc ibm successors sha always pads end message matter endian machine used sec start message digital signatures bit block bit word m0 h0 w0 m1 h1 w1 m2 h2 w2 padding h3 h4 mn w79 b c message padded multiple bits b output variables c word array computation sha maintains five bit variables h h hash accumulates shown b initialized constants specified standard blocks mn processed turn current block words first copied start auxiliary word array w shown c words w filled using formula wi wi xor wi xor wi xor wi b w represents left circular rotation bit word w b bits five scratch variables e initialized h h respectively actual calculation expressed pseudo c temp s5 fi b c e wi ki e c c s30 b b temp ki constants defined standard mixing functions fi defined fi b c b c b fi b c b xor c xor fi b c b c b c fi b c b xor c xor iterations loop completed e added h h respectively first bit block processed next one started w array reinitialized new block h left 804 network security block finished next one started bit message blocks tossed soup last block finished five bit words h array output bit cryptographic hash complete c code sha given rfc new versions sha developed produce hashes bits collectively versions called sha hashes longer sha hashes digest function changed combat potential weaknesses sha sha yet widely used likely future md5 completeness mention another digest popular md5 rivest fifth series message digests designed ronald rivest briefly message padded length bits modulo original length message appended bit integer give total input whose length multiple bits round computation takes bit block input mixes thoroughly running bit buffer good measure mixing uses table constructed sine function point using known function avoid suspicion designer built clever back door enter process continues input blocks consumed contents bit buffer form message digest decade solid use study weaknesses md5 led ability find collisions different messages hash sotirov et al death knell digest function means digest safely used represent message thus security community considers md5 broken replaced possible new systems use part design nevertheless may still see md5 used existing systems birthday attack world crypto nothing ever seems one might think would take order 2m operations subvert bit message digest fact 2m operations often using birthday attack approach published yuval classic paper swindle rabin idea attack comes technique math professors often use probability courses question many students need class probability two people birthday exceeds students expect answer way fact probability theory says without giving rigorous analysis intuitively sec digital signatures people form different pairs probability 365 hit light really surprising generally mapping inputs outputs n inputs people messages etc k possible outputs birthdays message digests etc n n input pairs n n k chance least one match pretty good thus approximately match likely n k result means bit message digest probably broken generating messages looking two message digest let us look practical example department computer science state university one position tenured faculty member two candidates tom dick tom hired two years dick goes review first gets dick luck tom knows department chairperson marilyn thinks highly work asks write letter recommendation dean decide tom case sent letters become confidential marilyn tells secretary ellen write dean letter outlining wants ready marilyn review compute sign bit digest send dean ellen send letter later email unfortunately tom ellen romantically involved dick would like tom writes following letter bracketed options dear dean smith letter message give honest frank opinion prof tom wilson candidate tenure year known worked prof wilson almost six years outstanding excellent researcher great talent ability known worldwide internationally brilliant creative insights many wide variety difficult challenging problems also highly greatly respected admired teacher educator students give classes courses rave spectacular reviews department popular best loved teacher instructor addition additionally prof wilson gifted effective fund raiser grants contracts brought large substantial amount money department money funds enabled permitted us pursue carry many special important programs example state program without funds would unable able continue program important essential us strongly urge grant tenure unfortunately tom soon ellen finishes composing typing letter also writes second one 806 network security dear dean smith letter message give honest frank opinion prof tom wilson candidate tenure year known worked tom almost six years poor weak researcher well known field area research hardly ever rarely shows insight understanding key major problems day furthermore respected admired teacher educator students give classes courses poor bad reviews department least popular teacher instructor known mostly primarily within department tendency propensity ridicule embarrass students foolish imprudent enough ask questions classes addition additionally tom poor marginal fund raiser grants contracts brought meager insignificant amount money department unless new money funds quickly located may cancel essential programs state program unfortunately conditions circumstances good conscience faith recommend tenure permanent position ellen programs computer compute message digests letter overnight chances one digest first letter match one digest second add options try tonight suppose finds match call good letter bad one b ellen emails letter marilyn approval letter b keeps secret showing one marilyn course approves computes bit message digest signs digest emails signed digest dean smith independently ellen emails letter b dean letter supposed getting letter signed message digest dean runs message digest algorithm letter b sees agrees marilyn sent fires tom dean realize ellen managed generate two letters message digest sent different one one marilyn saw approved optional ending ellen tells dick dick appalled breaks affair ellen furious confesses marilyn marilyn calls dean tom gets tenure sha birthday attack difficult even ridiculous speed trillion digests per second would take 000 years compute digests two letters variants even match guaranteed cloud 000 chips working parallel 000 years becomes weeks management public keys public key cryptography makes possible people share common key advance nevertheless communicate securely also makes signing messages possible without presence trusted third party finally sec management public keys signed message digests make possible recipient verify integrity received messages easily securely however one problem glossed bit quickly alice bob know get public keys start communication process obvious solution put public key web site work following reason suppose alice wants look bob public key web site starts typing bob url browser looks dns address bob home page sends get request shown unfortunately trudy intercepts request replies fake home page probably copy bob home page except replacement bob public key trudy public key alice encrypts first message et trudy decrypts reads encrypts bob public key sends bob none wiser trudy reading incoming messages worse yet trudy could modify messages reencrypting bob clearly mechanism needed make sure public keys exchanged securely get bob home page alice fake home page et trudy bob et message eb message way trudy subvert public key encryption certificates first attempt distributing public keys securely could imagine kdc key distribution center available online hours day provide public keys demand one many problems solution scalable key distribution center would rapidly become bottleneck also ever went internet security would suddenly grind halt reasons people developed different solution one require key distribution center online time fact online instead certify public keys belonging people companies organizations organization certifies public keys called ca certification authority example suppose bob wants allow alice people know communicate securely go ca public key along passport driver license ask certified ca issues certificate similar one signs sha 808 network security hash ca private key bob pays ca fee gets cd rom containing certificate signed hash hereby certify public key 19836a8b03030cf83737e3837837fc3s87092827262643ffa82710382828282a belongs robert john smith university avenue berkeley ca birthday july email bob superdupernet com sha hash certificate signed ca private key possible certificate signed hash fundamental job certificate bind public key name principal individual company etc certificates secret protected bob might example decide put new certificate web site link main page saying click public key certificate resulting click would return certificate signature block signed sha hash certificate let us run scenario trudy intercepts alice request bob home page put certificate signature block fake page alice reads contents certificate immediately see talking bob bob name trudy modify bob home page fly replacing bob public key however alice runs sha algorithm certificate get hash agree one gets applies ca well known public key signature block since trudy ca private key way generating signature block contains hash modified web page public key way alice sure bob public key trudy someone else promised scheme require ca online verification thus eliminating potential bottleneck standard function certificate bind public key principal certificate also used bind public key attribute example certificate could say public key belongs someone could used prove owner private key minor thus allowed access material suitable children without disclosing owner identity typically person holding certificate would send web site principal process cared age site principal process would generate random number encrypt public key certificate owner able decrypt send back sec management public keys would proof owner indeed attribute stated certificate alternatively random number could used generate session key ensuing conversation another example certificate might contain attribute object oriented distributed system object normally multiple methods owner object could provide customer certificate giving bit map methods customer allowed invoke binding bit map public key using signed certificate certificate holder prove possession corresponding private key allowed perform methods bit map approach property owner identity need known property useful situations privacy important x everybody wanted something signed went ca different kind certificate managing different formats would soon become problem solve problem standard certificates devised approved itu standard called x widespread use internet gone three versions since initial standardization discuss v3 x heavily influenced osi world borrowing worst features e g naming encoding surprisingly ietf went along x even though nearly every area machine addresses transport protocols email formats ietf generally ignored osi tried right ietf version x described rfc core x way describe certificates primary fields certificate listed descriptions given provide general idea fields additional information please consult standard rfc example bob works loan department money bank x address might c us moneybank ou loan cn bob c country organization ou organizational unit cn common name cas entities named similar way substantial problem x names alice trying contact bob moneybank com given certificate x name may obvious certificate refers bob wants fortunately starting version dns names permitted instead x names problem may eventually vanish certificates encoded using osi asn abstract syntax notation sort like struct c except extremely peculiar verbose notation information x given ford baum 810 network security field meaning version version x serial number number plus ca name uniquely identifies certificate signature algorithm algorithm used sign certificate issuer x name ca validity period starting ending times validity period subject name entity whose key certified public key subject public key id algorithm using issuer id optional id uniquely identifying certificate issuer subject id optional id uniquely identifying certificate subject extensions many extensions defined signature certificate signature signed ca private key basic fields x certificate public key infrastructures single ca issue world certificates obviously would work would collapse load central point failure well possible solution might multiple cas run organization using private key sign certificates would solve load failure problems introduces new problem key leakage dozens servers spread around world holding ca private key chance private key stolen otherwise leaking would greatly increased since compromise key would ruin world electronic security infrastructure single central ca risky addition organization would operate ca hard imagine authority would accepted worldwide legitimate trustworthy countries people would insist government countries would insist government reasons different way certifying public keys evolved goes general name pki public key infrastructure section summarize works general although many proposals details probably evolve time pki multiple components including users cas certificates directories pki provide way structuring components define standards various documents protocols particularly simple form pki hierarchy cas depicted example shown three levels practice might fewer toplevel ca root certifies second level cas call ras regional sec management public keys authorities might cover geographic region country continent term standard though fact term really standard different levels tree turn certify real cas issue x certificates organizations individuals root authorizes new ra generates x certificate stating approved ra includes new ra public key signs hands ra similarly ra approves new ca produces signs certificate stating approval containing ca public key root ra approved public key 47383ae349 ra approved public key 47383ae349 root signature root signature ra ra ca approved public key 6384af863b ra signature ca ca ca ca ca ca approved public key 6384af863b ra signature b hierarchical pki b chain certificates pki works like suppose alice needs bob public key order communicate looks finds certificate containing signed ca alice never heard ca knows ca might bob year old daughter could go ca say prove legitimacy ca respond certificate got ra contains ca public key armed ca public key verify bob certificate indeed signed ca thus legal unless ra bob year old son next step ask ra prove legitimate response query certificate signed root containing ra public key alice sure bob public key alice find root public key magic assumed everyone knows root public key example browser might shipped root public key built bob friendly sort guy want cause alice lot work knows going check ca ra save trouble collects two needed certificates gives two certificates along use knowledge root public key verify top level certificate public key contained therein verify second one alice need contact anyone verification 812 network security certificates signed easily detect attempts tamper contents chain certificates going back root like sometimes called chain trust certification path technique widely used practice course still problem going run root solution single root many roots ras cas fact modern browsers come preloaded public keys roots sometimes referred trust anchors way single worldwide trusted authority avoided issue browser vendor decides purported trust anchors reliable sleazy comes user trusting browser vendor make wise choices simply approve trust anchors willing pay inclusion fee browsers allow users inspect root keys usually form certificates signed root delete seem shady directories another issue pki certificates chains back known trust anchor stored one possibility user store certificates safe e way users tamper signed certificates without detection also inconvenient one alternative proposed use dns certificate directory contacting bob alice probably look ip address using dns dns return bob entire certificate chain along ip address people think way go others would prefer dedicated directory servers whose job managing x certificates directories could provide lookup services using properties x names example theory directory service could answer query give list people named alice work sales departments anywhere u canada revocation real world full certificates passports drivers licenses sometimes certificates revoked example drivers licenses revoked drunken driving driving offenses problem occurs digital world grantor certificate may decide revoke person organization holding abused way also revoked subject private key exposed worse yet ca private key compromised thus pki needs deal issue revocation possibility revocation complicates matters sec management public keys first step direction ca periodically issue crl certificate revocation list giving serial numbers certificates revoked since certificates contain expiry times crl need contain serial numbers certificates yet expired expiry time passed certificate automatically invalid distinction needed timed actually revoked cases used unfortunately introducing crls means user use certificate must acquire crl see certificate revoked used however even certificate list might revoked list published thus way really sure ask ca next use certificate ca asked since certificate might revoked seconds ago another complication revoked certificate could conceivably reinstated example revoked nonpayment fee since paid deal revocation possibly reinstatement eliminates one best properties certificates namely used without contact ca crls stored good place would place certificates stored one strategy ca actively push crls periodically directories process simply removing revoked certificates directories used storing certificates crls cached various places around network since crl signed document tampered tampering easily detected certificates long lifetimes crls long example credit cards valid years number revocations outstanding much longer new cards issued every months standard way deal long crls issue master list infrequently issue updates often reduces bandwidth needed distributing crls communication security finished study tools trade important techniques protocols covered rest chapter techniques applied practice provide network security plus thoughts social aspects security end chapter following four sections look communication security get bits secretly without modification source destination keep unwanted bits outside door means security issues networking certainly among important ones making good place start study 814 network security ipsec ietf known years security lacking internet adding easy war broke put security experts believe really secure encryption integrity checks end end e application layer source process encrypts integrity protects data sends destination process decrypted verified tampering done two processes including within either operating system detected trouble approach requires changing applications make security aware view next best approach putting encryption transport layer new layer application layer transport layer making still end end requiring applications changed opposite view users understand security capable using correctly nobody wants modify existing programs way network layer authenticate encrypt packets without users involved years pitched battles view enough support network layer security standard defined part argument network layer encryption prevent security aware users right help security unaware users extent result war design called ipsec ip security described rfcs among others users want encryption computationally expensive rather make optional decided require encryption time permit use null algorithm null algorithm described praised simplicity ease implementation great speed rfc complete ipsec design framework multiple services algorithms granularities reason multiple services everyone wants pay price services time services available la carte major services secrecy data integrity protection replay attacks intruder replays conversation based symmetric key cryptography high performance crucial reason multiple algorithms algorithm thought secure may broken future making ipsec algorithm independent framework survive even particular algorithm later broken reason multiple granularities make possible protect single tcp connection traffic pair hosts traffic pair secure routers among possibilities one slightly surprising aspect ipsec even though ip layer connection oriented actually surprising security key must established used period time essence kind connection different name also connections amortize setup sec communication security costs many packets connection context ipsec called sa security association sa simplex connection two endpoints security identifier associated secure traffic needed directions two security associations required security identifiers carried packets traveling secure connections used look keys relevant information secure packet arrives technically ipsec two principal parts first part describes two new headers added packets carry security identifier integrity control data information part isakmp internet security association key management protocol deals establishing keys isakmp framework main protocol carrying work ike internet key exchange version ike described rfc used earlier version deeply flawed pointed perlman kaufman ipsec used either two modes transport mode ipsec header inserted ip header protocol field ip header changed indicate ipsec header follows normal ip header tcp header ipsec header contains security information primarily sa identifier new sequence number possibly integrity check payload tunnel mode entire ip packet header encapsulated body new ip packet completely new ip header tunnel mode useful tunnel ends location final destination cases end tunnel security gateway machine example company firewall commonly case vpn virtual private network mode security gateway encapsulates decapsulates packets pass terminating tunnel secure machine machines company lan aware ipsec security gateway know tunnel mode also useful bundle tcp connections aggregated handled one encrypted stream prevents intruder seeing sending many packets sometimes knowing much traffic going valuable information example military crisis amount traffic flowing pentagon white house drop sharply amount traffic pentagon military installation deep colorado rocky mountains increase amount intruder might able deduce useful information data studying flow patterns packets even encrypted called traffic analysis tunnel mode provides way foil extent disadvantage tunnel mode adds extra ip header thus increasing packet size substantially contrast transport mode affect packet size much first new header ah authentication header provides integrity checking antireplay security secrecy e data encryption 816 network security use ah transport mode illustrated ipv4 interposed ip header including options tcp header ipv6 another extension header treated fact format close standard ipv6 extension header payload may padded particular length authentication algorithm shown authenticated ip header ah tcp header payload padding bits next header payload len reserved security parameters index sequence number authentication data hmac ipsec authentication header transport mode ipv4 let us examine ah header next header field used store value ip protocol field replaced indicate ah header follows cases code tcp go payload length number bit words ah header minus security parameters index connection identifier inserted sender indicate particular record receiver database record contains shared key used connection information connection protocol invented itu rather ietf field would called virtual circuit number sequence number field used number packets sent sa every packet gets unique number even retransmissions words retransmission packet gets different number original even though tcp sequence number purpose field detect replay attacks sequence numbers may wrap around exhausted new sa must established continue communication finally come authentication data variable length field contains payload digital signature sa established two sides negotiate signature algorithm going use normally public key cryptography used packets must processed extremely rapidly known public key algorithms slow since ipsec based symmetric key cryptography sender receiver negotiate shared key setting sa shared key used signature computation one simple way compute hash packet plus shared key shared key transmitted course scheme like called hmac sec communication security hashed message authentication code much faster compute first running sha running rsa result ah header allow encryption data mostly useful integrity checking needed secrecy needed one noteworthy feature ah integrity check covers fields ip header namely change packet moves router router time live field changes hop example included integrity check however ip source address included check making impossible intruder falsify origin packet alternative ipsec header esp encapsulating security payload use transport mode tunnel mode shown authenticated ip header esp header tcp header payload padding authentication hmac encrypted authenticated b new ip header esp header old ip header tcp header payload padding authentication hmac encrypted esp transport mode b esp tunnel mode esp header consists two bit words security parameters index sequence number fields saw ah third word generally follows technically part header initialization vector used data encryption unless null encryption used case omitted esp also provides hmac integrity checks ah rather included header come payload shown putting hmac end advantage hardware implementation hmac calculated bits going network interface appended end ethernet lans crcs trailer rather header ah packet buffered signature computed packet sent potentially reducing number packets sec sent given esp everything ah efficient boot question arises bother ah answer mostly historical originally ah handled integrity esp handled secrecy later integrity added esp people designed ah want let die work real argument ah checks part ip header esp really weak argument another weak argument product supporting ah esp might 818 network security less trouble getting export license encryption ah likely phased future firewalls ability connect computer anywhere computer anywhere mixed blessing individuals home wandering around internet lots fun corporate security managers nightmare companies large amounts confidential information online trade secrets product development plans marketing strategies financial analyses etc disclosure information competitor could dire consequences addition danger information leaking also danger information leaking particular viruses worms digital pests breach security destroy valuable data waste large amounts administrators time trying clean mess leave often imported careless employees want play nifty new game consequently mechanisms needed keep good bits bad bits one method use ipsec approach protects data transit secure sites however ipsec nothing keep digital pests intruders getting onto company lan see accomplish goal need look firewalls firewalls modern adaptation old medieval security standby digging deep moat around castle design forced everyone entering leaving castle pass single drawbridge could inspected police networks trick possible company many lans connected arbitrary ways traffic company forced electronic drawbridge firewall shown route exists internal network demilitarized zone external internet firewall security perimeter web email server server firewall protecting internal network sec communication security firewall acts packet filter inspects every incoming outgoing packet packets meeting criterion described rules formulated network administrator forwarded normally fail test uncermoniously dropped filtering criterion typically given rules tables list sources destinations acceptable sources destinations blocked default rules packets coming going machines common case tcp ip setting source destination might consist ip address port ports indicate service desired example tcp port mail tcp port http ports simply blocked example company could block incoming packets ip addresses combined tcp port popular finger service look people email addresses little used today ports easily blocked difficulty network administrators want security cut communication outside world arrangement would much simpler better security would end user complaints arrangements dmz demilitarized zone shown come handy dmz part company network lies outside security perimeter anything goes placing machine web server dmz computers internet contact browse company web site firewall configured block incoming tcp traffic port computers internet use port attack computers internal network allow web server managed firewall rule permit connections internal machines web server firewalls become much sophisticated time arms race attackers originally firewalls applied rule set independently packet proved difficult write rules allowed useful functionality blocked unwanted traffic stateful firewalls map packets connections use tcp ip header fields keep track connections allows rules example allow external web server send packets internal host internal host first establishes connection external web server rule possible stateless designs must either pass drop packets external web server another level sophistication stateful processing firewall implement application level gateways processing involves firewall looking inside packets beyond even tcp header see application capability possible distinguish http traffic used web browsing http traffic used peer peer file sharing administrators write rules spare company peer peer file sharing allow web browsing vital business methods outgoing traffic inspected well incoming traffic example prevent sensitive documents emailed outside company 820 network security discussion make clear firewalls violate standard layering protocols network layer devices peek transport applications layers filtering makes fragile instance firewalls tend rely standard port numbering conventions determine kind traffic carried packet standard ports often used computers applications either peer peer applications select ports dynamically avoid easily spotted blocked encryption ipsec schemes hides higher layer information firewall finally firewall readily talk computers communicate tell policies applied connection dropped must simply pretend broken wire reasons networking purists consider firewalls blemish architecture internet however internet dangerous place computer firewalls help problem likely stay even firewall perfectly configured plenty security problems still exist example firewall configured allow packets specific networks e g company plants intruder outside firewall put false source addresses bypass check insider wants ship secret documents encrypt even photograph ship photos jpeg files bypasses email filters even discussed fact although three quarters attacks come outside firewall attacks come inside firewall example disgruntled employees typically damaging verizon different problem firewalls provide single perimeter defense defense breached bets reason firewalls often used layered defense example firewall may guard entrance internal network computer may also run firewall readers think one security checkpoint enough clearly made international flight scheduled airline recently addition whole class attacks firewalls deal basic idea firewall prevent intruders getting secret data getting unfortunately people nothing better try bring certain sites sending legitimate packets target great numbers collapses load example cripple web site intruder send tcp syn packet establish connection site allocate table slot connection send syn ack packet reply intruder respond table slot tied seconds times intruder sends thousands connection requests table slots fill legitimate connections able get attacks intruder goal shut target rather steal data called dos denial service attacks usually request packets false source addresses intruder traced easily dos attacks major web sites common internet sec communication security even worse variant one intruder already broken hundreds computers elsewhere world commands attack target time approach increase intruder firepower also reduces chances detection since packets coming large number machines belonging unsuspecting users attack called ddos distributed denial service attack attack difficult defend even attacked machine quickly recognize bogus request take time process discard request enough requests per second arrive cpu spend time dealing virtual private networks many companies offices plants scattered many cities sometimes multiple countries olden days public data networks common companies lease lines telephone company pairs locations companies still network built company computers leased telephone lines called private network private networks work fine secure lines available leased lines traffic leak company locations intruders physically wiretap lines break easy problem private networks leasing dedicated t1 line two points costs thousands dollars month t3 lines many times expensive public data networks later internet appeared many companies wanted move data possibly voice traffic public network without giving security private network demand soon led invention vpns virtual private networks overlay networks top public networks properties private networks called virtual merely illusion virtual circuits real circuits virtual memory real memory one popular approach build vpns directly internet common design equip office firewall create tunnels internet pairs offices illustrated advantage using internet connectivity tunnels set demand include example computer employee home traveling long person internet connection flexibility much greater provided leased lines yet perspective computers vpn topology looks like private network case shown b system brought pair firewalls negotiate parameters sa including services modes algorithms keys ipsec used tunneling possible aggregate traffic 822 network security london office paris office london paris home travel internet home travel b virtual private network b topology seen inside two pairs offices onto single authenticated encrypted sa thus providing integrity control secrecy even considerable immunity traffic analysis many firewalls vpn capabilities built ordinary routers well since firewalls primarily security business natural tunnels begin end firewalls providing clear separation company internet thus firewalls vpns ipsec esp tunnel mode natural combination widely used practice sas established traffic begin flowing router within internet packet traveling along vpn tunnel ordinary packet thing unusual presence ipsec header ip header since extra headers effect forwarding process routers care extra header another approach gaining popularity isp set vpn using mpls discussed chap paths vpn traffic set across isp network company offices paths keep vpn traffic separate internet traffic guaranteed certain amount bandwidth quality service key advantage vpn completely transparent user software firewalls set manage sas person even aware setup system administrator configure manage security gateways isp administrator configure mpls paths everyone else like leased line private network vpns see lewis wireless security surprisingly easy design system using vpns firewalls logically completely secure practice leaks like sieve situation occur machines wireless use radio communication passes right firewall directions range 11 networks sec communication security often hundred meters anyone wants spy company simply drive employee parking lot morning leave 11 enabled notebook computer car record everything hears take day late afternoon hard disk full valuable goodies theoretically leakage supposed happen theoretically people supposed rob banks either much security problem traced manufacturers wireless base stations access points trying make products user friendly usually user takes device box plugs electrical power socket begins operating immediately nearly always security blurting secrets everyone within radio range plugged ethernet ethernet traffic suddenly appears parking lot well wireless snooper dream come true free data without work therefore goes without saying security even important wireless systems wired ones section look ways wireless networks handle security additional information given nichols lekkas 11 security part 11 standard originally called 11i prescribes data linklevel security protocol preventing wireless node reading interfering messages sent another pair wireless nodes also goes trade name wpa2 wifi protected access plain wpa interim scheme implements subset 11i avoided favor wpa2 describe 11i shortly first note replacement wep wired equivalent privacy first generation 11 security protocols wep designed networking standards committee completely different process example way nist selected design aes results devastating wrong pretty much everything security perspective turns example wep encrypted data confidentiality xoring output stream cipher unfortunately weak keying arrangements meant output often reused led trivial ways defeat another example integrity check based bit crc efficient code detecting transmission errors cryptographically strong mechanism defeating attackers design flaws made wep easy compromise first practical demonstration wep broken came adam stubblefield intern stubblefield et al able code test attack outlined fluhrer et al one week time spent convincing management buy wifi card use experiments software crack wep passwords within minute freely available use wep strongly discouraged prevent casual 824 network security access provide real form security 11i group put together hurry clear wep seriously broken produced formal standard june describe 11i provide real security set used properly two common scenarios wpa2 used first corporate setting company separate authentication server username password database used determine wireless client allowed access network setting clients use standard protocols authenticate network main standards 1x access point lets client carry dialogue authentication server observes result eap extensible authentication protocol rfc tells client authentication server interact actually eap framework standards define protocol messages however delve many details exchange much matter overview second scenario home setting authentication server instead single shared password used clients access wireless network setup less complex authentication server used home small businesses less secure well main difference authentication server client gets key encrypting traffic known clients single shared password different keys derived client clients password derive others keys want keys used encrypt traffic computed part authentication handshake handshake happens right client associates wireless network authenticates authentication server one start handshake client either shared network password password authentication server password used derive master key however master key used directly encrypt packets standard cryptographic practice derive session key period usage change key different sessions expose master key observation little possible session key computed handshake session key computed four packet handshake shown fig first ap access point sends random number identification random numbers used security protocols like one called nonces less contraction number used client also picks nonce uses nonces mac address ap master key compute session key ks session key split portions used different purposes omitted detail client session keys ap client sends nonce ap ap performs computation derive session keys nonces sent clear keys derived without extra secret information message client protected sec communication security integrity check called mic message integrity check based session key ap check mic correct message indeed must come client computes session keys mic another name message authentication code hmac term mic often used instead networking protocols potential confusion mac medium access control addresses client verify ap ks nonceap noncec mics ks kg mics distribute group key kg ks ack mics acknowledge access point ap compute session keys ks mac addresses nonces master key compute session keys ks client verify client ks 11i key setup handshake last two messages ap distributes group key kg client client acknowledges message receipt messages lets client verify ap correct session keys vice versa group key used broadcast multicast traffic 11 lan result handshake every client encryption keys none keys used ap broadcast packets wireless clients separate copy would need sent client using key instead shared key distributed broadcast traffic sent received clients must updated clients leave join network finally get part keys actually used provide security two protocols used 11i provide message confidentiality integrity authentication like wpa one protocols called tkip temporary key integrity protocol interim solution designed improve security old slow 11 cards least security better wep rolled firmware upgrade however broken better recommended protocol ccmp ccmp stand short somewhat spectacular name counter mode cipher block chaining message authentication code protocol call ccmp call anything want 826 network security ccmp works fairly straightforward way uses aes encryption bit key block size key comes session key provide confidentiality messages encrypted aes counter mode recall discussed cipher modes sec modes prevent message encrypted set bits time counter mode mixes counter encryption provide integrity message including header fields encrypted cipher block chaining mode last bit block kept mic message encrypted counter mode mic sent client ap perform encryption verify encryption wireless packet received broadcast multicast messages procedure used group key bluetooth security bluetooth considerably shorter range 11 easily attacked parking lot security still issue example imagine alice computer equipped wireless bluetooth keyboard absence security trudy happened adjacent office could read everything alice typed including outgoing email could also capture everything alice computer sent bluetooth printer sitting next e g incoming email confidential reports fortunately bluetooth elaborate security scheme try foil world trudies summarize main features bluetooth version later four security modes ranging nothing full data encryption integrity control 11 security disabled default older devices security users security turned serious breach occurred turn agricultural world approach known locking barn door horse escaped bluetooth provides security multiple layers physical layer frequency hopping provides tiny little bit security since bluetooth device moves piconet told frequency hopping sequence sequence obviously secret real security starts newly arrived slave asks channel master bluetooth two devices assumed share secret key set advance cases hardwired manufacturer e g headset mobile phone sold unit cases one device e g headset hardwired key user enter key device e g mobile phone decimal number shared keys called passkeys unfortunately passkeys often hardcoded another predictable value case four decimal digits allowing choices simple secure pairing bluetooth devices pick code six digit range makes passkey much less predictable still far secure sec communication security establish channel slave master check see one knows passkey negotiate whether channel encrypted integrity controlled select random bit session key whose bits may public point allowing key weakening comply government restrictions various countries designed prevent export use keys longer government break encryption uses stream cipher called e0 integrity control uses safer traditional symmetric key block ciphers safer submitted aes bake eliminated first round slower candidates bluetooth finalized aes cipher chosen otherwise would likely used rijndael actual encryption using stream cipher shown plaintext xored keystream generate ciphertext unfortunately e like rc4 may fatal weaknesses jakobsson wetzel broken time writing similarities a5 cipher whose spectacular failure compromises gsm telephone traffic cause concern biryukov et al sometimes amazes people including authors book perennial cat mouse game cryptographers cryptanalysts cryptanalysts often winning side another security issue bluetooth authenticates devices users theft bluetooth device may give thief access user financial accounts however bluetooth also implements security upper layers even event breach link level security security may remain especially applications require pin code entered manually kind keyboard complete transaction authentication protocols authentication technique process verifies communication partner supposed imposter verifying identity remote process face malicious active intruder surprisingly difficult requires complex protocols based cryptography section study many authentication protocols used insecure computer networks aside people confuse authorization authentication authentication deals question whether actually communicating specific process authorization concerned process permitted example say client process contacts file server says scott process want delete file cookbook old file server point view two questions must answered 828 network security actually scott process authentication scott allowed delete cookbook old authorization questions unambiguously answered affirmative requested action take place former question really key one file server knows talking checking authorization matter looking entries local tables databases reason concentrate authentication section general model essentially authentication protocols use alice starts sending message either bob trusted kdc key distribution center expected honest several message exchanges follow various directions messages sent trudy may intercept modify replay order trick alice bob gum works nevertheless protocol completed alice sure talking bob bob sure talking alice furthermore protocols two also established secret session key use upcoming conversation practice performance reasons data traffic encrypted using symmetric key cryptography typically aes triple des although public key cryptography widely used authentication protocols establishing session key point using new randomly chosen session key new connection minimize amount traffic gets sent users secret keys public keys reduce amount ciphertext intruder obtain minimize damage done process crashes core dump falls wrong hands hopefully key present session key permanent keys carefully zeroed session established authentication based shared secret key first authentication protocol assume alice bob already share secret key kab shared key might agreed upon telephone person event insecure network protocol based principle found many authentication protocols one party sends random number transforms special way returns result protocols called challenge response protocols subsequent authentication protocols following notation used b identities alice bob ri challenges identifies challenger ki keys indicates owner ks session key sec authentication protocols message sequence first shared key authentication protocol illustrated message alice sends identity bob way bob understands bob course way knowing whether message came alice trudy chooses challenge large random number rb sends back alice message plaintext alice encrypts message key shares bob sends ciphertext kab rb back message bob sees message immediately knows came alice trudy know kab thus could generated furthermore since rb chosen randomly large space say bit random numbers unlikely trudy would seen rb response earlier session equally unlikely could guess correct response challenge alice rb kab rb bob ra kab ra two way authentication using challenge response protocol point bob sure talking alice alice sure anything alice knows trudy might intercepted message sent back rb response maybe bob died last night find talking alice picks random number ra sends bob plaintext message bob responds kab ra alice knows talking bob wish establish session key alice pick one ks send bob encrypted kab protocol contains five messages let us see clever eliminate one approach illustrated alice initiates challenge response protocol instead waiting bob similarly responding alice challenge bob sends entire protocol reduced three messages instead five new protocol improvement original one one sense shorter unfortunately also wrong certain circumstances trudy defeat protocol using known reflection attack particular trudy break possible open multiple sessions bob situation would true example bob bank prepared accept many simultaneous connections teller machines 830 network security ra bob alice rb kab ra kab rb shortened two way authentication protocol trudy reflection attack shown starts trudy claiming alice sending rt bob responds usual challenge rb trudy stuck know kab rb first session rb kab rt rt rb bob trudy second session rb2 kab rb kab rb first session reflection attack open second session message supplying rb taken message challenge bob calmly encrypts sends back kab rb message shaded messages second session make stand trudy missing information complete first session abort second one bob convinced trudy alice asks bank account balance gives without question asks transfer secret bank account switzerland without moment hesitation moral story designing correct authentication protocol much harder looks following four general rules often help designer avoid common pitfalls sec authentication protocols initiator prove responder avoids bob giving away valuable information trudy give evidence initiator responder use different keys proof even means two shared keys kab k ab initiator responder draw challenges different sets example initiator must use even numbers responder must use odd numbers make protocol resistant attacks involving second parallel session information obtained one session used different one even one rules violated protocol frequently broken four rules violated disastrous consequences let us go take closer look surely protocol subject reflection attack maybe quite subtle trudy able defeat protocol using reflection attack possible open second session bob trick answering questions would happen alice general purpose computer also accepted multiple sessions rather person computer let us take look trudy see trudy attack works see alice starts announcing identity message trudy intercepts message begins session message claiming bob shaded session messages alice responds message saying message claim bob prove point trudy stuck prove bob trudy goes back first session turn send challenge sends ra got message alice kindly responds message thus supplying trudy information needs send message session point trudy basically home free successfully responded alice challenge session cancel session send old number rest session authenticated session alice session trudy nasty really wants rub instead sending old number complete session waits alice sends message alice challenge session course trudy know respond uses reflection attack sending back ra message alice conveniently encrypts ra message trudy switches back session sends alice number wants message conveniently copied alice sent message point trudy two fully authenticated sessions alice attack somewhat different result attack three message protocol saw time trudy two authenticated 832 network security kab ra ra2 second session ra kab ra b first session trudy alice first session ra second session first session ra2 kab ra2 kab ra2 second session first session reflection attack protocol connections alice previous example one authenticated connection bob applied general authentication protocol rules discussed earlier attack could stopped detailed discussion kinds attacks thwart see bird et al also show possible systematically construct protocols provably correct simplest protocol nevertheless bit complicated show different class protocol also works new authentication protocol shown bird et al uses hmac type saw studying ipsec alice starts sending bob nonce ra message bob responds selecting nonce rb sending back along hmac hmac formed building data structure consisting alice nonce bob nonce identities shared secret key kab data structure hashed hmac example using sha alice receives message ra picked rb arrives plaintext two identities secret key kab known along compute hmac agrees hmac message knows talking bob trudy know kab thus figure hmac send alice responds bob hmac containing two nonces trudy somehow subvert protocol force either party encrypt hash value choice happened hmacs include values chosen sending party something trudy control 833 authentication protocols alice ra rb hmac ra rb b kab bob hmac ra rb kab authentication using hmacs using hmacs way use idea alternative scheme often used instead computing hmac series items encrypt items sequentially using cipher block chaining establishing shared key diffie hellman key exchange far assumed alice bob share secret key suppose far universally accepted pki signing distributing certificates establish one one way would alice call bob give key phone would probably start saying know alice trudy could try arrange meeting one bringing passport driver license three major credit cards busy people might able find mutually acceptable date months fortunately incredible may sound way total strangers establish shared secret key broad daylight even trudy carefully recording every message protocol allows strangers establish shared secret key called diffie hellman key exchange diffie hellman works follows alice bob agree two large numbers n g n prime n also prime certain conditions apply g numbers may public either one pick n g tell openly alice picks large say bit number x keeps secret similarly bob picks large secret number alice initiates key exchange protocol sending bob message containing n g g x mod n shown bob responds sending alice message containing g mod n alice raises number bob sent xth power modulo n get g mod n x mod n bob performs similar operation get g x mod n mod n laws modular arithmetic calculations yield g xy mod n lo behold magic alice bob suddenly share secret key g xy mod n 834 network security alice picks x bob picks n g gx mod n gy mod n alice computes gy mod n x mod n gxy mod n bob alice bob computes gx mod n mod n gxy mod n diffie hellman key exchange trudy course seen messages knows g n message could compute x could figure secret key trouble given g x mod n find x practical algorithm computing discrete logarithms modulo large prime number known make example concrete use completely unrealistic values n g alice picks x bob picks kept secret alice message bob mod bob message alice alice computes mod bob computes mod alice bob independently determined secret key find key trudy solve equation 3x mod done exhaustive search small numbers like numbers hundreds bits long currently known algorithms simply take far long even massively parallel lightning fast supercomputers despite elegance diffie hellman algorithm problem bob gets triple know alice trudy way know unfortunately trudy exploit fact deceive alice bob illustrated alice bob choosing x respectively trudy picks random number z alice sends message intended bob trudy intercepts sends message bob using correct g n public anyway z instead x also sends message back alice later bob sends message alice trudy intercepts keeps everybody modular arithmetic alice computes secret key g xz mod n trudy messages alice bob computes g yz mod n trudy messages bob alice thinks talking bob establishes session key trudy bob every message alice sends encrypted session captured trudy stored modified desired optionally passed bob similarly direction trudy sees everything modify messages alice bob illusion secure channel one another sec authentication protocols alice picks x trudy picks z n g gx mod n gz mod n n g gz mod n bob trudy alice bob picks gy mod n man middle attack reason attack known man middle attack also called bucket brigade attack vaguely resembles old time volunteer fire department passing buckets along line fire truck fire authentication using key distribution center ka b ks kb ks bob alice kdc setting shared secret stranger almost worked quite hand probably worth first place sour grapes attack talk n people way would need n keys popular people key management would become real burden especially key stored separate plastic chip card different approach introduce trusted key distribution center model user single key shared kdc authentication session key management go kdc simplest known kdc authentication protocol involving two parties trusted kdc depicted first attempt authentication protocol using kdc idea behind protocol simple alice picks session key ks tells kdc wants talk bob using ks message encrypted 836 network security secret key alice shares kdc ka kdc decrypts message extracting bob identity session key constructs new message containing alice identity session key sends message bob encryption done kb secret key bob shares kdc bob decrypts message learns alice wants talk key wants use authentication happens free kdc knows message must come alice since one else would able encrypt alice secret key similarly bob knows message must come kdc trusts since one else knows secret key unfortunately protocol serious flaw trudy needs money figures legitimate service perform alice makes attractive offer gets job work trudy politely requests alice pay bank transfer alice establishes session key banker bob sends bob message requesting money transferred trudy account meanwhile trudy back old ways snooping network copies message money transfer request follows later replays bob thinks alice must hired trudy clearly good work bob transfers equal amount money alice account trudy time 50th message pair bob runs office find trudy offer big loan expand obviously successful business problem called replay attack several solutions replay attack possible first one include timestamp message anyone receives obsolete message discarded trouble approach clocks never exactly synchronized network interval timestamp valid trudy replay message interval get away second solution put nonce message party remember previous nonces reject message containing previously used nonce nonces remembered forever lest trudy try replaying year old message also machine crashes loses nonce list vulnerable replay attack timestamps nonces combined limit long nonces remembered clearly protocol going get lot complicated sophisticated approach mutual authentication use multiway challenge response protocol well known example protocol needham schroeder authentication protocol needham schroeder one variant shown protocol begins alice telling kdc wants talk bob message contains large random number ra nonce kdc sends back message containing alice random number session key ticket authentication protocols ka ra b ks kb ks kb ks ks ra2 bob alice ra b kdc ks ra2 rb ks rb needham schroeder authentication protocol send bob point random number ra assure alice message fresh replay bob identity also enclosed case trudy gets funny ideas replacing b message identity kdc encrypt ticket end message kt instead kb ticket encrypted kb included inside encrypted message prevent trudy replacing something else way back alice alice sends ticket bob along new random number ra encrypted session key ks message bob sends back ks ra prove alice talking real bob sending back ks ra would worked since trudy could stolen message receiving message alice convinced talking bob replays could used far generated ra milliseconds ago purpose message convince bob indeed alice talking replays used either party generate challenge respond one possibility kind replay attack eliminated although protocol seems pretty solid slight weakness trudy ever manages obtain old session key plaintext initiate new session bob replaying message corresponds compromised key convince alice denning sacco time plunder alice bank account without perform legitimate service even needham schroeder later published protocol corrects problem issue journal otway rees also published protocol solves problem shorter way shows slightly modified otway rees protocol otway rees protocol alice starts generating pair random numbers r used common identifier ra alice use challenge bob bob gets message constructs new message encrypted part alice message analogous one network security b r ka b r ra kdc alice ka ra ks ka b r ra b kb b r rb bob kb rb ks otway rees authentication protocol slightly simplified parts encrypted ka kb identify alice bob contain common identifier contain challenge kdc checks see r parts might trudy tampered r message replaced part message two rs match kdc believes request message bob valid generates session key encrypts twice alice bob message contains receiver random number proof kdc trudy generated message point alice bob possession session key start communicating first time exchange data messages one see one identical copy ks authentication complete authentication using kerberos authentication protocol used many real systems including windows later versions kerberos based variant needhamschroeder named multiheaded dog greek mythology used guard entrance hades presumably keep undesirables kerberos designed allow workstation users access network resources secure way biggest difference needham schroeder assumption clocks fairly well synchronized protocol gone several iterations v5 one widely used industry defined rfc earlier version v4 finally retired serious flaws found yu et al v5 improves v4 many small changes protocol improved features fact longer relies dated des information see neuman ts kerberos involves three servers addition alice client workstation authentication server verifies users login ticket granting server tgs issues proof identity tickets bob server actually work alice wants performed sec authentication protocols alice ka tgs ks ktgs ks b ks ktgs ks ks b kab kb b kab kab kb b kab bob tgs tgs similar kdc shares secret password every user tgs job issue tickets convince real servers bearer tgs ticket really claims start session alice sits arbitrary public workstation types name workstation sends name name tgs plaintext shown message comes back session key ticket ktgs ks intended tgs session key encrypted using alice secret key alice decrypt message arrives workstation ask alice password password used generate ka order decrypt message obtain session key point workstation overwrites alice password make sure inside workstation milliseconds trudy tries logging alice password types wrong workstation detect standard part message incorrect kab operation kerberos v5 logs alice may tell workstation wants contact bob file server workstation sends message tgs asking ticket use bob key element request ticket ktgs ks encrypted tgs secret key used proof sender really alice tgs responds message creating session key kab alice use bob two versions sent back first encrypted ks alice read second another ticket encrypted bob key kb bob read 840 network security trudy copy message try use foiled encrypted timestamp sent along trudy replace timestamp recent one know ks session key alice uses talk tgs even trudy replays message quickly get another copy message could decrypt first time able decrypt second time either alice send kab bob via new ticket establish session message exchange also timestamped optional response message proof alice actually talking bob trudy series exchanges alice communicate bob cover kab later decides needs talk another server carol repeats message tgs specifying c instead b tgs promptly respond ticket encrypted kc alice send carol carol accept proof came alice point work alice access servers network secure way password never go network fact workstation milliseconds however note server authorization alice presents ticket bob merely proves bob sent precisely alice allowed bob since kerberos designers expect entire world trust single authentication server made provision multiple realms tgs get ticket server distant realm alice would ask tgs ticket accepted tgs distant realm distant tgs registered local tgs way local servers local tgs give alice ticket valid distant tgs business getting tickets servers realm note however parties two realms business one must trust tgs otherwise business authentication using public key cryptography mutual authentication also done using public key cryptography start alice needs get bob public key pki exists directory server hands certificates public keys alice ask bob shown message reply message x certificate containing bob public key alice verifies signature correct sends bob message containing identity nonce bob receives message idea whether came alice trudy plays along asks directory server alice public key message soon gets message sends alice message containing alice ra nonce rb proposed session key ks authentication protocols directory eb e b e v gi ere h alice g h ive ere e e e eb ra ea ra rb ks bob ks rb mutual authentication using public key cryptography alice gets message decrypts using private key sees ra gives warm feeling inside message must come bob since trudy way determining ra furthermore must fresh replay since sent bob ra alice agrees session sending back message bob sees rb encrypted session key generated knows alice got message verified ra bob happy camper trudy try subvert protocol fabricate message trick bob probing alice alice see ra send proceed trudy forge message back bob know rb ks determine without alice private key luck email security email message sent two distant sites generally transit dozens machines way read record message future use practice privacy nonexistent despite many people think nevertheless many people would like able send email read intended recipient one else boss even government desire stimulated several people groups apply cryptographic principles studied earlier email produce secure email following sections study widely used secure email system pgp briefly mention one mime additional information secure email see kaufman et al schneier 842 network security pgp pretty good privacy first example pgp pretty good privacy essentially brainchild one person phil zimmermann 1995a 1995b zimmermann privacy advocate whose motto privacy outlawed outlaws privacy released pgp complete email security package provides privacy authentication digital signatures compression easy use form furthermore complete package including source code distributed free charge via internet due quality price zero easy availability unix linux windows mac os platforms widely used today pgp encrypts data using block cipher called idea international data encryption algorithm uses bit keys devised switzerland time des seen tainted aes yet invented conceptually idea similar des aes mixes bits series rounds details mixing functions different des aes key management uses rsa data integrity uses md5 topics already discussed pgp also embroiled controversy since day levy zimmermann nothing stop people placing pgp internet people world could get u government claimed zimmermann violated u laws prohibiting export munitions u government investigation zimmermann went years eventually dropped probably two reasons first zimmermann place pgp internet lawyer claimed never exported anything little matter whether creating web site constitutes export second government eventually came realize winning trial meant convincing jury web site containing downloadable privacy program covered arms trafficking law prohibiting export war materiel tanks submarines military aircraft nuclear weapons years negative publicity probably help much either aside export rules bizarre put mildly government considered putting code web site illegal export harassed zimmermann years hand someone published complete pgp source code c book large font checksum page make scanning easy exported book fine government books classified munitions sword mightier pen least uncle sam another problem pgp ran involved patent infringement company holding rsa patent rsa security inc alleged pgp use rsa algorithm infringed patent problem settled releases starting furthermore pgp uses another patented encryption algorithm idea whose use caused problems first sec email security since pgp open source various people groups modified produced number versions designed get around munitions laws others focused avoiding use patented algorithms still others wanted turn closed source commercial product although munitions laws slightly liberalized otherwise products using aes would exportable u rsa patent expired september legacy problems several incompatible versions pgp circulation various names discussion focuses classic pgp oldest simplest version another popular version open pgp described rfc yet another gnu privacy guard pgp intentionally uses existing cryptographic algorithms rather inventing new ones largely based algorithms withstood extensive peer review designed influenced government agency trying weaken people distrust government property big plus pgp supports text compression secrecy digital signatures also provides extensive key management facilities oddly enough email facilities like preprocessor takes plaintext input produces signed ciphertext base64 output output emailed course pgp implementations call user agent final step actually send message see pgp works let us consider example alice wants send signed plaintext message p bob secure way alice bob private dx public ex rsa keys let us assume one knows public key cover pgp key management shortly alice starts invoking pgp program computer pgp first hashes message p using md5 encrypts resulting hash using private rsa key da bob eventually gets message decrypt hash alice public key verify hash correct even someone else e g trudy could acquire hash stage decrypt alice known public key strength md5 guarantees would computationally infeasible produce another message md5 hash encrypted hash original message concatenated single message p1 compressed using zip program uses zivlempel algorithm ziv lempel call output step p1 z next pgp prompts alice random input content typing speed used generate bit idea message key km called session key pgp literature really misnomer since session km used encrypt p1 z idea cipher feedback mode addition km encrypted bob public key eb two components concatenated converted base64 discussed section mime chap resulting message contains letters digits symbols means put rfc body expected arrive unmodified 844 network security km one time message key idea bob public rsa key eb concatenation km alice private rsa key da md5 p rsa p1 zip p1 z rsa idea base ascii text network p1 compressed original plaintext message alice concatenation p signed hash p concatenation p1 z encrypted idea km encrypted eb pgp operation sending message bob gets message reverses base64 encoding decrypts idea key using private rsa key using key decrypts message get p1 z decompressing bob separates plaintext encrypted hash decrypts hash using alice public key plaintext hash agrees md5 computation knows p correct message came alice worth noting rsa used two places encrypt bit md5 hash encrypt bit idea key although rsa slow encrypt bits large volume data furthermore plaintext bits exceedingly random considerable amount work required trudy part determine guessed key correct heavyduty encryption done idea orders magnitude faster rsa thus pgp provides security compression digital signature much efficient way scheme illustrated pgp supports four rsa key lengths user select one appropriate lengths casual bits broken easily today commercial bits breakable three letter organizations military bits breakable anyone earth alien bits breakable anyone planets either sec email security since rsa used two small computations everyone use alienstrength keys time format classic pgp message shown numerous formats also use message three parts containing idea key signature message respectively key part contains key also key identifier since users permitted multiple public keys base64 compressed encrypted idea message signature part key part id eb encrypted km eb sig hdr e id ea message part md5 p hash e msg file hdr name e message da pgp message signature part contains header concern us header followed timestamp identifier sender public key used decrypt signature hash type information identifies algorithms used allow md6 rsa2 used invented encrypted hash message part also contains header default name file used receiver writes file disk message creation timestamp finally message key management received large amount attention pgp achilles heel security systems key management works follows user maintains two data structures locally private key ring public key ring private key ring contains one personal private public key pairs reason supporting multiple pairs per user permit users change public keys periodically one thought compromised without invalidating messages currently preparation transit pair identifier associated message sender tell recipient public key used encrypt message identifiers consist low order bits public key users responsible avoiding conflicts public key identifiers private keys disk encrypted using special arbitrarily long password protect sneak attacks public key ring contains public keys user correspondents needed encrypt message keys associated message entry 846 network security public key ring contains public key also bit identifier indication strongly user trusts key problem tackled following suppose public keys maintained bulletin boards one way trudy read bob secret email attack bulletin board replace bob public key one choice alice later fetches key allegedly belonging bob trudy mount bucket brigade attack bob prevent attacks least minimize consequences alice needs know much trust item called bob key public key ring knows bob personally handed cd rom containing key set trust value highest value decentralized user controlled approach public key management sets pgp apart centralized pki schemes nevertheless people sometimes obtain public keys querying trusted key server reason x standardized pgp supported certificates well traditional pgp public key ring mechanism current versions pgp x support mime ietf venture email security called mime secure mime described rfcs provides authentication data integrity secrecy nonrepudiation also quite flexible supporting variety cryptographic algorithms surprisingly given name mime integrates well mime allowing kinds messages protected variety new mime headers defined example holding digital signatures mime rigid certificate hierarchy beginning single root one political problems doomed earlier system called pem privacy enhanced mail instead users multiple trust anchors long certificate traced back trust anchor user believes considered valid mime uses standard algorithms protocols examining far discuss details please consult rfcs web security studied two important areas security needed communications email think soup appetizer time main course web security web trudies hang nowadays dirty work following sections look problems issues relating web security sec web security web security roughly divided three parts first objects resources named securely second secure authenticated connections established third happens web site sends client piece executable code looking threats examine issues threats one reads web site security problems newspaper almost weekly situation really pretty grim let us look examples already happened first home pages numerous organizations attacked replaced new home pages crackers choosing popular press calls people break computers hackers many programmers reserve term great programmers prefer call people crackers sites cracked include belonging yahoo u army cia nasa new york times cases crackers put funny text sites repaired within hours let us look much serious cases numerous sites brought denial service attacks cracker floods site traffic rendering unable respond legitimate queries often attack mounted large number machines cracker already broken ddos attacks attacks common even make news cost attacked sites thousands dollars lost business swedish cracker broke microsoft hotmail web site created mirror site allowed anyone type name hotmail user read person current archived email another case year old russian cracker named maxim broke e commerce web site stole 000 credit card numbers approached site owners told pay 000 would post credit card numbers internet give blackmail indeed posted credit card numbers inflicting great damage many innocent victims different vein year old california student emailed press release news agency falsely stating emulex corporation going post large quarterly loss c e resigning immediately within hours company stock dropped causing stockholders lose billion perpetrator made quarter million dollars selling stock short sending announcement event web site break clear putting announcement home page big corporation would similar effect could unfortunately go like many pages time examine technical issues related web security 848 network security information security problems kinds see anderson 2008a stuttard pinto schneier searching internet also turn vast numbers specific cases secure naming let us start something basic alice wants visit bob web site types bob url browser seconds later web page appears bob maybe yes maybe trudy might old tricks example might intercepting alice outgoing packets examining captures http get request headed bob web site could go bob web site get page modify wishes return fake page alice alice would none wiser worse yet trudy could slash prices bob e store make goods look attractive thereby tricking alice sending credit card number bob buy merchandise one disadvantage classic man middle attack trudy position intercept alice outgoing traffic forge incoming traffic practice tap either alice phone line bob since tapping fiber backbone fairly difficult active wiretapping certainly possible fair amount work trudy clever also lazy besides easier ways trick alice dns spoofing one way would trudy crack dns system maybe dns cache alice isp replace bob ip address say 3 trudy ip address say 9 leads following attack way supposed work illustrated alice asks dns bob ip address gets asks bob home page gets trudy modified bob dns record contain ip address instead bob get situation b alice looks bob ip address gets trudy traffic intended bob goes trudy trudy mount man middle attack without go trouble tapping phone lines instead break dns server change one record much easier proposition might trudy fool dns turns relatively easy briefly summarized trudy trick dns server alice isp sending query look bob address unfortunately since dns uses udp dns server real way checking supplied answer trudy exploit property forging expected reply thus injecting false ip address dns server cache simplicity assume alice isp initially entry bob web site bob com trudy wait times try later use tricks sec web security cracked dns server dns server alice bob web server 3 alice trudy web server 9 give bob ip address 3 bob ip address get index html bob home page give bob ip address 9 trudy ip address get index html trudy fake bob home page b normal situation b attack based breaking dns server modifying bob record trudy starts attack sending lookup request alice isp asking ip address bob com since entry dns name cache server queries top level server com domain get one however trudy beats com server punch sends back false reply saying bob com 9 ip address false reply gets back alice isp first one cached real reply rejected unsolicited reply query longer outstanding tricking dns server installing false ip address called dns spoofing cache holds intentionally false ip address like called poisoned cache actually things quite simple first alice isp checks see reply bears correct ip source address top level server since trudy put anything wants ip field defeat test easily since ip addresses top level servers public second allow dns servers tell reply goes request requests carry sequence number spoof alice isp trudy know current sequence number easiest way learn current sequence number trudy register domain say trudy intruder com let us assume ip address also 9 also creates dns server newly hatched domain dns trudy intruder com uses trudy 9 ip address since trudy one computer make alice isp aware dns server easy ask alice isp foobar trudy intruder com cause alice isp find serves trudy new domain asking top level com server 850 network security dns trudy intruder com safely cache alice isp real attack start trudy queries alice isp www trudy intruder com isp naturally sends trudy dns server query asking query bears sequence number trudy looking quick like bunny trudy asks alice isp look bob immediately answers question sending isp forged reply allegedly top level com server saying bob com 9 forged reply carries sequence number one higher one received also send second forgery sequence number two higher maybe dozen increasing sequence numbers one bound match rest thrown alice forged reply arrives cached real reply comes later rejected since query outstanding alice looks bob com told use 9 trudy address trudy mounted successful man middle attack comfort living room various steps attack illustrated one specific attack foiled dns servers use random ids queries rather counting seems every time one hole plugged another one turns particular ids bits working easy computer guessing dns server com trudy alice isp cache look foobar trudy intruder com force isp cache look www trudy intruder com get isp next sequence number request www trudy intruder com carrying isp next sequence number n quick like bunny look bob com force isp query com server step legitimate query bob com seq n trudy forged answer bob 9 seq n real answer rejected late trudy spoofs alice isp secure dns real problem dns designed time internet research facility hundred universities neither alice bob trudy invited party security issue making internet work issue environment changed radically sec web security years ietf set working group make dns fundamentally secure ongoing project known dnssec dns security first output presented rfc unfortunately dnssec fully deployed yet numerous dns servers still vulnerable spoofing attacks dnssec conceptually extremely simple based public key cryptography every dns zone sense public private key pair information sent dns server signed originating zone private key receiver verify authenticity dnssec offers three fundamental services proof data originated public key distribution transaction request authentication main service first one verifies data returned approved zone owner second one useful storing retrieving public keys securely third one needed guard playback spoofing attacks note secrecy offered service since information dns considered public since phasing dnssec expected take several years ability security aware servers interwork security ignorant servers essential implies protocol changed let us look details dns records grouped sets called rrsets resource record sets records name class type lumped together set rrset may contain multiple records example dns name resolves primary ip address secondary ip address rrsets extended several new record types discussed rrset cryptographically hashed e g using sha hash signed zone private key e g using rsa unit transmission clients signed rrset upon receipt signed rrset client verify whether signed private key originating zone signature agrees data accepted since rrset contains signature rrsets cached anywhere even untrustworthy servers without endangering security dnssec introduces several new record types first key record records holds public key zone user host principal cryptographic algorithm used signing protocol used transmission bits public key stored naked x certificates used due bulk algorithm field holds md5 rsa signatures preferred choice values combinations protocol field indicate use ipsec security protocols second new record type sig record holds signed hash according algorithm specified key record signature applies records rrset including key records present excluding 852 network security also holds times signature begins period validity expires well signer name items dnssec design zone private key kept offline twice day contents zone database manually transported e g cd rom disconnected machine private key located rrsets signed sig records thus produced conveyed back zone primary server cd rom way private key stored cd rom locked safe except inserted disconnected machine signing day new rrsets signing completed copies key erased memory disk cd rom returned safe procedure reduces electronic security physical security something people understand deal method presigning rrsets greatly speeds process answering queries since cryptography done fly trade large amount disk space needed store keys signatures dns databases records increase tenfold size due signature client process gets signed rrset must apply originating zone public key decrypt hash compute hash compare two values agree data considered valid however procedure begs question client gets zone public key one way acquire trusted server using secure connection e g using ipsec however practice expected clients preconfigured public keys top level domains alice wants visit bob web site ask dns rrset bob com contain ip address key record containing bob public key rrset signed top level com domain alice easily verify validity example rrset might contain shown domain name time live class type value bob com 3 bob com key 3682793a7b73f731029ce2737d bob com sig 86947503a8b848f5272e53930c example rrset bob com key record bob public key sig record top level com server signed hash key records verify authenticity armed verified copy bob public key alice ask bob dns server run bob ip address www bob com rrset signed bob private key alice verify signature rrset bob returns trudy somehow manages inject false rrset caches alice easily detect lack authenticity sig record contained incorrect sec web security however dnssec also provides cryptographic mechanism bind response specific query prevent kind spoof trudy managed pull optional antispoofing measure adds response hash query message signed respondent private key since trudy know private key top level com server forge response query alice isp sent certainly get response back first rejected due invalid signature hashed query dnssec also supports record types example cert record used storing e g x certificates record provided people want turn dns pki whether actually happen remains seen stop discussion dnssec details please consult rfc ssl secure sockets layer secure naming good start much web security next step secure connections look secure connections achieved nothing involving security simple either web burst public view initially used distributing static pages however long companies got idea using financial transactions purchasing merchandise credit card online banking electronic stock trading applications created demand secure connections netscape communications corp dominant browser vendor responded introducing security package called ssl secure sockets layer meet demand software protocol widely used example firefox safari internet explorer worth examining detail ssl builds secure connection two sockets including parameter negotiation client server authentication server client secret communication data integrity protection seen items need elaborate positioning ssl usual protocol stack illustrated effectively new layer interposed application layer transport layer accepting requests browser sending tcp transmission server secure connection established ssl main job handling compression encryption http used ssl called https secure http even though standard http protocol sometimes available new port instead port 854 network security aside ssl restricted web browsers common application also provide mutual authentication application http security ssl transport tcp network ip data link ppp physical modem adsl cable tv layers protocols home user browsing ssl ssl protocol gone several versions discuss version widely used version ssl supports variety different options options include presence absence compression cryptographic algorithms used matters relating export restrictions cryptography last mainly intended make sure serious cryptography used ends connection united states cases keys limited bits cryptographers regard something joke netscape forced put restriction order get export license u government ssl consists two subprotocols one establishing secure connection one using let us start seeing secure connections established connection establishment subprotocol shown starts message alice sends request bob establish connection request specifies ssl version alice preferences respect compression cryptographic algorithms also contains nonce ra used later bob turn message bob makes choice among various algorithms alice support sends nonce rb message sends certificate containing public key certificate signed well known authority also sends chain certificates followed back one browsers including alice come preloaded public keys bob establish chain anchored one alice able verify bob public key point bob may send messages request alice public key certificate bob done sends message tell alice turn alice responds choosing random bit premaster key sending bob encrypted public key message actual session key used encrypting data derived premaster key combined nonces complex way message received alice bob able compute session key reason alice tells bob switch sec ssl version preferences ra ssl version choices rb x certificate chain server done eb premaster key bob alice web security change cipher finished change cipher finished simplified version ssl connection establishment subprotocol new cipher message also finished establishment subprotocol message bob acknowledges messages however although alice knows bob bob know alice unless alice public key corresponding certificate unlikely situation individual therefore bob first message may well request alice log using previously established login name password login protocol however outside scope ssl accomplished whatever means data transport begin mentioned ssl supports multiple cryptographic algorithms strongest one uses triple des three separate keys encryption sha message integrity combination relatively slow mostly used banking applications highest security required ordinary e commerce applications rc4 used bit key encryption md5 used message authentication rc4 takes bit key seed expands much larger number internal use uses internal number generate keystream keystream xored plaintext provide classical stream cipher saw export versions also use rc4 bit keys bits made public make cipher easy break actual transport second subprotocol used shown messages browser first broken units kb data 856 network security compression enabled unit separately compressed secret key derived two nonces premaster key concatenated compressed text result hashed agreed hashing algorithm usually md5 hash appended fragment mac compressed fragment plus mac encrypted agreed symmetric encryption algorithm usually xoring rc4 keystream finally fragment header attached fragment transmitted tcp connection message browser fragmentation part part message authentication code compression mac added encryption header added data transmission using ssl word caution order however since shown rc4 weak keys easily cryptanalyzed security ssl using rc4 shaky ground fluhrer et al browsers allow user choose cipher suite configured use triple des bit keys sha time even though combination slower rc4 md5 better yet users upgrade browsers support successor ssl describe shortly problem ssl principals may certificates even always verify keys used match netscape communications corp turned ssl ietf standardization result tls transport layer security described rfc tls built ssl version changes made ssl relatively small enough ssl version tls interoperate example way session key derived premaster key nonces sec web security changed make key stronger e harder cryptanalyze incompatibility browsers implement protocols tls falling back ssl negotiation necessary referred ssl tls first tls implementation appeared version defined august includes support stronger cipher suites notably aes ssl remained strong marketplace although tls probably gradually replace mobile code security naming connections two areas concern related web security early days web pages static html files contain executable code often contain small programs including java applets activex controls javascripts downloading executing mobile code obviously massive security risk various methods devised minimize take quick peek issues raised mobile code approaches dealing java applet security java applets small java programs compiled stack oriented machine language called jvm java virtual machine placed web page downloading along page page loaded applets inserted jvm interpreter inside browser illustrated 0xffffffff virtual address space untrusted applet sandbox trusted applet interpreter web browser applets interpreted web browser advantage running interpreted code compiled code every instruction examined interpreter executed gives interpreter opportunity check whether instruction address valid addition system calls also caught interpreted calls handled matter security policy example applet trusted e g 858 network security came local disk system calls could carried without question however applet trusted e g came internet could encapsulated called sandbox restrict behavior trap attempts use system resources applet tries use system resource call passed security monitor approval monitor examines call light local security policy makes decision allow reject way possible give applets access resources unfortunately reality security model works badly bugs crop time activex activex controls x86 binary programs embedded web pages one encountered check made see executed passes test executed interpreted sandboxed way much power user program potentially great harm thus security decision whether run activex control retrospect whole idea gigantic security hole method microsoft chose making decision based idea code signing activex control accompanied digital signature hash code signed creator using public key cryptography activex control shows browser first verifies signature make sure tampered transit signature correct browser checks internal tables see program creator trusted chain trust back trusted creator creator trusted program executed otherwise microsoft system verifying activex controls called authenticode useful contrast java activex approaches java approach attempt made determine wrote applet instead run time interpreter makes sure things machine owner said applets may contrast code signing attempt monitor mobile code run time behavior came trusted source modified transit runs attempt made see whether code malicious original programmer intended code format hard disk erase flash rom computer never booted programmer certified trusted code run destroy computer unless activex controls disabled browser many people feel trusting unknown software company scary demonstrate problem programmer seattle formed software company got certified trustworthy easy wrote activex control clean shutdown machine distributed activex control widely shut many machines could rebooted sec web security harm done trying expose problem world official response revoke certificate specific activex control ended short episode acute embarrassment underlying problem still evil programmer exploit garfinkel spafford since way police thousands software companies might write mobile code technique code signing disaster waiting happen javascript javascript formal security model long history leaky implementations vendor handles security different way example netscape navigator version used something akin java model version abandoned code signing model fundamental problem letting foreign code run machine asking trouble security standpoint like inviting burglar house trying watch carefully escape kitchen living room something unexpected happens distracted moment bad things happen tension mobile code allows flashy graphics fast interaction many web site designers think much important security especially somebody else machine risk browser extensions well extending web pages code booming marketplace browser extensions add ons plug ins computer programs extend functionality web browsers plug ins often provide capability interpret display certain type content pdfs flash animations extensions add ons provide new browser features better password management ways interact pages example marking enabling easy shopping related items installing extension add plug simple coming across something want browsing following link install program action cause code downloaded across internet installed browser programs written frameworks differ depending browser enhanced however first approximation become part trusted computing base browser code installed buggy entire browser compromised two obvious failure modes well first program may behave maliciously example gathering personal information sending remote server browser knows user installed extension precisely purpose second problem plug ins give browser ability interpret new types content often content full 860 network security blown programming language pdf flash good examples users view pages pdf flash content plug ins browser executing pdf flash code code better safe often vulnerabilities exploit reasons add ons plug ins installed needed trusted vendors viruses viruses another form mobile code unlike examples viruses invited difference virus ordinary mobile code viruses written reproduce virus arrives either via web page email attachment way usually starts infecting executable programs disk one programs run control transferred virus usually tries spread machines example emailing copies everyone victim email address book viruses infect boot sector hard disk machine booted virus gets run viruses become huge problem internet caused billions dollars worth damage obvious solution perhaps whole new generation operating systems based secure microkernels tight compartmentalization users processes resources might help 10 social issues internet security technology area social issues public policy technology meet head often huge consequences briefly examine three areas privacy freedom speech copyright needless say scratch surface additional reading see anderson 2008a garfinkel spafford schneier internet also full material type words privacy censorship copyright search engine also see book web site links http www pearsonhighered com tanenbaum 10 privacy people right privacy good question fourth amendment u constitution prohibits government searching people houses papers effects without good reason goes restrict circumstances search warrants shall issued thus privacy public agenda years least u changed past decade ease governments spy citizens ease citizens prevent sec 10 social issues spying 18th century government search citizen papers send policeman horse go citizen farm demanding see certain documents cumbersome procedure nowadays telephone companies internet providers readily provide wiretaps presented search warrants makes life much easier policeman danger falling horse cryptography changes anybody goes trouble downloading installing pgp uses well guarded alien strength key fairly sure nobody known universe read email search warrant search warrant governments well understand like real privacy means much harder spy criminals stripes also much harder spy journalists political opponents consequently governments restrict forbid use export cryptography france example prior cryptography banned unless government given keys france alone april u government announced intention make hardware cryptoprocessor clipper chip standard networked communication said would guarantee citizens privacy also mentioned chip provided government ability decrypt traffic via scheme called key escrow allowed government access keys however government promised snoop valid search warrant needless say huge furor ensued privacy advocates denouncing whole plan law enforcement officials praising eventually government backed dropped idea large amount information electronic privacy available electronic frontier foundation web site www eff org anonymous remailers pgp ssl technologies make possible two parties establish secure authenticated communication free third party surveillance interference however sometimes privacy best served authentication fact making communication anonymous anonymity may desired point point messages newsgroups let us consider examples first political dissidents living authoritarian regimes often wish communicate anonymously escape jailed killed second wrongdoing many corporate educational governmental organizations often exposed whistleblowers frequently prefer remain anonymous avoid retribution third people unpopular social political religious views may wish communicate via email newsgroups without exposing fourth people may wish discuss alcoholism mental illness sexual harassment child abuse 862 network security member persecuted minority newsgroup without go public numerous examples exist course let us consider specific example 1990s critics nontraditional religious group posted views usenet newsgroup via anonymous remailer server allowed users create pseudonyms send email server remailed posted using pseudonyms one could tell messages really came postings revealed religious group claimed trade secrets copyrighted documents religious group responded telling local authorities trade secrets disclosed copyright infringed crimes server located court case followed server operator compelled turn mapping information revealed true identities persons made postings incidentally first time religious group unhappy someone leaked trade secrets william tyndale burned stake translating bible english substantial segment internet community completely outraged breach confidentiality conclusion everyone drew anonymous remailer stores mapping real email addresses pseudonyms called type remailer worth much case stimulated various people designing anonymous remailers could withstand subpoena attacks new remailers often called cypherpunk remailers work follows user produces email message complete rfc headers except course encrypts remailer public key sends remailer outer rfc headers stripped content decrypted message remailed remailer accounts maintains logs even server later confiscated retains trace messages passed many users wish anonymity chain requests multiple anonymous remailers shown alice wants send bob really really really anonymous valentine day card uses three remailers composes message puts header containing bob email address encrypts whole thing remailer public key e indicated horizontal hatching prepends header remailer email address plaintext message shown remailers figure encrypts message remailer public key e indicated vertical hatching prepends plaintext header containing remailer email address message shown finally encrypts entire message remailer public key e prepends plaintext header remailer email address message shown right alice figure message actually transmits sec 10 encrypted e1 encrypted e2 alice social issues encrypted e3 bob bob bob bob bob anonymous remailer alice uses three remailers send bob message message hits remailer outer header stripped body decrypted emailed remailer similar steps occur two remailers although extremely difficult anyone trace final message back alice many remailers take additional safety precautions example may hold messages random time add remove junk end message reorder messages make harder anyone tell message output remailer corresponds input order thwart traffic analysis description kind remailer see mazie res kaashoek anonymity restricted email services also exist allow anonymous web surfing using form layered path one node knows next node chain method called onion routing node peels another layer onion determine forward packet next user configures browser use anonymizer service proxy tor well known example system dingledine et al henceforth http requests go anonymizer network requests page sends back web site sees exit node anonymizer network source request user long anonymizer network refrains keeping log fact one determine requested page 10 freedom speech privacy relates individuals wanting restrict people see second key social issue freedom speech opposite censorship governments wanting restrict individuals read publish web containing millions millions pages become censor paradise depending nature ideology regime banned material may include web sites containing following 864 network security material inappropriate children teenagers hate aimed various ethnic religious sexual groups information democracy democratic values accounts historical events contradicting government version manuals picking locks building weapons encrypting messages etc usual response ban bad sites sometimes results unexpected example public libraries installed web filters computers make child friendly blocking pornography sites filters veto sites blacklists also check pages dirty words displaying one case loudoun county virginia filter blocked patron search information breast cancer filter saw word breast library patron sued loudoun county however livermore california parent sued public library installing filter year old son caught viewing pornography library escaped many people world wide web worldwide web covers whole world countries agree allowed web example november french court ordered yahoo california corporation block french users viewing auctions nazi memorabilia yahoo web site owning material violates french law yahoo appealed u court sided issue whose laws apply far settled imagine would happen court utah instructed france block web sites dealing wine comply utah much stricter laws alcohol suppose china demanded web sites dealing democracy banned interest state iranian laws religion apply liberal sweden saudi arabia block web sites dealing women rights whole issue veritable pandora box relevant comment john gilmore net interprets censorship damage routes around concrete implementation consider eternity service anderson goal make sure published information depublished rewritten common soviet union josef stalin reign use eternity service user specifies long material preserved pays fee proportional duration size uploads thereafter one remove edit even uploader could service implemented simplest model use peer peer system stored documents would placed dozens participating servers gets fraction fee thus incentive join system servers spread many legal jurisdictions maximum resilience lists randomly selected servers would stored sec 10 social issues securely multiple places compromised others would still exist authority bent destroying document could never sure found copies system could also made self repairing sense became known copies destroyed remaining sites would attempt find new repositories replace eternity service first proposal censorship resistant system since others proposed cases implemented various new features added encryption anonymity fault tolerance often files stored broken multiple fragments fragment stored many servers systems freenet clarke et al pasis wylie et al publius waldman et al work reported serjantov increasingly many countries trying regulate export intangibles often include web sites software scientific papers email telephone helpdesks even u k centuries long tradition freedom speech seriously considering highly restrictive laws would example define technical discussions british professor foreign ph student located university cambridge regulated export needing government license anderson needless say many people consider policy outrageous steganography countries censorship abounds dissidents often try use technology evade cryptography allows secret messages sent although possibly lawfully government thinks alice bad person mere fact communicating bob may get put category repressive governments understand concept transitive closure even short mathematicians anonymous remailers help banned domestically messages foreign ones require government export license help much web people want communicate secretly often try hide fact communication taking place science hiding messages called steganography greek words covered writing fact ancient greeks used herodotus wrote general shaved head messenger tattooed message scalp let hair grow back sending modern techniques conceptually higher bandwidth lower latency require services barber case point consider photograph taken one authors ast kenya contains three zebras contemplating acacia tree b appears three zebras acacia tree extra added attraction contains complete unabridged text five 866 network security shakespeare plays embedded hamlet king lear macbeth merchant venice julius caesar together plays total kb text b three zebras tree b three zebras tree complete text five plays william shakespeare steganographic channel work original color image pixels pixel consists three bit numbers one red green blue intensity pixel pixel color formed linear superposition three colors steganographic encoding method uses low order bit rgb color value covert channel thus pixel room bits secret information red value green value blue value image size bits 912 bytes secret information stored full text five plays short notice add 891 bytes text first compressed kb using standard compression algorithm compressed output encrypted using idea inserted low order bits color value seen actually seen existence information completely invisible equally invisible large full color version photo eye easily distinguish bit color bit color viewing two images black white low resolution justice powerful technique get better feel steganography works prepared demonstration including full color highresolution image b five plays embedded demonstration including tools inserting extracting text images found book web site use steganography undetected communication dissidents could create web site bursting politically correct pictures photographs great leader local sports movie television stars etc course pictures would riddled steganographic messages messages first sec 10 social issues compressed encrypted even someone suspected presence would immense difficulty distinguishing messages white noise course images fresh scans copying picture internet changing bits dead giveaway images means carrier steganographic messages audio files also work fine hidden information carried voice ip call manipulating packet delays distorting audio even header fields packets lubacz et al even layout ordering tags html file carry information although examined steganography context free speech numerous uses one common use owners images encode secret messages stating ownership rights image stolen placed web site lawful owner reveal steganographic message court prove whose image technique called watermarking discussed piva et al steganography see wayner 10 copyright privacy censorship two areas technology meets public policy third one copyright law copyright granting creators ip intellectual property including writers poets artists composers musicians photographers cinematographers choreographers others exclusive right exploit ip period time typically life author plus years years case corporate ownership copyright work expires passes public domain anyone use sell wish gutenberg project www promo net pg example placed thousands public domain works e g shakespeare twain dickens web u congress extended copyright u another years request hollywood claimed without extension nobody would create anything way contrast patents last years people still invent things copyright came forefront napster music swapping service million members although napster actually copy music courts held holding central database song contributory infringement helping people infringe nobody seriously claims copyright bad idea although many claim term far long favoring big corporations public next generation music sharing already raising major ethical issues example consider peer peer network people share legal files public domain music home videos religious tracts trade secrets etc perhaps copyrighted assume everyone online time via adsl cable machine index hard 868 network security disk plus list members someone looking specific item pick random member see check members person list members lists computers good kind work found item requester copies work copyrighted chances requester infringing although international transfers question whose law applies matters countries uploading illegal downloading supplier crime keep music paid legally downloaded hard disk others might find unlocked cabin country ip thief sneaks carrying notebook computer scanner scans copyrighted book notebook hard disk sneaks guilty crime failing protect someone else copyright trouble brewing copyright front huge battle going hollywood computer industry former wants stringent protection intellectual property latter want hollywood policeman october congress passed dmca digital millennium copyright act makes crime circumvent protection mechanism present copyrighted work tell others circumvent similar legislation enacted european union virtually one thinks pirates far east allowed duplicate copyrighted works many people think dmca completely shifts balance copyright owner interest public interest case point september music industry consortium charged building unbreakable system selling music online sponsored contest inviting people try break system precisely right thing new security system team security researchers several universities led prof edward felten princeton took challenge broke system wrote paper findings submitted usenix security conference underwent peer review accepted paper presented felten received letter recording industry association america threatened sue authors dmca published paper response file lawsuit asking federal court rule whether publishing scientific papers security research still legal fearing definitive court ruling industry withdrew threat court dismissed felten suit doubt industry motivated weakness case invited people try break system threatened sue accepting challenge threat withdrawn paper published craver et al new confrontation virtually certain meanwhile pirated music movies fueled massive growth peer peer networks pleased copyright holders used dmca take action automated systems search peer topeer networks fire warnings network operators users sec 10 social issues suspected infringing copyright united states warnings known dmca takedown notices search arms race hard reliably catch copyright infringers even printer might mistaken culprit piatek et al related issue extent fair use doctrine established court rulings various countries doctrine says purchasers copyrighted work certain limited rights copy work including right quote parts scientific purposes use teaching material schools colleges cases make backup copies personal use case original medium fails tests constitutes fair use include whether use commercial percentage whole copied effect copying sales work since dmca similar laws within european union prohibit circumvention copy protection schemes laws also prohibit legal fair use effect dmca takes away historical rights users give content sellers power major showdown inevitable another development works dwarfs even dmca shifting balance copyright owners users trusted computing advocated industry bodies tcg trusted computing group led companies like intel microsoft idea provide support carefully monitoring user behavior various ways e g playing pirated music level operating system order prohibit unwanted behavior accomplished small chip called tpm trusted platform module difficult tamper pcs sold nowadays come equipped tpm system allows software written content owners manipulate pcs ways users change raises question trusted trusted computing certainly user needless say social consequences scheme immense nice industry finally paying attention security lamentable driver enforcing copyright law rather dealing viruses crackers intruders security issues people concerned short lawmakers lawyers busy balancing economic interests copyright owners public interest years come cyberspace different meatspace constantly pits one group another resulting power struggles litigation hopefully eventually kind resolution least new disruptive technology comes along 11 summary cryptography tool used keep information confidential ensure integrity authenticity modern cryptographic systems based kerckhoff principle publicly known algorithm secret 870 network security key many cryptographic algorithms use complex transformations involving substitutions permutations transform plaintext ciphertext however quantum cryptography made practical use one time pads may provide truly unbreakable cryptosystems cryptographic algorithms divided symmetric key algorithms public key algorithms symmetric key algorithms mangle bits series rounds parameterized key turn plaintext ciphertext aes rijndael triple des popular symmetric key algorithms present algorithms used electronic code book mode cipher block chaining mode stream cipher mode counter mode others public key algorithms property different keys used encryption decryption decryption key derived encryption key properties make possible publish public key main public key algorithm rsa derives strength fact difficult factor large numbers legal commercial documents need signed accordingly various schemes devised digital signatures using symmetric key public key algorithms commonly messages signed hashed using algorithms sha hashes signed rather original messages public key management done using certificates documents bind principal public key certificates signed trusted authority someone recursively approved trusted authority root chain obtained advance browsers generally many root certificates built cryptographic tools used secure network traffic ipsec operates network layer encrypting packet flows host host firewalls screen traffic going organization often based protocol port used virtual private networks simulate old leased line network provide certain desirable security properties finally wireless networks need good security lest everyone read messages protocols like 11i provide two parties establish session authenticate need establish shared session key various authentication protocols exist including use trusted third party diffie hellman kerberos public key cryptography email security achieved combination techniques studied chapter pgp example compresses messages encrypts secret key sends secret key encrypted receiver public key addition also hashes message sends signed hash verify message integrity web security also important topic starting secure naming dnssec provides way prevent dns spoofing e commerce web sites use sec 11 summary ssl tls establish secure authenticated sessions client server various techniques used deal mobile code especially sandboxing code signing internet raises many issues technology interacts strongly public policy areas include privacy freedom speech copyright problems break following monoalphabetic substitution cipher plaintext consisting letters excerpt poem lewis carroll mvyy bek mnyx n yvjjyr snijrh invq n muvjvdt je n idnvy jurhri n fehfevir pyeir oruvdq ki ndq uri jhrnqvdt ed zb jnvy irr uem rntrhyb jur yeoijrhi ndq jur jkhjyri nyy nqlndpr jurb nhr mnvjvdt ed jur iuvdtyr mvyy bek pezr ndq wevd jur qndpr mvyy bek medj bek mvyy bek medj bek mvyy bek wevd jur qndpr mvyy bek medj bek mvyy bek medj bek medj bek wevd jur qndpr affine cipher version monoalphabetic substitution cipher letters alphabet size first map integers range subsequently integer representing plaintext letter transformed integer representing corresponding cipher text letter encryption function single letter e x ax b mod size alphabet b key cipher co prime trudy finds bob generated ciphertext using affine cipher gets copy ciphertext finds frequent letter ciphertext r second frequent letter ciphertext k show trudy break code retrieve plaintext break following columnar transposition cipher plaintext taken popular computer textbook computer probable word plaintext consists entirely letters spaces ciphertext broken blocks five characters readability aauan cvlre rurnn dltme aeepb ytust iceat npmey iicgo gorch srsoc nntii imiha oofpa gsivt tpsit lbolr otoex alice used transposition cipher encrypt messages bob added security encrypted transposition cipher key using substitution cipher kept encrypted cipher computer trudy managed get hold encrypted transposition cipher key trudy decipher alice messages bob find bit one time pad generates text hello world ciphertext spy conveniently library infinite number books disposal operator also library disposal agreed 872 network security use lord rings one time pad explain could use assets generate infinitely long one time pad quantum cryptography requires photon gun demand fire single photon carrying bit problem calculate many photons bit carries gbps fiber link assume length photon equal wavelength purposes problem micron speed light fiber cm nsec trudy captures regenerates photons quantum cryptography use get wrong cause errors appear bob one time pad fraction bob one time pad bits error average fundamental cryptographic principle states messages must redundancy also know redundancy helps intruder tell guessed key correct consider two forms redundancy first initial n bits plaintext contain known pattern second final n bits message contain hash message security point view two equivalent discuss answer p boxes boxes alternate although arrangement esthetically pleasing secure first p boxes boxes discuss answer design attack des based knowledge plaintext consists exclusively uppercase ascii letters plus space comma period semicolon carriage return line feed nothing known plaintext parity bits text computed cipher breaking machine million processors could analyze key nanosecond would take years break bit version aes let us compute long take time get year still along time course achieve goal need computers times faster moore law computing power doubles every months continues hold many years take parallel computer get cipherbreaking time year aes supports bit key many keys aes see find number physics chemistry astronomy size use internet help search big numbers draw conclusion research suppose message encrypted using des counter mode one bit ciphertext block ci accidentally transformed transmission much plaintext garbled result consider ciphertext block chaining instead single bit transformed bit extra bit inserted ciphertext stream block ci much plaintext garbled result compare cipher block chaining cipher feedback mode terms number encryption operations needed transmit large file one efficient much using rsa public key cryptosystem b z p q list five legal values chap problems b p q find e c using p q find e encrypt hello alice bob use rsa public key encryption order communicate trudy finds alice bob shared one primes used determine number n public key pairs words trudy found na pa q nb pb q trudy use information break alice code consider use counter mode shown iv use threaten security cipher general see alice send bob signed message trudy replaces p bob detect happens trudy replaces p signature digital signatures potential weakness due lazy users e commerce transactions contract might drawn user asked sign sha hash user actually verify contract hash correspond user may inadvertently sign different contract suppose mafia try exploit weakness make money set pay web site e g pornography gambling etc ask new customers credit card number send contract saying customer wishes use service pay credit card ask customer sign knowing sign without verifying contract hash agree show mafia buy diamonds legitimate internet jeweler charge unsuspecting customers math class students assuming students born first half year january 1st june 30th probability least two students birthday assume nobody born leap day possible birthdays ellen confessed marilyn tricking matter tom tenure marilyn resolved avoid problem dictating contents future messages dictating machine new secretary type marilyn planned examine messages terminal typed make sure contained exact words new secretary still use birthday attack falsify message hint consider failed attempt alice get bob public key suppose bob alice already share secret key alice still wants bob public key way get securely alice wants communicate bob using public key cryptography establishes connection someone hopes bob asks public key sends plaintext along x certificate signed root ca alice already public key root ca steps alice carry verify talking bob assume bob care talking e g bob kind public service suppose system uses pki based tree structured hierarchy cas alice wants communicate bob receives certificate bob signed ca x establishing communication channel bob suppose alice never heard x steps alice take verify talking bob 874 network security ipsec using ah used transport mode one machines behind nat box explain answer alice wants send message bob using sha hashes consults regarding appropriate signature algorithm used would suggest give one reason firewall might configured inspect incoming traffic give one reason might configured inspect outgoing traffic think inspections likely successful suppose organization uses vpn securely connect sites internet jim user organization uses vpn communicate boss mary describe one type communication jim mary would require use encryption security mechanism another type communication would require encryption security mechanisms explain answer change one message protocol minor way make resistant reflection attack explain change works diffie hellman key exchange used establish secret key alice bob alice sends bob bob responds alice secret number x bob secret number show alice bob compute secret key two users establish shared secret key using diffie hellman algorithm even never met share secrets certificates explain algorithm susceptible man middle attack b would susceptibility change n g secret protocol sent plaintext along encrypted session key needham schroeder protocol alice generates two challenges ra ra seems like overkill would one done job suppose organization uses kerberos authentication terms security service availability effect tgs goes alice using public key authentication protocol authenticate communication bob however sending message alice forgot encrypt rb trudy knows value rb alice bob need repeat authentication procedure new parameters order ensure secure communication explain answer public key authentication protocol message rb encrypted ks encryption necessary would adequate send back plaintext explain answer point sale terminals use magnetic stripe cards pin codes fatal flaw malicious merchant modify card reader log information card pin code order post additional fake transactions future next generation terminals use cards complete cpu keyboard tiny display card devise protocol system malicious merchants break chap problems possible multicast pgp message restrictions would apply assuming everyone internet used pgp could pgp message sent arbitrary internet address decoded correctly concerned discuss answer attack shown leaves one step step needed spoof work including might reduce potential suspicion fact missing step ssl data transport protocol involves two nonces well premaster key value using nonces consider image pixels want encrypt file sized mb fraction file encrypt image fraction would able encrypt compressed file quarter original size show calculations image b contains ascii text five plays shakespeare would possible hide music among zebras instead text would work much could hide picture given text file size mb encrypted using steganography low order bits color image file size image would required order encrypt entire file size would needed file first compressed third original size give answer pixels show calculations assume images aspect ratio example pixels alice heavy user type anonymous remailer would post many messages favorite newsgroup alt fanclub alice everyone would know came alice bore pseudonym assuming remailer worked correctly trudy could impersonate alice type remailers shut alice switched cypherpunk remailer started new thread newsgroup devise way prevent trudy posting new messages newsgroup impersonating alice search internet interesting case involving privacy write one page report search internet court case involving copyright versus fair use write page report summarizing findings write program encrypts input xoring keystream find write good random number generator generate keystream program act filter taking plaintext standard input producing ciphertext standard output vice versa program take one parameter key seeds random number generator write procedure computes sha hash block data procedure two parameters pointer input buffer pointer byte output buffer see exact specification sha search internet fips full specification 876 network security write function accepts stream ascii characters encrypts input using substitution cipher cipher block chaining mode block size bytes program take plaintext standard input print ciphertext standard output problem allowed select reasonable system determine end input reached padding applied complete block may select output format long unambiguous program receive two parameters pointer initializing vector number k representing substitution cipher shift ascii character would encrypted kth character ahead alphabet example x encoded b encoded e etc make reasonable assumptions respect reaching last character ascii set make sure document clearly code assumptions make input encryption algorithm purpose problem give better understanding mechanisms rsa write function receives parameters primes p q calculates public private rsa keys using parameters outputs n z e printouts standard output function also accept stream ascii characters encrypt input using calculated rsa keys program take plaintext standard input print ciphertext standard output encryption carried character wise take character input encrypt independently characters input problem allowed select reasonable system determine end input reached may select output format long unambiguous make sure document clearly code assumptions make input encryption algorithm 9 reading list bibliography finished study computer networks beginning many interesting topics treated much detail deserve others omitted altogether lack space chapter provide suggestions reading bibliography benefit readers wish continue study computer networks suggestions reading extensive literature aspects computer networks two journals publish papers area ieee acm transactions networking ieee journal selected areas communications periodicals acm special interest groups data communications sigcomm mobility systems users data computing sigmobile publish many papers interest especially emerging topics computer communication review mobile computing communications review ieee also publishes three magazines ieee internet computing ieee network magazine ieee communications magazine contain surveys tutorials case studies networking first two emphasize architecture standards software last tends toward communications technology fiber optics satellites 878 reading list bibliography number annual biannual conferences attract numerous papers networks particular look sigcomm conference nsdi symposium networked systems design implementation mobisys conference mobile systems applications services sosp symposium operating systems principles osdi symposium operating systems design implementation list suggestions supplementary reading keyed chapters book many suggestions books chapters books tutorials surveys full references sec introduction general works comer internet book 4th ed anyone looking easygoing introduction internet look comer describes history growth technology protocols services internet terms novices understand much material covered book also interest technical readers computer communication review 25th anniversary issue jan firsthand look internet developed special issue collects important papers included papers show development tcp multicast dns ethernet overall architecture crovella krishnamurthy internet measurement know well internet works anyway question trivial answer one charge internet book describes techniques developed measure operation internet network infrastructure applications ieee internet computing jan feb first issue ieee internet computing new millennium exactly would expect asked people helped create internet previous millennium speculate going next one experts paul baran lawrence roberts leonard kleinrock stephen crocker danny cohen bob metcalfe bill gates bill joy others see well predictions fared decade later kipnis beating system abuses standards adoption process standards committees try fair vendor neutral work unfortunately companies try abuse system example happened repeatedly company helps develop standard approved announces standard based patent owns license companies likes companies like sec suggestions reading prices alone determines look dark side standardization article excellent start hafner lyon wizards stay late naughton brief history future invented internet anyway many people claimed credit rightly since many people hand different ways paul baran wrote report describing packet switching people various universities designed arpanet architecture people bbn programmed first imps bob kahn vint cerf invented tcp ip books tell story internet least replete many anecdotes physical layer bellamy digital telephony 3rd ed look back important network telephone network authoritative book contains everything ever wanted know particularly interesting chapters transmission multiplexing digital switching fiber optics mobile telephony dsl hu li satellite based internet tutorial internet access via satellite different using terrestrial lines issue delay routing switching also different paper authors examine issues related using satellites internet access joel telecommunications ieee communications society compact surprisingly comprehensive history telecommunications starting telegraph ending 11 article place look also covers radio telephones analog digital switching submarine cables digital transmission television broadcasting satellites cable tv optical communications mobile phones packet switching arpanet internet palais fiber optic communication 5th ed books fiber optic technology tend aimed specialist one accessible covers waveguides light sources light detectors couplers modulation noise many topics su umts air interface rf engineering book provides detailed overview one main 3g cellular systems focused air interface wireless protocols used mobiles network infrastructure 880 reading list bibliography want rfid explained want book easy read primer unusual technology rfid physical layer works covers aspects rfid including potential applications real world examples rfid deployments experience gained also convered data link layer kasim delivering carrier ethernet nowadays ethernet local area technology new fashion use ethernet long distance link carrier grade ethernet book brings together essays cover topic depth lin costello error control coding 2nd ed codes detect correct errors central reliable computer networks popular textbook explains important codes simple linear hamming codes complex low density parity check codes tries minimum algebra necessary still lot stallings data computer communications 9th ed part two covers digital data transmission variety links including error detection error control retransmissions flow control medium access control sublayer andrews et al fundamentals wimax comprehensive book gives definitive treatment wimax technology idea broadband wireless wireless techniques using ofdm multiple antennas multi access system tutorial style gives accessible treatment find heavy material gast 11 wireless networks 2nd ed readable introduction technology protocols 11 good place start begins mac sublayer introduces material different physical layers also security however second edition new enough much say 11n perlman interconnections 2nd ed authoritative entertaining treatment bridges routers routing general perlman book place look author designed algorithms used ieee spanning tree bridge one world leading authorities various aspects networking sec suggestions reading network layer comer internetworking tcp ip vol 5th ed comer written definitive work tcp ip protocol suite fifth edition first half deals ip related protocols network layer chapters deal primarily higher layers also worth reading grayson et al ip design mobile networks traditional telephone networks internet collision course mobile phone networks implemented ip inside book tells design network using ip protocols supports mobile telephone service huitema routing internet 2nd ed want gain deep understanding routing protocols good book pronounceable algorithms e g rip cidr unpronounceable algorithms e g ospf igrp bgp treated great detail newer developments covered since older book covered explained well koodli perkins mobile inter networking ipv6 two important network layer developments presented one volume ipv6 mobile ip topics covered well perkins one driving forces behind mobile ip nucci papagiannaki design measurement management large scale ip networks talked great deal networks work would design deploy manage one isp book fills gap looking modern methods traffic engineering isps provide services using networks perlman interconnections 2nd ed chaps perlman describes many issues involved unicast multicast routing algorithm design wide area networks networks lans far best part book chap author distills many years experience network protocols informative fun chapter required reading protocol designers stevens tcp ip illustrated vol chapters 10 provide comprehensive treatment ip related protocols arp rarp icmp illustrated examples 882 reading list bibliography varghese network algorithmics spent much time talking routers network elements interact book different routers actually designed forward packets prodigious speeds inside scoop related questions book read author authority clever algorithms used practice implement high speed network elements software hardware transport layer comer internetworking tcp ip vol 5th ed mentioned comer written definitive work tcp ip protocol suite second half book udp tcp farrell cahill delay disruption tolerant networking short book one read deeper look architecture protocols applications challenged networks must operate harsh conditions connectivity authors participated development dtns ietf dtn research group stevens tcp ip illustrated vol chapters 24 provide comprehensive treatment tcp illustrated examples application layer berners lee et al world wide web take trip back time perspective web going person invented colleagues cern article focuses web architecture urls http html well future directions compares distributed information systems held practical guide content delivery networks 2nd ed book gives earth exposition cdns work emphasizing practical considerations designing operating cdn performs well hunter et al beginning xml 4th ed many many books html xml web services 1000page book covers likely want know explains write xml xhtml also develop web services produce manipulate xml using ajax soap techniques commonly used practice sec suggestions reading krishnamurthy rexford web protocols practice would hard find comprehensive book aspects web one covers clients servers proxies caching might expect also chapters web traffic measurements well chapters current research improving web simpson video ip 2nd ed author takes broad look ip technology used move video across networks internet private networks designed carry video interestingly book oriented video professional learning networking rather way around wittenburg understanding voice ip technology book covers voice ip works carrying audio data ip protocols quality service issues sip h suite protocols necessarily detailed given material accessible broken digestible units network security anderson security engineering 2nd ed book presents wonderful mix security techniques couched understanding people use misuse technical secrets lies less technical network security see introduction basic security techniques entire chapters devoted various applications including banking nuclear command control security printing biometrics physical security electronic warfare telecom security e commerce copyright protection ferguson et al cryptography engineering many books tell popular cryptographic algorithms work book tells use cryptography cryptographic protocols designed way put together system meet security goals fairly compact book essential reading anyone designing systems depend cryptography fridrich steganography digital media steganography goes back ancient greece wax melted blank tablets secret messages could applied underlying wood wax reapplied nowadays videos audio content internet provide different carriers secret messages various modern techniques hiding finding information images discussed 884 reading list bibliography kaufman et al network security 2nd ed authoritative witty book first place look technical information network security algorithms protocols secret public key algorithms protocols message hashes authentication kerberos pki ipsec ssl tls email security explained carefully considerable length many examples chapter security folklore real gem security devil details anyone planning design security system actually used learn lot real world advice chapter schneier secrets lies read cryptography engineering cover cover know everything know cryptographic algorithms read secrets lies cover cover done lot less time learn cryptographic algorithms whole story security weaknesses due faulty algorithms even keys short flaws security environment nontechnical fascinating discussion computer security broadest sense book good read skoudis liston counter hack reloaded 2nd ed best way stop hacker think like hacker book shows hackers see network argues security function entire network design afterthought based one specific technology covers almost common attacks including social engineering types take advantage users always familiar computer security measures alphabetical bibliography abramson n internet access using vsats ieee commun magazine vol pp 68 july ahmadi overview next generation mobile wimax technology ieee commun magazine vol pp 88 june allman paxson v estimating end end network path properties proc sigcomm conf acm pp 274 anderson c long tail future business selling less rev upd ed new york hyperion 2008a anderson r j security engineering guide building dependable distributed systems 2nd ed new york john wiley sons 2008b anderson r j free speech online offline ieee computer vol pp 30 june sec alphabetical bibliography anderson r j eternity service proc pragocrypt conf ctu publishing house pp 252 andrews j ghosh muhamed r fundamentals wimax standing broadband wireless networking upper saddle river nj pearson education astely dahlman e furuskar jading lindstrom parkvall lte evolution mobile broadband ieee commun maga zine vol pp 51 apr ballardie francis p crowcroft j core based trees cbt proc sigcomm conf acm pp 95 baran p distributed communications introduction distributed communica tion networks memorandum rm pr rand corporation aug bellamy j digital telephony 3rd ed new york john wiley sons bellman r e dynamic programming princeton nj princeton university press bellovin security flag ipv4 header rfc apr belsnes flow control packet switching networks communications net works uxbridge england online pp 361 bennet c h brassard g quantum cryptography public key distribution coin tossing int l conf computer systems signal processing pp 179 beresford stajano f location privacy pervasive computing ieee pervasive computing vol pp 55 jan berghel h l cyber privacy new millennium ieee computer vol pp 134 jan berners lee cailliau loutonen nielsen h f secret world wide web commun acm vol pp 82 aug bertsekas gallager r data networks 2nd ed englewood cliffs nj prentice hall bhatti n crowcroft j qos sensitive flows issues ip packet han dling ieee internet computing vol pp 57 july aug biham e shamir differential fault analysis secret key cryptosystems proc 17th ann int l cryptology conf berlin springer verlag lncs pp 525 bird r gopal herzberg janson p kutten molva r yung systematic design family attack resistant authentication proto cols ieee j selected areas commun vol pp 693 june birrell nelson b j implementing remote procedure calls acm trans computer systems vol pp 59 feb 886 reading list bibliography biryukov shamir wagner real time cryptanalysis a5 pc proc seventh int l workshop fast software encryption berlin springerverlag lncs pp blaze bellovin tapping network door commun acm vol p oct boggs mogul j kent c measured capacity ethernet myths reality proc sigcomm conf acm pp 234 borisov n goldberg wagner intercepting mobile communications insecurity 11 seventh int l conf mobile computing networking acm pp 188 braden r requirements internet hosts communication layers rfc oct braden r borman partridge c computing internet checksum rfc sept brandenburg k mp3 aac explained proc 17th intl conf high quality audio coding audio engineering society pp 110 aug bray paoli j sperberg mcqueen c maler e yergeau f cowan j extensible markup language xml second edition w3c recommendation sept breslau l cao p fan l phillips g shenker web caching zipf like distributions evidence implications proc infocom conf ieee pp 134 burleigh hooke torgerson l fall k cerf v durst b scott k weiss h delay tolerant networking approach interplanetary ternet ieee commun magazine vol pp 136 june burnett paine rsa security official guide cryptography berkeley ca osborne mcgraw hill bush v may think atlantic monthly vol pp 108 july capetanakis j tree algorithms packet broadcast channels ieee trans information theory vol pp 515 sept castagnoli g brauer herrmann optimization cyclic redun dancy check codes parity bits ieee trans commun vol pp 892 june cerf v kahn r protocol packet network interconnection ieee trans commun vol com pp 648 may chang f dean j ghemawat hsieh w wallach burrows chandra fikes gruber r bigtable distributed storage sys tem structured data proc osdi symp usenix pp 29 chase j gallatin j yocum k g end system optimizations high speed tcp ieee commun magazine vol pp 75 apr sec alphabetical bibliography chen nahrstedt k overview qos routing next generation net works ieee network magazine vol pp 69 nov dec chiu jain r analysis increase decrease algorithms conges tion avoidance computer networks comput netw isdn syst vol pp june cisco cisco visual networking index forecast methodology 2014 cisco systems inc june clark design philosophy darpa internet protocols proc sigcomm conf acm pp 114 clark window acknowledgement strategy tcp rfc july clark jacobson v romkey j salwen h analysis tcp processing overhead ieee commun magazine vol pp 29 june clark shenker zhang l supporting real time applications integrated services packet network proc sigcomm conf acm pp 26 clarke c extra terrestrial relays wireless world clarke miller g hong w sandberg wiley b protecting free expression online freenet ieee internet computing vol pp 49 jan feb cohen b incentives build robustness bittorrent proc first workshop economics peer peer systems june comer e internet book 4th ed englewood cliffs nj prentice hall comer e internetworking tcp ip vol 5th ed englewood cliffs nj pren tice hall craver wu liu b stubblefield swartzlander b wallach w dean felten e w reading lines lessons sdmi challenge proc 10th usenix security symp usenix crovella krishnamurthy b internet measurement new york john wiley sons daemen j rijmen v design rijndael berlin springer verlag dalal metclfe r reverse path forwarding broadcast packets com mun acm vol pp 1048 dec davie b farrel mpls next steps san francisco morgan kaufmann davie b rekhter mpls technology applications san francisco mor gan kaufmann davies j understanding ipv6 2nd ed redmond wa microsoft press day j un revised osi reference model computer commun rev vol pp 55 oct 888 reading list bibliography day j zimmermann h osi reference model proc ieee vol pp 1340 dec decandia g hastorin jampani kakulapati g lakshman pilchin sivasubramanian vosshall p vogels w dynamo amazon highly available key value store proc 19th symp operating systems prin acm pp 220 dec deering e sip simple internet protocol ieee network magazine vol pp 28 may june deering cheriton multicast routing datagram networks ex tended lans acm trans computer systems vol pp 110 may demers keshav shenker analysis simulation fair queue ing algorithm internetwork research experience vol pp 26 sept denning e sacco g timestamps key distribution protocols com mun acm vol pp 536 aug devarapalli v wakikawa r petrescu thubert p network mobility nemo basic support protocol rfc jan diffie w hellman e exhaustive cryptanalysis nbs data en cryption standard ieee computer vol pp 84 june diffie w hellman e new directions cryptography ieee trans information theory vol pp 654 nov dijkstra e w note two problems connexion graphs numer math vol pp 271 oct dilley j maggs b parikh j prokop h sitaraman r wheil b globally distributed content delivery ieee internet computing vol pp 58 dingledine r mathewson n syverson p tor second generation onion router proc 13th usenix security symp usenix pp 320 aug donahoo calvert k tcp ip sockets c 2nd ed san francisco morgan kaufmann donahoo calvert k tcp ip sockets java 2nd ed san francisco mor gan kaufmann donaldson g jones cable television broadband network architectures ieee commun magazine vol pp 126 june dorfman r detection defective members large population annals math statistics vol pp 440 dutcher b nat handbook new york john wiley sons dutta roy overview cable modem technology market perspectives ieee commun magazine vol pp 88 june sec alphabetical bibliography edelman b ostrovsky schwarz internet advertising gen eralized second price auction selling billions dollars worth keywords american economic review vol pp 259 mar el gamal public key cryptosystem signature scheme based discrete logarithms ieee trans information theory vol pp 472 july epcglobal epc radio frequency identity protocols class generation uhf rfid protocol communication mhz mhz version brussels epcglobal inc oct fall k delay tolerant network architecture challenged internets proc sigcomm conf acm pp 34 aug faloutsos faloutsos p faloutsos c power law relationships internet topology proc sigcomm conf acm pp 262 farrell cahill v delay disruption tolerant networking london artech house fellows jones docsis cable modem technology ieee commun magazine vol pp 209 mar fenner b handley holbrook h kouvelas protocol indepen dent multicast sparse mode pim sm rfc aug ferguson n schneier b kohno cryptography engineering design principles practical applications new york john wiley sons flanagan javascript definitive guide 6th ed sebastopol ca reilly fletcher j arithmetic checksum serial transmissions ieee trans commun vol com pp 252 jan floyd handley padhye j widmer j equation based congestion control unicast applications proc sigcomm conf acm pp 56 aug floyd jacobson v random early detection congestion avoidance ieee acm trans networking vol pp 413 aug fluhrer mantin shamir weakness key scheduling algo rithm rc4 proc eighth ann workshop selected areas cryptography berlin springer verlag lncs pp 24 ford b structured streams new transport abstraction proc sigcomm conf acm pp 372 ford l r jr fulkerson r flows networks princeton nj princeton university press ford w baum secure electronic commerce upper saddle river nj pren tice hall forney g viterbi algorithm proc ieee vol pp 278 mar 890 reading list bibliography fouli k maler road carrier grade ethernet ieee commun magazine vol pp s30 s38 mar fox gribble brewer e amir e adapting network client variability via demand dynamic distillation sigops oper syst rev vol pp 170 dec francis p near term architecture deploying pip ieee network magazine vol pp 37 may june fraser g towards universal data transport system ieee j selected areas commun vol pp 816 nov fridrich j steganography digital media principles algorithms applications cambridge cambridge university press fuller v li classless inter domain routing cidr internet address assignment aggregation plan rfc aug gallagher r g minimum delay routing algorithm using distributed computa tion ieee trans commun vol com pp 85 jan gallagher r g low density parity check codes ire trans information theory vol pp 28 jan garfinkel spafford g web security privacy commerce sebastopol ca reilly gast 11 wireless networks definitive guide 2nd ed sebastopol ca reilly gershenfeld n krikorian r cohen internet things scientific american vol pp 81 oct gilder g metcalfe law legacy forbes asap sepy goode b voice internet protocol proc ieee vol pp 1517 sept goralski w j sonet 2nd ed new york mcgraw hill grayson shatzkamer k wainner ip design mobile networks indianapolis cisco press grobe k elbers j pon adolescence tdma wdm pon ieee commun magazine vol pp 34 jan gross g kaycee lin malis stephens j ppp aal5 rfc july ha rhee lisong x cubic new tcp friendly high speed tcp vari ant sigops oper syst rev vol pp 74 june hafner k lyon wizards stay late new york simon schuster halperin heydt benjamin ransford b clark defend b morgan w fu k kohno maisel w pacemakers implantable cardi sec alphabetical bibliography ac defibrillators software radio attacks zero power defenses ieee symp security privacy pp 142 may halperin hu w sheth wetherall 11 multiple anten nas dummies computer commun rev vol pp 25 jan hamming r w error detecting error correcting codes bell system tech j vol pp 160 apr harte l kellogg dreher r schaffnit comprehensive guide wireless technology fuquay varina nc apdg publishing hawley g historical perspectives u telephone loop ieee commun magazine vol pp 28 mar hecht j understanding fiber optics upper saddle river nj prentice hall held g practical guide content delivery networks 2nd ed boca raton fl crc press heusse rousseau f berger sabbatel g duda performance ano maly 11b proc infocom conf ieee pp 843 hiertz g denteneer stibor l zang costa x walke b ieee 11 universe ieee commun magazine vol pp 70 jan hoe j improving start behavior congestion control scheme tcp proc sigcomm conf acm pp 280 hu li v k satellite based internet tutorial ieee commun magazine vol pp 162 mar huitema c routing internet 2nd ed englewood cliffs nj prentice hall hull b bychkovsky v chen k goraczko miu shih e zhang balakrishnan h madden cartel distributed mobile sensor computing system proc sensys conf acm pp 138 nov hunter rafter j fawcett j van der list e ayers duckett j watt mckinnon l beginning xml 4th ed new jersey wrox irmer shaping future telecommunications challenge global stan dardization ieee commun magazine vol pp 28 jan itu international telecommunication union itu internet reports internet things geneva itu nov itu international telecommunication union measuring information society ict development index geneva itu mar jacobson v compressing tcp ip headers low speed serial links rfc feb jacobson v congestion avoidance control proc sigcomm conf acm pp 329 892 reading list bibliography jain r routhier packet trains measurements new model com puter network traffic ieee j selected areas commun vol pp 995 sept jakobsson wetzel security weaknesses bluetooth topics cryp tology ct rsa berlin springer verlag lncs pp 191 joel telecommunications ieee communications society ieee commun magazine 50th anniversary issue pp 14 167 may johnson perkins c arkko j mobility support ipv6 rfc june johnson b maltz broch j dsr dynamic source routing proto col multi hop wireless ad hoc networks ad hoc networking boston addison wesley pp 172 juang p oki h wang martonosi peh l rubenstein en ergy efficient computing wildlife tracking design tradeoffs early experiences zebranet sigops oper syst rev vol pp 107 oct kahn codebreakers 2nd ed new york macmillan kamoun f kleinrock l stochastic performance evaluation hierarchical routing large networks computer networks vol pp 353 nov karn p maca new channel access protocol packet radio arrl crrl amateur radio ninth computer networking conf pp 140 karn p partridge c improving round trip estimates reliable transport protocols proc sigcomm conf acm pp karp b kung h gpsr greedy perimeter stateless routing wireless networks proc mobicom conf acm pp 254 kasim delivering carrier ethernet new york mcgraw hill katabi handley rohrs c internet congestion control future high bandwidth delay product environments proc sigcomm conf acm pp 102 katz ford p tuba replacing ip clnp ieee network magazine vol pp 47 may june kaufman c perlman r speciner network security 2nd ed engle wood cliffs nj prentice hall kent c mogul j fragmentation considered harmful proc sigcomm conf acm pp 401 kerckhoff la cryptographie militaire j des sciences militaires vol pp 38 jan pp 191 feb khanna zinky j revised arpanet routing metric proc sigcomm conf acm pp 56 kipnis j beating system abuses standards adoption process ieee com mun magazine vol pp 105 july sec alphabetical bibliography kleinrock l power deterministic rules thumb probabilistic prob lems computer communications proc intl conf commun pp 43 10 june kleinrock l tobagi f random access techniques data transmission packet switched radio channels proc nat computer conf pp 201 kohler e handley h floyd designing dccp congestion control without reliability proc sigcomm conf acm pp 38 koodli r perkins c e mobile inter networking ipv6 new york john wiley sons koopman p bit cyclic redundancy codes internet applications proc intl conf dependable systems networks ieee pp 472 krishnamurthy b rexford j web protocols practice boston addison wesley kumar paar c pelzl j pfeiffer g schimmler breaking ciphers copacobana cost optimized parallel code breaker proc 8th cryptographic hardware embedded systems wksp iacr pp 118 oct labovitz c ahuja bose jahanian f delayed internet routing convergence ieee acm trans networking vol pp 306 june lam c k tan b c internet changing music industry commun acm vol pp 66 aug laoutaris n smaragdakis g rodriguez p sundaram r delay tolerant bulk data transfers internet proc sigmetrics conf acm pp 238 june larmo lindstrom meyer pelletier g torsner j wiemann h lte link layer design ieee commun magazine vol pp 59 apr lee j miller l e cdma systems engineering handbook london artech house leland w taqqu willinger w wilson self similar nature ethernet traffic ieee acm trans networking vol pp 15 feb lemon j resisting syn flood dos attacks syn cache proc bsdcon conf usenix pp 98 levy crypto rebels wired pp 61 may june lewis comparing designing deploying vpns indianapolis cisco press li agrawal ganesan venkataramani block switched networks new paradigm wireless transport proc nsdi conf usenix pp 436 894 reading list bibliography lin costello error control coding 2nd ed upper saddle river nj pearson education lubacz j mazurczyk w szczypiorski k vice ip ieee spec trum pp 47 feb macedonia r distributed file sharing ieee computer vol pp 101 madhavan j ko lot l gangpathy v rasmussen halevy google deep web crawl proc vldb conf vldb endowment pp 1252 mahajan r rodrig wetherall zahorjan j analyzing mac level behavior wireless networks wild proc sigcomm conf acm pp 86 malis simpson w ppp sonet sdh rfc june massey j l shift register synthesis bch decoding ieee trans infor mation theory vol pp 127 jan matsui linear cryptanalysis method des cipher advances cryptology eurocrypt proceedings berlin springer verlag lncs pp 397 maufer ip fundamentals upper saddle river nj prentice hall maymounkov p mazieres kademlia peer peer information system based xor metric proc first intl wksp peer peer systems berlin springer verlag lncs pp 65 mazieres kaashoek f design implementation operation email pseudonym server proc fifth conf computer commun security acm pp 36 mcafee labs mcafee threat reports first quarter mcafee inc menezes j vanstone elliptic curve cryptosystems imple mentation journal cryptology vol pp 224 merkle r c hellman hiding signatures trapdoor knapsacks ieee trans information theory vol pp 530 sept metcalfe r computer network interface design lessons arpanet ethernet ieee j selected areas commun vol pp 179 feb metcalfe r boggs r ethernet distributed packet switching local computer networks commun acm vol pp 404 july metz c interconnecting isp networks ieee internet computing vol pp 80 mar apr mishra p p kanakia h tripathi hop hop rate based conges tion control ieee acm trans networking vol pp 239 apr mogul j c ip network performance internet system handbook c lynch rose eds boston addison wesley pp 575 sec alphabetical bibliography mogul j deering path mtu discovery rfc nov mogul j minshall g rethinking nagle algorithm comput commun rev vol pp 20 jan moy j multicast routing extensions ospf commun acm vol pp 66 aug mullins j making unbreakable code ieee spectrum pp 45 may nagle j packet switches infinite storage ieee trans commun vol com pp 438 apr nagle j congestion control tcp ip internetworks computer commun rev vol pp 17 oct naughton j brief history future woodstock ny overlook press needham r schroeder using encryption authentication large networks computers commun acm vol pp 999 dec needham r schroeder authentication revisited operating sys tems rev vol p jan nelakuditi zhang z l localized adaptive proportioning approach qos routing ieee commun magazine vol pp 71 june neuman c ts kerberos authentication service computer net works ieee commun mag vol pp 38 sept nichols r k lekkas p c wireless security new york mcgraw hill nist secure hash algorithm u government federal information processing stan dard nonnenmacher j biersack e towsley parity based loss recovery reliable multicast transmission proc sigcomm conf acm pp 300 nucci papagiannaki design measurement management large scale ip networks cambridge cambridge university press nugent r munakana r chin coelho r puig suari j cubesat picosatellite standard research education proc space conf aiaa oran osi intra domain routing protocol rfc feb otway rees efficient timely mutual authentication operating systems rev pp 10 jan padhye j firoiu v towsley kurose j modeling tcp throughput simple model empirical validation proc sigcomm conf acm pp 314 palais j c fiber optic commun 5th ed englewood cliffs nj prentice hall 896 reading list bibliography parameswaran susarla whinston b p2p networking information sharing alternative ieee computer vol pp 38 july parekh gallagher r generalized processor sharing approach flow control integrated services networks multiple node case ieee acm trans networking vol pp 150 apr parekh gallagher r generalized processor sharing approach flow control integrated services networks single node case ieee acm trans networking vol pp 357 june partridge c hughes j stone j performance checksums crcs real data proc sigcomm conf acm pp 76 partridge c mendez milliken w host anycasting service rfc nov paxson v floyd wide area traffic failure poisson modeling ieee acm trans networking vol pp 244 june perkins c ip mobility support ipv4 rfc aug perkins c e rtp audio video internet boston addison wesley perkins c e ed ad hoc networking boston addison wesley perkins c e mobile ip design principles practices upper saddle river nj prentice hall perkins c e royer e ad hoc demand distance vector protocol ad hoc networking edited c perkins boston addison wesley perlman r interconnections 2nd ed boston addison wesley perlman r network layer protocols byzantine robustness ph thesis perlman r algorithm distributed computation spanning tree extended lan proc sigcomm conf acm pp 53 perlman r kaufman c key exchange ipsec ieee internet computing vol pp 56 nov dec peterson w w brown cyclic codes error detection proc ire vol pp 235 jan piatek kohno krishnamurthy challenges directions monitoring p2p file sharing networks printer received dmca takedown notice 3rd workshop hot topics security usenix july piatek isdal anderson krishnamurthy venkataramani v incentives build robustness bittorrent proc nsdi conf usenix pp 14 piscitello chapin l open systems networking tcp ip osi bos ton addison wesley sec alphabetical bibliography piva bartolini f barni managing copyrights open networks ieee internet computing vol pp 26 may postel j internet control message protocols rfc sept rabin j mccathienevile c mobile web best practices w3c recom mendation july ramakrishnam k k floyd black addition explicit conges tion notification ecn ip rfc sept ramakrishnan k k jain r binary feedback scheme congestion avoidance computer networks connectionless network layer proc sigcomm conf acm pp 313 ramaswami r kumar sasaki g optical networks practical perspec tive 3rd ed san francisco morgan kaufmann ratnasamy francis p handley karp r shenker scal able content addressable network proc sigcomm conf acm pp 172 rieback crispo b tanenbaum cat infected com puter virus proc ieee percom pp 179 mar rivest r l md5 message digest algorithm rfc apr rivest r l shamir adleman l method obtaining digital sig natures public key cryptosystems commun acm vol pp 126 feb roberts l g extensions packet communication technology hand held per sonal terminal proc spring joint computer conf afips pp 298 roberts l g multiple computer networks intercomputer communication proc first symp operating systems prin acm pp 6 rose simple book englewood cliffs nj prentice hall rose internet message englewood cliffs nj prentice hall rowstron druschel p pastry scalable distributed object location routing large scale peer peer storage utility proc 18th int l conf distributed systems platforms london springer verlag lncs pp 350 ruiz sanchez biersack e w dabbous w survey taxonomy ip address lookup algorithms ieee network magazine vol pp 23 mar apr saltzer j h reed p clark end end arguments system de sign acm trans computer systems vol pp 288 nov sample yeager powledge p mamishev smith j design rfid based battery free programmable sensing platform ieee trans instrumentation measurement vol pp 2615 nov saroiu gummadi k gribble measuring analyzing charac teristics napster gnutella hosts multim syst vol pp 184 aug 898 reading list bibliography schaller r moore law past present future ieee spectrum vol pp 59 june schneier b secrets lies new york john wiley sons schneier b e mail security new york john wiley sons schnorr c p efficient signature generation smart cards journal cryptol ogy vol pp 174 scholtz r origins spread spectrum communications ieee trans commun vol com pp 854 may schwartz abramson n alohanet surfing wireless data ieee commun magazine vol pp 25 dec seifert r edwards j new switch book ny john wiley senn j emergence commerce ieee computer vol pp 150 dec serjantov anonymizing censorship resistant systems proc first int l workshop peer peer systems london springer verlag lncs pp 120 shacham n mckenny p packet recovery high speed networks using coding buffer management proc infocom conf ieee pp 131 june shaikh rexford j shin k load sensitive routing long lived ip flows proc sigcomm conf acm pp 226 sept shalunov carlson r detecting duplex mismatch ethernet passive active network measurement berlin springer verlag lncs pp 3148 shannon c mathematical theory communication bell system tech j vol pp 423 july pp 656 oct shepard sonet sdh demystified new york mcgraw hill shreedhar varghese g efficient fair queueing using deficit round robin proc sigcomm conf acm pp 243 simpson w video ip 2nd ed burlington focal press simpson w ppp hdlc like framing rfc july 1994b simpson w point point protocol ppp rfc july 1994a siu k jain r brief overview atm protocol layers lan emulation traffic acm computer communications review vol pp 20 apr skoudis e liston counter hack reloaded 2nd ed upper saddle river nj prentice hall smith k alexander r c fumbling future new york william mor row sec alphabetical bibliography snoeren c balakrishnan h end end approach host mobil ity int l conf mobile computing networking acm pp 166 sobel l carnivore devour online privacy ieee computer vol pp 88 may sotirov stevens appelbaum j lenstra molnar osvik de weger b md5 considered harmful today proc 25th chaos commu nication congress verlag art ameublement southey r doctors london longman brown green longmans spurgeon c e ethernet definitive guide sebastopol ca reilly stallings w data computer communications 9th ed upper saddle river nj pearson education starr sorbara coiffi j silverman p dsl advances upper saddle river nj prentice hall stevens w r tcp ip illustrated protocols boston addison wesley stinson r cryptography theory practice 2nd ed boca raton fl crc press stoica morris r karger kaashoek f balakrishnan h chord scalable peer peer lookup service internet applications proc sigcomm conf acm pp 160 stubblefield ioannidis j rubin using fluhrer mantin shamir attack break wep proc network distributed systems security symp isoc pp 11 stuttard pinto web application hacker handbook new york john wiley sons su umts air interface rf engineering new york mcgraw hill sullivan g wiegand tree algorithms packet broadcast channels proc ieee vol pp 31 jan sunshine c dalal k connection management transport protocols computer networks vol pp 473 tan k song j zhang q sridharn compound tcp approach high speed long distance networks proc infocom conf ieee pp 12 tanenbaum modern operating systems 3rd ed upper saddle river nj pren tice hall tanenbaum van steen distributed systems principles para digms upper saddle river nj prentice hall r selecting sequence numbers proc sigcomm sigops interprocess commun workshop acm pp 23 tomlinson 900 reading list bibliography tuchman w hellman presents shortcut solutions des ieee spectrum vol pp 41 july turner j new directions communications way information age ieee commun magazine vol pp 15 oct ungerboeck g trellis coded modulation redundant signal sets part intro duction ieee commun magazine vol pp 11 feb valade j php mysql dummies 5th ed new york john wiley sons varghese g network algorithmics san francisco morgan kaufmann varghese g lauck hashed hierarchical timing wheels data struc tures efficient implementation timer facility proc 11th symp operating systems prin acm pp 38 verizon business data breach investigations report verizon viterbi cdma principles spread spectrum communication englewood cliffs nj prentice hall von ahn l blum b langford j telling humans computers apart automatically commun acm vol pp 60 feb waitzman partridge c deering distance vector multicast routing protocol rfc nov waldman rubin cranor l f publius robust tamper evident censorship resistant web publishing system proc ninth usenix security symp usenix pp 72 wang z crowcroft j seal detects cell misordering ieee network magazine vol pp july want r rfid explained san rafael ca morgan claypool warneke b last liebowitz b pister k j smart dust communi cating cubic millimeter computer ieee computer vol pp 51 jan wayner p disappearing cryptography information hiding steganography wa termarking 3rd ed san francisco morgan kaufmann wei cheng j low hegde fast tcp motivation architecture al gorithms performance ieee acm trans networking vol pp 1259 dec weiser computer twenty first century scientific american vol pp 104 sept welbourne e battle l cole g gould k rector k raymer balazinska borriello g building internet things using rfid ieee internet computing vol pp 55 may wittenburg n understanding voice ip technology clifton park ny delmar cengage learning sec alphabetical bibliography wolman voelker g sharma n cardwell n karlin levy h scale performance cooperative web proxy caching proc 17th symp operating systems prin acm pp 31 wood l ivancic w eddy w stewart northam j jackson c da silva curiel use delay tolerant networking bundle protocol space proc 59th int l astronautical congress int l astronautical federation pp 3133 wu network neutrality broadband discrimination journal telecom high tech law vol pp 179 wylie j bigrigg w strunk j ganger g r kiliccote h khosla p k survivable information storage systems ieee computer vol pp 68 aug yu hartman raeburn k perils unauthenticated encryption kerberos version proc ndss symposium internet society feb yuval g swindle rabin cryptologia vol pp 190 july zacks antiterrorist legislation expands electronic snooping ieee internet computing vol pp nov dec zhang breslau l paxson v shenker characteristics origins internet flow rates proc sigcomm conf acm pp 322 zhao b ling h stribling j rhea joseph kubiatowicz j tapestry resilient global scale overlay service deployment ieee j selected areas commun vol pp 53 jan zimmermann p r official pgp user guide cambridge press 1995a zimmermann p r pgp source code internals cambridge press 1995b zipf g k human behavior principle least effort introduction human ecology boston addison wesley ziv j lempel z universal algorithm sequential data compression ieee trans information theory vol pp 343 may page intentionally left blank index page intentionally left blank index numbers acknowledgement cumulative duplicate selective acknowledgement clock tcp acknowledgement frame acl see asynchronous connectionless link active server page activex 859 activex control ad hoc network 392 routing 392 ad hoc demand distance vector adaptation rate adaptive frequency hopping bluetooth adaptive routing algorithm adaptive tree walk protocol 277 adc see analog digital converter additive increase multiplicative decrease law address resolution protocol 469 gratuitous address resolution protocol proxy addressing classful ip 451 transport layer 512 persistent csma 3gpp see third generation partnership project 4b 5b encoding 8b 10b encoding 10 gigabit ethernet 297 64b 66b encoding 100base fx ethernet 100base t4 ethernet 292 11 see ieee 11 1000base ethernet 296 law aal5 see atm adaptation layer abstract syntax notation access point transport layer acknowledged datagram 906 index adjacent router admission control 398 418 adsl see asymmetric digital subscriber line advanced audio coding advanced encryption standard 787 advanced mobile phone system 170 advanced research projects agency advanced video coding aes see advanced encryption standard aggregation route ah see authentication header aifs see arbitration interframe space aimd see additive increase multiplicative decrease law air interface ajax see asynchronous javascript xml akamai 746 algorithm adaptive routing backward learning bellman ford binary exponential backoff 286 congestion control 404 dijkstra encoding forwarding international data encryption karn leaky bucket 411 longest matching prefix lottery nagle network layer routing 392 nonadaptive 364 reverse path forwarding rivest shamir adleman 796 routing 392 token bucket 411 alias allocation channel 261 aloha pure 264 slotted 266 alternate mark inversion ami see alternate mark inversion amplitude shift keying amps see advanced mobile phone system analog digital converter andreessen marc 647 anomaly rate anonymous remailer 863 ansnet antenna sectored antheil george anycast routing 386 aodv see ad hoc demand distance vector routing ap see access point apocalypse two elephants 52 applet application business web application layer 48 content delivery network 757 distributed hash table 757 domain name system 623 email 646 multimedia 734 world wide web 697 application level gateway apsd see automatic power save delivery arbitration interframe space architectural overview web 649 architecture services email 626 area autonomous system backbone stub area border router arp see address resolution protocol arpa see advanced research projects agency arpanet 59 arq see automatic repeat request see autonomous system ask see amplitude shift keying asn see abstract syntax notation asp see active server pages aspect ratio video association ieee 11 assured forwarding 424 asymmetric digital subscriber line 250 vs cable asynchronous connectionless link asynchronous asynchronous javascript xml 683 asynchronous transfer mode atm see asynchronous transfer mode atm adaptation layer index attack birthday 806 bucket brigade chosen plaintext ciphertext denial service keystream reuse known plaintext man middle reflection replay attenuation attribute cryptographic certificate html auction spectrum audio digital 704 streaming 704 audio compression 704 authentication ieee 11 needham schroeder 838 using key distribution center 838 authentication header 816 authentication protocol 841 authentication using shared secret 833 authentication using kerberos 840 authentication using public keys 841 authenticode authoritative record autocorrelation autonegotiation automatic power save delivery automatic repeat request autonomous system 476 autoresponder avc see advanced video coding b b frame backbone internet backbone area backbone router backpressure hop hop 401 backscatter rfid backward learning algorithm backward learning bridge 336 balanced signal 130 bandwidth bandwidth allocation 535 bandwidth efficiency 127 bandwidth delay product baran paul barker sequence base station base station controller base ethernet 296 base64 encoding baseband signal baseband transmission 130 basic bit map method baud rate bb84 protocol beacon frame beauty contest allocating spectrum bell alexander graham bell operating company bellman ford routing algorithm bent pipe transponder berkeley socket 507 best effort service 319 bgp see border gateway protocol big endian computer binary countdown protocol 273 binary exponential backoff algorithm 286 binary phase shift keying bipolar encoding birthday attack 806 bit rate bit stuffing bit map protocol 271 bittorrent 753 choked peer chunk free rider leecher seeder swarm tit tat strategy torrent tracker unchoked peer blaatand harald block cipher block code 908 bluetooth 327 adaptive frequency hopping applications 322 architecture 321 frame structure 327 link link layer 325 pairing piconet profile protocol stack 323 radio layer scatternet secure pairing security 827 bluetooth sig boc see bell operating company body html tag border gateway protocol 484 botnet boundary router bpsk see binary phase shift keying bridge 342 backward learning 336 compared devices 342 learning 337 spanning tree 340 use 333 broadband 151 broadband wireless 320 broadcast control channel broadcast network broadcast routing 382 broadcast storm broadcasting browser extension 860 helper application plug 654 bsc see base station controller bucket leaky bucket brigade attack buffering bundle delay tolerant network bundle protocol 605 bursty traffic bush vannevar business application byte stream reliable byte stuffing index c ca see certification authority cable headend cable internet 182 cable modem 185 195 cable modem termination system cable television 186 cache arp 469 dns 622 850 poisoned web 692 caesar cipher call management capacitive coupling capacity channel captcha care address carnivore carrier extension ethernet carrier sense multiple access 269 persistent collision detection 269 nonpersistent p persistent carrier sensing carrier grade ethernet cascading style sheet 672 category wiring category wiring category wiring category wiring ccitt see international telecommunication union cck see complementary code keying cd see committee draft cdm see code division multiplexing cdma see code division multiple access cdma2000 cdn see content delivery network cell mobile phone cell phone first generation 170 second generation 174 third generation 69 179 cellular base station cellular network certificate cryptographic 809 x 810 index certificate revocation list certification authority certification path cgi see common gateway interface chain trust challenge response protocol channel access grant broadcast control common control dedicated control erasure multiaccess paging random access channel allocation 261 dynamic 261 channel capacity channel associated signaling checksum crc fletcher chip sequence cdma choke packet 400 choked peer bittorrent chord 757 finger table key chosen plaintext attack chromatic dispersion chrominance video chunk bittorrent cidr see classless interdomain routing cintent delivery network 748 cipher aes 787 caesar monoalphabetic substitution rijndael 787 substitution 770 symmetric key 787 transposition 772 cipher block chaining mode 789 cipher feedback mode 790 cipher modes 792 ciphertext ciphertext attack circuit virtual circuit switching 162 clark david class network class b network class c network class based routing classful addressing ip 451 classic ethernet 288 classless interdomain routing 449 clear send click fraud client client side web 652 client side dynamic web page generation 678 client side web 652 client stub client server model clipper chip clock recovery 129 cloud computing cmts see cable modem termination system coaxial cable 98 code cryptographic code division multiple access code division multiplexing 138 code rate code signing codec codeword collision collision detection csma 269 collision domain collision free protocol 273 combing visual artifact committee draft common control channel common gateway interface common channel signaling communication medium communication satellite 125 communication security 827 communication subnet community antenna television 180 companding comparison osi tcp ip models 51 complementary code keying compression audio 704 header 595 video 712 910 computer wearable computer network see network conditional get http confidentiality congestion network 404 congestion avoidance congestion collapse tcp congestion control convergence 535 network layer 404 provisioning tcp 581 congestion window tcp connection http 686 connection establishment 517 tcp 562 connection management tcp 565 connection release 522 tcp connection reuse http connection oriented service 38 361 implementation 361 connectionless service 38 359 implementation 359 connectivity constellation constellation diagram constraint length contact delay tolerant network content internet traffic content delivery network 748 content distribution 757 content transformation contention system continuous media control channel broadcast control law convergence congestion control 535 convolutional code cookie syn web 662 copyright 869 cordless telephone core network core based tree count infinity problem 373 counter mode 792 index crash recovery 530 crc see cyclic redundancy check critique osi tcp ip 53 crl see certificate revocation list cross correlation cryptanalysis 793 differential 793 linear cryptographic certificate 809 cryptographic key cryptographic principles 778 cryptographic round cryptography 797 aes certificate 809 ciphertext des 784 kerckhoff principle key one time pad 773 p box plaintext public key 797 quantum 776 rijndael box security obscurity symmetric key 793 triple des 783 vs code work factor cryptology csma see carrier sense multiple access csma collision avoidance csma collision detection csma ca see csma collision avoidance csma cd see csma collision detection csnet css see cascading style sheet cts see clear send cubesat cumulative acknowledgement tcp custody transfer delay tolerant network cut switching cybersquatting cyclic redundancy check cypherpunk remailer index amps see digital advanced mobile phone system dac see digital analog converter daemen joan daemon dag see directed acyclic graph data center data delivery service ieee 11 data encryption standard 784 data frame data link layer 251 bit stuffing byte stuffing design issues 215 elementary protocols 244 example protocols 250 sliding window protocols 244 stop wait protocol 223 data link layer switching 349 data link protocol 250 adsl 250 elementary 244 examples 250 packet sonet 248 sliding window 244 stop wait 223 data cable service interface specification datagram datagram congestion control protocol datagram network datagram service comparison vcs 362 davies donald db see decibel dccp see datagram congestion controlled protocol dcf see distributed coordination function dcf interframe spacing dct see discrete cosine transformation ddos attack see distributed denial service attack de facto standard de jure standard decibel decoding audio dedicated control channel deep web default gateway default free zone deficit round robin delay queueing delay tolerant network 605 architecture 603 custody transfer protocol 605 delayed acknowledgement tcp demilitarized zone denial service attack distributed 822 dense wavelength division multiplexing des see data encryption standard design issues data link layer 202 fast networks 590 network 35 network layer 362 transport layer 530 designated router desktop sharing destination port 454 device driver dhcp see dynamic host configuration protocol dht see distributed hash table diagonal basis quantum cryptography dial modem dialog control differential cryptanalysis 793 differentiated service 424 diffie hellman protocol 835 difs see dcf interframe spacing digital advanced mobile phone system digital audio 704 digital millennium copyright act digital modulation digital signature 806 digital signature standard digital subscriber line 151 digital subscriber line access multiplexer digital video 712 digital analog converter digitizing voice signals 154 digram dijkstra edsger dijkstra algorithm direct acyclic graph direct sequence spread spectrum directed acyclic graph directive html directory pki 912 index dis see draft international standard disassociation ieee 11 discovery path mtu discrete cosine transformation mpeg discrete multitone dispersion chromatic disposition message disruption tolerant network distance vector multicast routing protocol distance vector routing 378 distortion distributed coordination function distributed denial service attack 822 distributed hash table 757 distributed system distribution service ieee 11 distribution system dix ethernet standard dmca see digital millennium copyright act dmca takedown notice dmt see discrete multitone dmz see demilitarized zone dns see domain name system dns name space 616 dns spoofing 850 dnssec see domain name system security docsis see data cable service interface specification document object model dom see document object model domain collision frequency domain name system 623 authoritative record 622 cybersquatting domain resource record 619 name server 623 name space registrar resource record 619 reverse lookup spoofing top level domain zone 852 dos attack see denial service attack dot com era dotted decimal notation downstream proxy draft international standard draft standard dsl see digital subscriber line dslam see digital subscriber line access multiplexer dtn see delay tolerant network duplicate acknowledgement tcp dvmrp see distance vector multicast routing protocol dwdm see dense wavelength division multiplexing dwell time dynamic channel allocation 261 dynamic frequency selection dynamic host configuration protocol dynamic html dynamic page web dynamic routing dynamic web page 673 dynamic web page generation client side 678 server side 676 e e commerce e mail see email e1 line eap see extensible authentication protocol early exit ecb see electronic code book mode ecmp see equal cost multipath ecn see explicit congestion notification ede see encrypt decrypt encrypt mode edge see enhanced data rates gsm evolution eee see encrypt encrypt encrypt mode eifs see extended interframe spacing eisenhower dwight electromagnetic spectrum 109 114 electronic code book mode 788 electronic commerce electronic mail see email electronic product code elephant flow email 646 architecture services 626 authoritative record base64 encoding body cached record index email continued envelope final delivery imap 645 mail server mail submission mailbox message format message transfer 643 mime name resolution open mail relay pop3 quoted printable encoding signature block simple mail transfer protocol transfer agent 625 user agent vacation agent webmail 646 x400 email header email reader email security 846 emoticon encapsulating security payload encapsulation packet encoding 4b 5b audio 704 video 712 ethernet 4b 5b ethernet 8b 10b ethernet 64b 66b encrypt decrypt encrypt mode encrypt encrypt encrypt mode encryption link end office end end argument endpoint multiplexing enhanced data rates gsm evolution enterprise network entity transport envelope epc see electronic product code epon see ethernet pon equal cost multipath erasure erasure channel error control 201 transport layer 527 error correction error detection error syndrome error correcting code 209 error detecting code 215 esmtp see extended smtp esp see encapsulating security payload eternity service ethernet 299 gigabit 297 100base fx 100base t4 1000base 296 base 296 carrier grade classic 288 dix fast 293 gigabit 296 mac sublayer 299 promiscuous mode retrospective 299 switched 290 ethernet carrier extension ethernet encoding 4b 5b 64b 66b 8b 10b ethernet frame bursting ethernet header ethernet hub ethernet jumbo frame ethernet performance 288 ethernet pon 152 ethernet port ethernet switch eurodocsis ewma see exponentially weighted moving average expedited forwarding 423 explicit congestion notification exponential decay exponentially weighted moving average exposed terminal problem 280 extended hypertext markup language extended interframe spacing extended smtp extended superframe extensible authentication protocol 914 index extensible markup language extensible stylesheet language transformation extension header ipv6 463 exterior gateway protocol f facebook fair queueing fair use doctrine fast ethernet 293 fast network design 590 fast recovery tcp fast retransmission tcp fast segment processing 593 fcfs see first come first served packet scheduling fdd see frequency division duplex fddi see fiber distributed data interface fdm see frequency division multiplexing fec see forwarding equivalence class fec see forward error correction fec see forwarding equivalence class fiber distributed data interface fiber node fiber optics 105 compared copper wire 105 fiber home fibre channel field video fifo see first first packet scheduling file transfer protocol filtering ingress final delivery email finger table chord firewall 821 stateful first come first served packet scheduling first generation mobile phone network 170 first first packet scheduling fixed wireless flag byte flash crowd fletcher checksum flooding algorithm 370 flow control 202 transport layer 527 flow specification footprint satellite forbidden region 515 foreign agent form web 670 forward error correction forwarding assured 424 expedited 423 forwarding algorithm forwarding equivalence class fourier analysis fourier series fourier transform fragment frame packet fragmentation packet 436 frame acknowledgement beacon data frame bursting ethernet frame fragment frame header frame structure bluetooth 327 ieee 11 310 ieee 16 320 framing 201 free rider bittorrent free space optics freedom speech 865 frequency electromagnetic spectrum frequency division duplex frequency division multiplexing 135 frequency hopping bluetooth frequency hopping spread spectrum frequency masking psychoacoustics frequency reuse frequency selection dynamic frequency shift keying freshness messages front end web server fsk see frequency shift keying ftp see file transfer program ftth see fiber home full duplex link future tcp 582 fuzzball index g g standard g dmt g lite gatekeeper multimedia gateway application level default media multimedia gateway gprs support node gateway mobile switching center gen rfid 331 general packet radio service generator polynomial geo see geostationary earth orbit geostationary earth orbit geostationary satellite ggsn see gateway gprs support node gigabit ethernet 296 gigabit capable pon global positioning system global system mobile communication 174 globalstar gmail gmsc see gateway mobile switching center go back n protocol 239 goodput gpon see gigabit capable pon gprs see general packet radio service gps see global positioning system gratuitous arp gray elisha gray code group group telephone hierarchy gsm see global system mobile communication guard band guard time guided transmission media 105 105 h h standard h standard h standard h compared sip 734 standard 731 half duplex link hamming code 207 hamming distance handoff 69 hard soft handover see handoff hard decision decoding harmonic hashed message authentication code hdlc see high level data link control hdtv see high definition television headend cable header email ethernet ipv4 442 ipv6 463 ipv6 extension 463 packet tcp segment 560 header compression 595 robust header prediction helper application browser hertz hertz heinrich hf rfid hfc see hybrid fiber coax hidden terminal problem hierarchical routing 380 high definition television high level data link control high water mark history internet 61 hlr see home location register hmac see hashed message authentication code home agent home location home location register home network 10 home subscriber server hop hop backpressure 401 host mobile host design fast networks 590 hosting 916 index hot potato routing hotspot hss see home subscriber server html see hypertext markup language http see hypertext transfer protocol https see secure hypertext transfer protocol hub 342 compared bridge switch 342 ethernet satellite hybrid fiber coax hyperlink hypertext hypertext markup language 670 attribute directive tag 666 hypertext transfer protocol 693 conditional get connection 686 connection reuse method 688 parallel connection persistent connection scheme secure hz see hertz iab see internet activities board icann see internet corporation assigned names number icmp see internet control message protocol idea see international data encryption algorithm ieee 11 312 architecture 301 association authentication comparison ieee 16 314 data delivery service disassociation distribution service frame structure 310 integration service mac sublayer 312 mac sublayer protocol 309 ieee 11 continued physical layer 303 privacy service procotol stack 301 reassociation security 826 services 312 transmit power control ieee 11a ieee 11b 302 ieee 11g ieee 11i ieee 11n 303 ieee 16 320 architecture 315 comparison ieee 11 314 frame structure 320 mac sublayer protocol 319 physical layer 317 protocol stack 315 ranging ieee 1q 349 ieee 1x ieee see institute electrical electronics engineers ietf see internet engineering task force igmp see internet group management protocol ike see internet key exchange imap see internet message access protocol imp see interface message processor improved mobile telephone system imt 175 imts see improved mobile telephone system band signaling industrial scientific medical bands inetd infrared data association infrared transmission ingress filtering initial connection protocol initialization vector input form web 670 instant messaging institute electrical electronics engineers integrated services 421 integration service ieee 11 intellectual property interdomain protocol interdomain routing interexchange carrier index interface air interface message processor 57 interior gateway protocol interlacing video interleaving internal router international data encryption algorithm international mobile telecommunication 175 international standard 79 international standard international standards organization international telecommunication union internet architecture 64 backbone cable 182 control protocols 470 daemon history 61 interplanetary key exchange message access protocol 645 multicasting 488 protocol version 455 protocol version 465 radio tcp ip layer 47 internet activities board internet architecture board internet control message protocol internet corporation assigned names numbers internet engineering task force internet exchange point internet group management protocol internet cable 182 internet protocol ip 488 cidr 449 classful addressing 451 control 470 control message control protocols 470 dotted decimal notation group management ip addresses 455 message access 645 mobile 488 subnet 446 internet protocol continued version 442 version version 465 version controversies 465 version extension headers 463 version main header 461 internet protocol version 455 internet protocol version 465 internet research task force internet service provider internet society internet standard internet telephony internetwork 29 436 internetwork routing 432 internetworking 436 network layer 436 internetworking network layer 436 interoffice trunk interplanetary internet intradomain protocol intradomain routing intranet intruder security inverse multiplexing ip see internet protocol ip address 455 cidr 449 classful 451 nat 455 prefix 444 ip security 818 transport mode tunnel mode ip telephony ip television ipsec see ip security iptv see ip television ipv4 see internet protocol version ipv5 see internet protocol version ipv6 see internet protocol version irda see infrared data association iridium irtf see internet research task force see international standard isakmp see internet security association key management protocol 918 index ism see industrial scientific medical bands iso see international standards organization isp see internet service provider isp network iterative query itu see international telecommunication union iv see initialization vector ixc see interexchange carrier ixp see internet exchange point j java applet security 858 java virtual machine java virtual machine javascript javaserver page jitter jitter control 552 joint photographic experts group jpeg see joint photographic experts group jpeg standard 709 jsp see javaserver page jumbo frame ethernet jumbogram jvm see java virtual machine k karn algorithm kdc see key distribution center keepalive timer tcp kepler law kerberos 840 realm kerckhoff principle key chord cryptographic key distribution center authentication using 836 key escrow keystream keystream reuse attack known plaintext attack l l2cap see logical link control adaptation protocol label edge router label switched router label switching 474 lamarr hedy 108 lan see local area network lan virtual lata see local access transport area layer application 48 758 data link 251 ieee 11 physical 303 ieee 16 physical 317 network 489 physical 187 session 45 transport 606 lcp see link control protocol ldpc see low density parity check leaky bucket algorithm 411 learning bridge 337 lec see local exchange carrier leecher bittorrent leo see low earth orbit satellite ler see label edge router level network light transmission 116 limited contention protocol 277 line code linear code linear cryptanalysis link asynchronous connectionless bluetooth full duplex half duplex synchronous connection oriented link control protocol link encryption link layer bluetooth 325 tcp ip link state routing 378 little endian computer llc see logical link control load balancing web server load shedding 403 index load shedding policy milk wine local access transport area local area network virtual 349 local central office local exchange carrier local loop 152 local number portability logical link control logical link control adaptation protocol long fat network 599 long term evolution longest matching prefix algorithm lossless audio compression lossy audio compression lottery algorithm low density parity check low earth orbit satellite 123 low water mark lsr see label switched router lte see long term evolution luminance video commerce mac see medium access control mac sublayer protocol 309 319 ieee 11 309 ieee 16 319 maca see multiple access collision avoidance macroblock mpeg magnetic media 96 maho see mobile assisted handoff mail server mail submission mailbox mailing list maintenance route 392 man see metropolitan area network man middle attack manchester encoding manet see mobile ad hoc network markup language marshaling parameters max min fairness 534 maximum segment size tcp maximum transfer unit maximum transmission unit path maxwell james clerk mci md5 807 measurements network performance 586 media gateway medium access control sublayer 350 327 bluetooth 327 broadband wireless 320 channel allocation 261 ethernet 299 ieee 11 312 multiple access protocols 280 wireless lans 312 medium earth orbit satellite meo see medium earth orbit satellite merkle ralph message digest 801 message disposition message format message header 690 message integrity check message switching message transfer 643 message transfer agent metafile metcalfe robert method http 688 metric units 83 metropolitan area network mfj see modified final judgment mgw see media gateway mic see message integrity check michelson morley experiment microcell microwave transmission 114 middlebox middleware milk load shedding policy mime see multipurpose internet mail extension mime type 655 mimo see multiple input multiple output minislot mirroring web site mobile ad hoc network 392 mobile assisted handoff 920 mobile code security 860 mobile commerce mobile host routing 389 mobile internet protocol 488 mobile ip protocol 488 mobile phone 179 mobile phone system first generation 170 second generation 174 third generation 69 179 mobile switching center mobile telephone 179 mobile telephone switching office mobile telephone system 179 mobile user 13 mobile web 695 mobile wireless mockapetris paul modem cable 195 dial v v v modified final judgment modulation 132 amplitude shift keying 131 bpsk digital discrete multitone frequency shift keying 131 phase shift keying 131 pulse code quadrature phase shift keying trellis coded monoalphabetic substitution cipher mospf see multicast ospf motion picture experts group mouse mouse flow mp3 mp4 mpeg see motion picture experts group mpeg compression 712 frame types mpeg mpeg mpeg mpeg standards 710 index mpls see multiprotocol label switching msc see mobile switching center mss see maximum segment size mtso see mobile telephone switching office mtu see maximum transfer unit mu law mu law multiaccess channel multiaccess network multicast ospf multicast routing 385 multicasting internet 488 multidestination routing multihoming multihop network multimedia 734 internet telephony 734 jitter control 552 live streaming 724 mp3 704 rtsp streaming audio 704 video demand 720 videoconferencing 728 voice ip 734 multimode fiber multipath fading multiple access protocol 280 multiple access collision avoidance multiple input multiple output multiplexing 160 endpoint inverse statistical multiprotocol label switching 474 multiprotocol router multipurpose internet mail extension 637 multithreaded web server multitone discrete mutlimedia streaming video 712 n nagle algorithm name resolution name server 623 naming see addressing 921 index naming secure 853 nap see network access point nat see network address translation nat box national institute standards technology national security agency nav see network allocation vector ncp see network control protocol near field communication needham schroeder authentication 838 negotiation protocol network ad hoc 392 aloha broadcast cellular delay tolerant 605 enterprise first generation mobile phone 170 home 10 local area metropolitan area multiaccess multihop passive optical peer peer performance 599 personal area point point power line public switched telephone scalable second generation mobile phone 174 sensor 75 social stub third generation mobile phone 69 179 uses 16 virtual circuit virtual private wide area network accelerator network access point 61 network address translation 455 network allocation vector network architecture network control protocol network design issues 35 network hardware 29 network interface card network interface device network layer 44 489 congestion control 404 design issues 362 internet 488 internetworking 436 quality service 424 routing algorithms 392 network neutrality network overlay network performance measurement 586 network protocol see protocol network service access point network service provider network software 41 network standardization 82 nfc see near field communication nic see network interface card nid see network interface device nist see national institute standards technology node b node identifier non return zero inverted encoding non return zero modulation nonadaptive algorithm 364 nonce nonpersistent csma nonpersistent web cookie nonrepudiation notification explicit congestion nrz see non return zero modulation nrzi see non return zero inverted encoding nsa see national security agency nsap see network service access point nsfnet 61 nyquist frequency ofdm see orthogonal frequency division multiplexing ofdma see orthogonal frequency division multiple access one time pad 773 onion routing open mail relay 922 index open shortest path first open shortest path first routing 479 open systems interconnection 45 comparison tcp ip 51 open systems interconnection application layer critique 53 data link layer network layer 44 physical layer presentation layer reference model 45 session layer 45 transport layer optimality principle 365 organizationally unique identifier orthogonal frequency division multiple access orthogonal frequency division multiplexing 134 orthogonal sequence osi see open systems interconnection ospf see open shortest path first routing ospf see open shortest path first routing oui see organizationally unique identifier band signaling overlay network overprovisioning p p box cryptographic p frame 712 p persistent csma p2p see peer peer network packet packet encapsulation packet filter packet fragmentation 436 packet header packet sonet 248 packet scheduling 414 packet switching 164 store forward packet train page web paging channel pairing bluetooth pan see personal area network par see positive acknowledgement retransmission protocol parallel connection http parameters marshaling parity bit parity packet passband passband signal passband transmission 132 passive optical network passive rfid passkey path autonomous system certification maximum transmission unit path diversity path loss path maximum transmission unit discovery path mtu discovery path vector protocol paws see protection wrapped sequence numbers pcf see point coordination function pcm see pulse code modulation pcs see personal communications service peer peer peer network 753 bittorrent 753 content distribution 753 peering per hop behavior perceptual coding performance tcp 599 performance issues networks 599 performance measurements network 586 perlman radia persistence timer tcp persistent nonpersistent csma 268 persistent connection http persistent cookie web personal area network personal communications service pgp see pretty good privacy phase shift keying phishing phone see telephone photon 776 php index physical layer 187 cable television 186 code division multiplexing 138 communication satellites 125 fiber optics 104 frequency division multiplexing 135 ieee 11 303 ieee 16 317 mobile telephones 179 modulation 135 open systems interconnection telephone system 164 time division multiplexing twisted pairs 98 wireless transmission 116 physical medium piconet bluetooth piggybacking pim see protocol independent multicast ping pipelining pixel pki see public key infrastructure plain old telephone service plaintext playback point plug browser podcast poem spanning tree point coordination function point presence point point network point point protocol poisoned cache poisson model polynomial generator polynomial code pon see passive optical network pop see point presence pop3 see post office protocol port destination 454 ethernet source tcp transport layer udp portmapper positive acknowledgement retransmision protocol post telegraph telephone administration post office protocol version pots see plain old telephone service power power law power line network 99 power save mode power line network ppp see point point protocol ppp atm pppoa see ppp atm preamble prediction header predictive encoding prefix ip address 444 premaster key presentation layer pretty good privacy 846 primitive service 40 principal security privacy 861 privacy amplification privacy service ieee 11 private key ring private network virtual process server procotol stack ieee 11 301 product cipher product code electronic profile bluetooth progressive video promiscuous mode ethernet proposed standard protection wrapped sequence numbers protocol bit sliding window 232 adaptive tree walk 277 address resolution 469 address resolution gratuitous address resolution protocol proxy authentication protocols 841 bb84 binary countdown 273 bit map 271 bluetooth 323 bluetooth protocol stack 323 border gateway 484 bundle 605 carrier sense multiple access 269 challenge response 924 index protocol continued collision free 273 csma 269 data link 250 datagram congestion control delay tolerant network 605 diffie hellman 835 distance vector multicast routing dotted decimal notation internet dvmr dynamic host configuration extensible authentication exterior gateway file transfer go back n 239 hypertext transfer 693 ieee 11 312 ieee 16 320 initial connection interdomain interior gateway ip 488 intradomain limited contention 277 link control logical link control adaptation long fat network 599 mac 280 mobile ip 488 multiple access 280 multiprotocol label switching 474 multiprotocol router negotiation network network control packet sonet 248 path vector point point pop3 positive acknowledgement retransmission real time streaming real time real time transport 550 relation services request reply reservation resource reservation selective repeat 244 session initiation 735 protocol continued simple internet plus simple mail transfer 641 sliding window 244 232 slip soap stop wait 226 stream stream control transmission subnet internet 446 tcp see transmission control protocol temporary key integrity tkip token passing 272 transport 530 582 tree walk 277 udp 552 utopia 222 wireless application wireless lan 280 protocol utopia 222 protocol stop wait 222 protocol par 226 protocol sliding window 232 protocol go back n 239 protocol selective repeat 244 protocol hierarchy 33 protocol independent multicast protocol layering protocol stack 32 bluetooth 323 h 731 ieee 11 301 ieee 16 315 osi 45 tcp ip 48 proxy arp proxy caching web psk see phase shift keying pstn see public switched telephone network psychoacoustic audio encoding 703 ptt see post telegraph telephone administration public switched telephone network 164 public key authentication using 841 public key cryptography 797 algoirhtms 797 rsa 796 public key infrastructure 813 directory public key ring index public key signature 800 pulse code modulation pure aloha 265 push talk system q q standard qam see quadrature amplitude modulation qos see quality service qos traffic scheduling see transmit power control qpsk see quadrature phase shift keying quadrature amplitude modulation quadrature phase shift keying quality service 424 414 admission control 418 application requirements 406 differentiated services 424 integrated services 421 network layer 424 requirements 406 traffic shaping 411 quality service routing quantization mpeg quantization noise quantum cryptography 776 qubit queueing delay queueing theory quoted printable encoding r ra see regional authority radio access network radio frequency identification 332 active backscatter generation 331 hf lf passive uhf 74 radio network controller radio transmission 110 random access channel random early detection 404 ranging ieee 16 ras see registration admission status rate adaptation rate anomaly rate regulation sending 539 real time audio real time conferencing 734 real time protocol real time streaming protocol real time transport protocols 550 real time video realm kerberos reassociation ieee 11 receiving window recovery clock 129 crash 530 fast rectilinear basis quantum cryptography recursive query red see random early detection redundancy quantum cryptography 778 reed solomon code reference model 54 open systems interconnection 45 tcp ip 51 reflection attack region network regional authority registrar registration admission status relation protocols services relation services protocols reliable byte stream remailer anonymous 863 cypherpunk remote login 406 remote procedure call 546 marshaling parameters stubs rendezvous point repeater 342 replay attack request comments request header request send request reply protocol 926 index request reply service reservation protocol resilient packet ring resolver resource record resource record set resource reservation protocol resource sharing response header retransmission fast retransmission timeout tcp retransmission timer 571 retrospective ethernet 299 reverse lookup reverse path forwarding algorithm revocation certificate 813 rfc see request comments rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfc rfid see radio frequency identification rfid backscatter rfid network 75 rijmen vincent rijndael 787 rijndael cipher ring resilient packet token rivest ron rivest shamir adleman algorithm 796 rnc see radio network controller robbed bit signaling roberts larry robust header compression rohc see robust header compression root name server index routing algorithm 392 ad hoc network 392 adaptive anycast 386 aodv bellman ford broadcast 382 class based classless interdomain 449 distance vector multicast protocol dynamic hierarchical 380 hot potato interdomain internetwork 432 intradomain link state 378 mobile host 389 multicast 385 multidestination network layer 392 onion ospf 479 distance vector multicast quality service session shortest path 368 static traffic aware 396 triangle wormhole routing policy rpc see remote procedure call rpr see resilient packet ring rrset see resource record set rsa see rivest shamir adleman algorithm rsvp see resource reservation protocol rtcp see real time transport control protocol rto see retransmission timeout tcp rtp see real time transport protocol rts see request send rtsp see real time streaming protocol run length encoding box cryptographic mime sa see security association sack see selective acknowledgement sandbox satellite communication 125 geostationary low earth orbit 123 medium earth orbit satellite footprint satellite hub sawtooth tcp scalable network scatternet bluetooth scheduling packet 414 scheme http sco see synchronous connection oriented link scrambler sctp see stream control transmission protocol sdh see synchronous digital hierarchy second generation mobile phone network 174 sectored antenna secure dns 853 secure http secure naming 853 secure pairing bluetooth secure simple pairing bluetooth secure sockets layer 857 secure mime security bluetooth 827 communication 827 email 846 ieee 11 826 ip 818 java applet 858 mobile code 860 social issues 869 transport layer web 860 wireless 827 security association security obscurity security principal security threats 848 seeder bittorrent segment segment header tcp 560 selective acknowledgement tcp selective repeat protocol 244 self similarity 928 sending rate regulation 539 sending window sensor network 75 serial line internet protocol server server farm 741 server side web 658 server side web page generation 676 server stub service connection oriented 38 361 connectionless 38 359 service level agreement service primitive 40 service ieee 11 312 integrated 421 provided transport layer 507 provided transport layer 357 relation protocols service user transport serving gprs support node session session initiation protocol 735 compared h 734 session key session layer 45 session routing set top box sgsn see serving gprs support node sha see secure hash algorithm shannon claude 95 shannon limit shared secret authentication using 833 short interframe spacing short message service shortest path routing 368 sifs see short interframe spacing signal balanced 130 signal noise ratio signaling common channel band robbed bit signature block signatures digital 806 signing code silly window syndrome sim card simple internet protocol plus index simple mail transfer protocol 641 simple object access protocol simplex link single mode fiber sink tree sip see session initiation protocol sipp see simple internet protocol plus skin player sla see service level agreement sliding window tcp 568 sliding window protocol bit 232 244 232 slip see serial line internet protocol slot slotted aloha 266 slow start tcp threshold smart phone smiley sms see short message service smtp see simple mail transfer protocol snail mail snr see signal noise ratio soap see simple object access protocol social issues 16 security 869 social network socket berkeley 507 tcp socket programming 507 soft handoff soft decision decoding soliton sonet see synchronous optical network source port spam spanning tree spanning tree bridge 340 spanning tree poem spe see synchronous payload envelope spectrum allocation 183 spectrum auction speed light splitter spoofing dns 850 spot beam spread spectrum direct sequence frequency hopping 929 index sprint spyware ssl see secure sockets layer sst see structured stream transport stack protocol 32 standard de facto de jure stateful firewall static channel allocation 261 static page web static routing static web page 663 station keeping statistical multiplexing statistical time division multiplexing stdm see statistical time division multiplexing steganography 867 stop wait protocol 226 store forward packet switching stream cipher mode 791 stream control transmission protocol streaming audio video 734 streaming live media 724 streaming media streaming stored media 720 strowger gear structured p2p network structured stream transport sts see synchronous transport signal stub client server stub area stub network style sheet 671 sublayer medium access control 350 subnet 446 subnet internet protocol 446 subnet mask subnetting subscriber identity module substitution cipher 770 superframe extended supergroup supernet swarm bittorrent switch compared bridge hub 342 ethernet switched ethernet 290 switching 164 circuit 162 cut data link layer 349 label 474 message packet 164 store forward switching element symbol symbol rate symmetric key cryptography 793 aes 787 cipher feedback mode 790 counter mode 792 des 782 electronic code book mode 788 rijndael 787 stream cipher mode 791 triple des 783 symmetric key signature 799 syn cookie tcp syn flood attack synchronization synchronous connection oriented link synchronous digital hierarchy 159 synchronous optical network 159 synchronous payload envelope synchronous transport signal system distributed systematic code t1 carrier 155 t1 line tag html 666 tag switching tail drop talkspurt tandem office tcg see trusted computing group tcm see trellis coded modulation tcp see transmission control protocol tdd see time division duplex tdm see time division multiplexing telco 930 index telephone cordless mobile 179 smart telephone system 164 end office guard band guard time local loop 152 mobile 179 modem modulation 132 point presence politics 144 structure 142 switching 164 tandem office toll office trunk 160 telephone trunk 160 television cable 186 community antenna 180 temporal masking temporary key integrity protocol terminal voip text messaging texting third generation partnership project third generation mobile phone network 69 179 third party web cookie threats security 848 three bears problem three way handshake tier isp tier network time division duplex 317 time division multiplexing 156 time slot timer management tcp 571 timestamp tcp timing wheel tit tat strategy bittorrent tkip see temporary key integrity protocol tls see transport layer security token token bucket algorithm 411 token bus token management token passing protocol 272 token ring toll connecting trunk toll office top level domain torrent bittorrent tpdu see transport protocol data unit tpm see trusted platform module traceroute tracker bittorrent traffic analysis traffic engineering traffic policing traffic shaping 411 traffic throttling 401 traffic aware routing 396 trailer transcoding transfer agent 625 631 transit service transmission baseband light 116 passband wireless 116 transmission control protocol tcp 582 acknowledgement clock application layer 48 comparison osi 51 congestion collapse congestion control 581 congestion window connection establishment 562 connection management 565 connection release critique 54 cumulative acknowledgement delayed acknowledgement duplicate acknowledgement fast recovery fast retransmission future 582 introduction 553 karn algorithm keepalive timer link layer maximum segment size maximum transfer unit nagle algorithm performance 599 931 index transmission control protocol continued persistence timer port reference model 51 retransmission timeout sawtooth segment header 560 selective acknowledgement silly window syndrome sliding window 568 slow start slow start threshold socket speeding 599 syn cookie syn flood attack timer management 571 timestamp option transport layer urgent data well known port window probe window scale transmission line transmission media guided 105 transmission opportunity transmit power control ieee 11 transponder transport structured stream transport entity transport layer addressing 512 congestion control 541 delay tolerant networking 605 error control 527 flow control 527 performance 599 port security tcp 582 tcp ip transport protocols 530 transport service 507 udp 552 transport mode ip security transport protocol 530 582 design issues 530 transport protocol data unit transport service access point transport service primitive 500 transport service provider transport service user transposition cipher 772 tree walk protocol adaptive 277 trellis coded modulation triangle routing trigram triple des 783 trunk telephone 160 trust anchor trusted computing trusted platform module tsap see transport service access point tunnel mode ipsec tunneling 431 twisted pair 97 unshielded twitter two army problem 519 txop see transmission opportunity u u nii see unlicensed national information infrastructure ubiquitous computing udp see user datagram protocol uhf rfid 74 ultra wideband umts see universal mobile telecommunications system unchoked peer bittorrent unicast unicasting uniform resource identifier uniform resource locator uniform resource name universal mobile telecommunications system universal serial bus unlicensed national information infrastructure unshielded twisted pair unstructured p2p network upstream proxy urgent data uri see uniform resource identifier url see scheme urn see uniform resource name usb see universal serial bus 932 index user mobile 13 user agent user datagram protocol 552 550 port real time transmission 552 remote procedure call 543 rtp 549 utopia protocol 222 utp see unshielded twisted pair uwb see ultra wideband v v modem v modem v modem v modem vacation agent vampire tap van allen belt vc see virtual circuit small aperture terminal video interlaced progressive streaming 712 video compression video field video demand video server virtual circuit 361 virtual circuit network comparison datagram network 362 virtual lan 349 virtual private network 822 virtual circuit network virus visitor location register vlan see virtual lan vlr see visitor location register vocal tract vocoder vod see video demand voice ip 734 voice signals digitizing 154 voice grade line voip see voice ip vpn see virtual private network vsat see small aperture terminal w w3c see world wide web consortium walled garden walsh code wan see wide area network wap see wireless application protocol watermarking waveform coding wavelength wavelength division multiplexing 160 wcdma see wideband code division multiple access wdm see wavelength division multiplexing wearable computer web see world wide web web application web browser extension 860 helper application plug 654 proxy 742 webmail 646 weighted fair queueing well known port tcp wep see wired equivalent privacy wfq see weighted fair queueing white space whitening wide area network 27 wideband code division multiple access wifi see ieee 11 wifi alliance wifi protected access wifi protected access 312 wiki wikipedia wimax see ieee 16 wimax forum window probe tcp window scale tcp wine load shedding policy wired equivalent privacy 933 index wireless broadband 320 fixed wireless application protocol wireless issues 541 wireless lan 280 312 wireless lan see ieee 11 wireless lan protocol 280 wireless lan protocols 280 wireless router wireless security 827 wireless transmission 116 work factor cryptographic world wide web 697 ajax 683 architectural overview 649 caching 692 cascading style sheets 672 client side 652 client side page generation 678 connections 686 cookies 662 crawling dynamic pages forms 680 html 667 http 684 message headers 690 methods 688 mime types 655 mobile web 695 page proxy 743 search 697 security 860 tracking server side 658 server side page generation 676 static web pages 672 world wide web consortium wormhole routing wpa see wifi protected access wpa2 see wifi protected access x x standard x 810 xhtml see extended hypertext markup language xml see extensible markup language xslt see extensible stylesheet language transformation z zipf law zone dns 620 multimedia also andrew tanenbaum modern operating systems 3rd ed worldwide best seller incorporates latest developments operating systems book starts chapters principles including processes memory management file systems goes three chapter long case studies linux windows symbian tanenbaum experience designer three operating systems amoeba globe minix gives background authors match final chapter distills long experience advice operating system designers also andrew tanenbaum albert woodhull operating systems design implementation 3rd ed textbooks operating systems long theory short practice one different addition usual material processes memory management file systems contains cd rom source code c small complete posixconformant operating system called minix see www minix3 org principles illustrated showing apply minix reader also compile test experiment minix leading depth knowledge operating system really works also andrew tanenbaum structured computer organization 5th ed computer structured hierarchy levels hardware operating system book treats starting transistor works ending operating system design previous experience either hardware software needed follow book however topics self contained explained simple terms starting right beginning running examples used throughout book range high end ultrasparc iii ever popular x86 pentium tiny intel used small embedded systems also andrew tanenbaum maarten van steen distributed systems principles paradigms 2nd ed distributed systems becoming ever important world book explains principles illustrates numerous examples among topics covered architectures processes communication naming synchronization consistency fault tolerance security examples taken distributed object based file web based coordination based systems authors andrew tanenbaum b degree ph university california berkeley currently professor computer science vrije universiteit taught operating systems networks related topics years current research highly reliable operating systems although worked compilers distributed systems security topics years research projects led refereed papers journals conferences prof tanenbaum also co authored five books appeared editions books translated languages ranging basque thai used universities world versions language edition combinations listed www cs vu nl ast publications prof tanenbaum also produced considerable volume software including amsterdam compiler kit retargetable portable compiler amoeba early distributed system used lans globe wide area distributed system also author minix small unix clone initially intended use student programming labs direct inspiration linux platform linux initially developed current version minix called minix focused extremely reliable secure operating system prof tanenbaum consider work done computer equipped reset button living person ever experienced system crash minix going open source project invited contribute go www minix3 org download free copy find happening tanenbaum fellow acm fellow ieee member royal netherlands academy arts sciences also numerous scientific prizes including taa mcguffey award computer science engineering books ieee james h mulligan jr education medal taa texty award computer science engineering books acm sigcse award outstanding contributions computer science education acm karl v karlstrom outstanding educator award home page world wide web found http www cs vu nl ast david j wetherall associate professor computer science engineering university washington seattle advisor intel labs seattle hails australia received b e electrical enginering university western australia ph computer science prof wetherall worked area networking past two decades research focused network systems especially wireless networks mobile computing design internet protocols network measurement received acm sigcomm test time award research pioneered active networks architecture rapidly introducing new network services received ieee william bennett prize breakthroughs internet mapping research recognized nsf career award became sloan fellow well teaching networking prof wetherall participates networking research community co chaired program committees sigcomm nsdi mobisys cofounded acm hotnets workshops served numerous program committees networking conferences editor acm computer communication review home page world wide web found http djw cs washington edu